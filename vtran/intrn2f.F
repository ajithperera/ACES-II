
      SUBROUTINE INTRN2F(EVEC,AOINT,BUF1,RHF,NBASIS,NBAS,
     &                   NMO,NSTART,NEND,ISIZE,IOFFN,NSIZE,
     &                   ISPIN,IREORD)
C
C TRANSFORMS SECOND; THIRD; AND FOURTH INDEX FOR INTEGRALS IIJJ
C IN CASE OF A FULL TRANSFORMATION.
C
CEND
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL RHF
      CHARACTER*80 FNAME
      INTEGER DIRPRD,DISZAO,DISZMO
C
      DIMENSION EVEC(1),AOINT(NSIZE),
     &          BUF1(100),BUF2(100),IREORD(1)
      DIMENSION NBAS(8),NMO(8),ISIZE(8),IOFFN(8,2)
      DIMENSION NSTART(8),NEND(8)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/AOOFST/INDOCC(8,2)   
      COMMON/SYMINF/NDUMMY,NIRREP,IRREPA(255,2),DIRPRD(8,8)
C
      DATA AZERO,ONE/0.D0,1.D0/
C
      IF(.NOT.RHF) CALL GFNAME('HALFT   ',FNAME,ILENGTH)
C
C LOOP OVER ALL IRREPS
C
      IOFF2=1
      IOFF3=1
C
      DO 1000 IRREP1=1,NIRREP-1
C
       IOFF2I=IOFF2
       IOFF3I=IOFF3
       NAOI=NBAS(IRREP1)
       NMOI=NMO(IRREP1)
       NSTARTX=NSTART(IRREP1)
       NENDX=NEND(IRREP1)
       NUMDIS=NMOI*(NENDX-NSTARTX+1)
C
C DETERMINE SIZE OF TWO-DIMENSIONAL INTEGRAL ARRAY
C
      DISZAO=0
      DO 10 IRREP2=IRREP1+1,NIRREP
        DISZAO=DISZAO+NBAS(IRREP2)*(NBAS(IRREP2)+1)/2
10    CONTINUE

#ifdef _DEBUG_LVLM
       Write(6,*)
       write(*,"(t3,a,a,2(1x,i2))"), "@INTRN2: The 1-index",
     &      " transformed Ints for irrep at entry 2 intrn2",
     &       Irrep, ispin
       Ioff = 0
       Do KL = 1, DISZAO
          Write(6,*), "Printing the distribution No. ", KL
          Write(*,'(4(1X,F12.7)))'), (Aoint(Ioff + I), I=1, NAOI*NMOI)
          Ioff = Ioff + NAOI*NMOI
       End Do
#endif
C
C LOOP OVER ALL ORBITALS
C
       IOFFC1=INDOCC(IRREP1,ISPIN)
C
       DO 100 IMO=NSTARTX,NENDX
C
C  TRANSFORM SECOND INDEX  (Mu I | SIGMA RHO) --> (P I | SIGMA RHO )
C
        CALL XGEMM('T','N',NMOI,DISZAO,NAOI,ONE,EVEC(IOFFC1),
     &             NAOI,AOINT(IOFF2),NAOI,AZERO,BUF1,NMOI)
C
        CALL TRANSP(BUF1,AOINT(IOFF3),DISZAO,NMOI)
C
        IOFF2=IOFF2+NAOI*DISZAO
        IOFF3=IOFF3+NMOI*DISZAO
C
100    CONTINUE
C
C  NOW WE HAVE THE (PI,SIGMA RHO) INTEGRALS ORDERED AS   X X P I 
C
C     FOR UHF, WRITE INTEGRALS TO DISK SINCE WE WILL USE THEM AGAIN
C
#ifdef _DEBUG_LVLM
       Write(6,*)
       write(*,"(t3,a,a,2(1x,i2))"), "@INTRN2: The 2-index",
     &      " transformed Ints for irrep after stage 2 intrn2",
     &       Irrep, ispin
       Ioff = ioff3i
       Do KL = 1, NUMDIS
          Write(6,*), "Printing the distribution No. ", KL
          Write(*,'(4(1X,F12.7)))'), (Aoint(Ioff + I-1), I=1, diszao)
          Ioff = Ioff + Diszao
       End Do
#endif

       IF(.NOT.RHF) THEN
C
        OPEN(UNIT=79,FORM='UNFORMATTED',STATUS='UNKNOWN',
     &        ACCESS='SEQUENTIAL',FILE=FNAME(1:ILENGTH))
C
        REWIND(UNIT=79)
C
        IOFFW=IOFF3I
        DO 101 I=1,NUMDIS
         WRITE(79) (AOINT(IND),IND=IOFFW,IOFFW+DISZAO-1)
         IOFFW=IOFFW+DISZAO
101     CONTINUE
C
        REWIND(UNIT=79)
C
       ENDIF
C
C NOW TRANSFORM NEW LHS TO RS, SPIN CASE ISPIN,ISPIN
C
       IOFF4=IOFF3I
       IOFF5=IOFF3I
C
C LOOP OVER NUMBER OF DISTRIBUTION (I,P OF IRREP IRREP)
C
       DO 200 IDIS=1,NUMDIS
C
C LOOP OVER SECOND IRREP IRREP2
C
        DO 2000 IRREP2=IRREP1+1,NIRREP
C
         NAOI2=NBAS(IRREP2)
         NMOI2=NMO(IRREP2)
C
         IX=1+NAOI2*NAOI2
         IOFFC2=INDOCC(IRREP2,ISPIN)
C
         CALL EXPND2(AOINT(IOFF4),BUF1,NAOI2)
C     
         CALL GHTRAN(BUF1,BUF1,EVEC,IOFFC2,IOFFC2,1,1,BUF1(IX),
     &               0,1,NAOI2,NAOI2,NMOI2,NMOI2)
C
         CALL SQUEZ2(BUF1,AOINT(IOFF5),NMOI2)
C
         IOFF4=IOFF4+NAOI2*(NAOI2+1)/2
         IOFF5=IOFF5+NMOI2*(NMOI2+1)/2
2000    CONTINUE
C
200    CONTINUE
C
C DUMP INTEGRALS TO HF2
C
      ILNBUF=600
      IOFF=1+ILNBUF
      CALL DHF22F(AOINT(IOFF3I),BUF1,BUF1(IOFF),ILNBUF,IRREP1,
     &            NMOI,NMO,NSTARTX,NENDX,IOFFN(1,ISPIN),
     &            IOFFN(1,ISPIN),IREORD,RHF,ISPIN)
C
      IF(.NOT.RHF) THEN
       IOFFW=IOFF3I
       DO 1101 I=1,NUMDIS
        READ(79) (AOINT(IND),IND=IOFFW,IOFFW+DISZAO-1)
        IOFFW=IOFFW+DISZAO
1101   CONTINUE
C
       CLOSE(UNIT=79,STATUS='DELETE')
C
C NOW TRANSFORM NEW LHS TO RS, SPIN CASE ISPIN,ISPIN
C
       IOFF4=IOFF3I
       IOFF5=IOFF3I
C
C LOOP OVER NUMBER OF DISTRIBUTION (I,P OF IRREP IRREP)
C
       DO 1200 IDIS=1,NUMDIS
C
C LOOP OVER SECOND IRREP IRREP2
C
        DO 12000 IRREP2=IRREP1+1,NIRREP
C
         NAOI2=NBAS(IRREP2)
         NMOI2=NMO(IRREP2)
C
         IX=1+NAOI2*NAOI2
         IOFFC2=INDOCC(IRREP2,3-ISPIN)
C
         CALL EXPND2(AOINT(IOFF4),BUF1,NAOI2)
C
         CALL GHTRAN(BUF1,BUF1,EVEC,IOFFC2,IOFFC2,1,1,BUF1(IX),
     &               0,1,NAOI2,NAOI2,NMOI2,NMOI2)
C
         CALL SQUEZ2(BUF1,AOINT(IOFF5),NMOI2)
C
         IOFF4=IOFF4+NAOI2*(NAOI2+1)/2
         IOFF5=IOFF5+NMOI2*(NMOI2+1)/2
12000   CONTINUE
C
1200    CONTINUE
C 
C DUMP INTEGRALS TO HF2
C
      ILNBUF=600
      IOFF=1+ILNBUF
      CALL DHF22F(AOINT(IOFF3I),BUF1,BUF1(IOFF),ILNBUF,IRREP1,
     &            NMOI,NMO,NSTARTX,NENDX,IOFFN(1,ISPIN),
     &            IOFFN(1,3-ISPIN),IREORD,RHF,ISPIN+2)
C
      ENDIF
C
1000  CONTINUE
C
      RETURN
      END
