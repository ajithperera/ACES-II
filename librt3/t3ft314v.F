      SUBROUTINE T3FT314V(D3T3EXP,CORE,MAXCOR,ISPIN,LEN,LENEXP,
     1                    IRPIJK,IJKVAL,IADBLK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER VRT,POP,DIRPRD,DISSIZ
      DIMENSION D3T3EXP(LENEXP),CORE(1)
      DIMENSION IADBLK(8)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYM/    POP(8,2),VRT(8,2),NT1(2),NFMI(2),NFEA(2)
      COMMON /FLAGS/  IFLAGS(100)
      EQUIVALENCE(ICLLVL,IFLAGS( 2))
      EQUIVALENCE(IDRLVL,IFLAGS( 3))
      COMMON /FILES/  LUOUT,MOINTS
C
      COMMON /T3OFF/  IOFFVV(8,8,10),IOFFOO(8,8,10),IOFFVO(8,8,4)
      COMMON /T3IOOF/ IJKPOS(8,8,8,2),IJKLEN(36,8,4),IJKOFF(36,8,4),
     1                NCOMB(4)
C
      INDEX(I) = I*(I-1)/2
C
      I000  = 1
      I010  = I000 + NFEA(ISPIN)
      I020  = I010 + LEN
      I030  = I020 + LENEXP
      NEED  = I030 * IINTFP
      IF(NEED.GT.MAXCOR)THEN
      WRITE(LUOUT,1010) NEED,MAXCOR
 1010 FORMAT(' @T3FT314V-F, Insufficient memory. Need ',I10,' Got ',I10)
      CALL INSMEM('T3FT314V',NEED,MAXCOR)
      ENDIF
C
C     If this is a CCSDT calculation, we read the FEA intermediate.
C     Otherwise, we read the OCC-OCC block of the Fock matrix.
C
      IF(ICLLVL.EQ.18)THEN
      LISTF = 92
      LPART = ISPIN
      ELSE
      LISTF = 92
      LPART = ISPIN + 2
      ENDIF

      CALL GETLST(CORE(I000),1,1,2,LPART,LISTF)
C     CALL RMDIAG(CORE(I000),VRT(1,ISPIN),NIRREP)
C
      CALL GETLIST(CORE(I010),IJKVAL,1,1,IRPIJK,1 + 3*(ISPIN-1) + 4)
C
      CALL ZERO(CORE(I020),LENEXP)
      CALL SYMEXPT3(CORE(I010),CORE(I020),IADBLK,ISPIN,IRPIJK)
C
      IOFF1 = I020
      IOFF2 = I000
      IOFF3 = 1
      DO   10 IRPC=1,NIRREP
      IRPE  = IRPC
      IRPAB = DIRPRD(IRPC,IRPIJK)
C
      IF(VRT(IRPC,ISPIN).EQ.0.OR.IRPDPD(IRPAB,ISPIN).EQ.0) GOTO 10
C
      DISSIZ = IRPDPD(IRPAB,ISPIN)
      NDIS   = VRT(IRPC,ISPIN)
      CALL XGEMM('N','N',DISSIZ,NDIS,NDIS,1.0D+00,
     1           CORE(IOFF1),DISSIZ,CORE(IOFF2),NDIS,1.0D+00,
     1           D3T3EXP(IOFF3),DISSIZ)
C
      IOFF1 = IOFF1 + DISSIZ * NDIS
      IOFF2 = IOFF2 + NDIS   * NDIS
      IOFF3 = IOFF3 + DISSIZ * NDIS
   10 CONTINUE
#ifdef _DEBUG_LVLM
      Write(*,*) "The T3*FVV contribution"
      call checksum("T3FVV", D3T3EXP, Lenexp)
#endif 
C   
      RETURN
      END
