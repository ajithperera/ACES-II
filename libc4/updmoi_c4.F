      SUBROUTINE UPDMOI_C4(LSTDIS,DISSIZ,LSTSPN,LSTNUM,IENTER,IOFF)
      IMPLICIT INTEGER (A-Z)
      CHARACTER*8 NAMES(5)
      CHARACTER*80 FNAME
      LOGICAL YESNO,YESNO1,YESNO2
      DIMENSION TOTREC(5),TOTWRD(5),ITOPRC(5),JUNK(8192)
      COMMON//ICORE(1)
      COMMON/LISTS/MOIO(10,500),MOIOWD(10,500),MOIOSZ(10,500),
     &             MOIODS(10,500),MOIOFL(10,500)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/MACHSP2/MASK1,MASK2,ISHFSZ
      COMMON/FILSPC/ILNBUF,IPRCLN,IPRCWD
      COMMON/FSTRIPE/NUMSPLIT(5)
      COMMON/FLAGS/IFLAGS(100)
      COMMON/IOPOS/ICRSIZ,ICHCSZ,IOFFX(2),LENREC
      COMMON/CACHEINF/CACHSIZ,CACHSZP1,CACHDIR(100),CACHPOS(100),
     &                CACHFILE(100),CACHMOD(100),OLDEST
      DATA NAMES /'MOINTS  ','GAMLAM  ','MOABCD  ','DERINT  ',
     &            'DERGAM  '/
      SAVE TOTREC,TOTWRD
      UPACKR(I)=AND(I,MASK1)
      CALL IZERO(JUNK,8192)
      DO 1001 I=1,5
       ITOPRC(I)=TOTREC(I)
1001  CONTINUE
      IFIVE=5
      IF(IENTER.EQ.2)THEN
       CALL PUTREC_C4(20,'JOBARC','TOTRECMO',IFIVE,TOTREC)
       CALL PUTREC_C4(20,'JOBARC','TOTWRDMO',IFIVE,TOTWRD)
       RETURN
      ENDIF
      IF(IENTER.EQ.3)THEN
       CALL GETREC_C4(20,'JOBARC','TOTRECMO',IFIVE,TOTREC)
       CALL GETREC_C4(20,'JOBARC','TOTWRDMO',IFIVE,TOTWRD)
       RETURN
      ENDIF
      ITYPE=1+(LSTNUM-1)/100
      IF(IENTER.EQ.1)THEN
       TOTREC(ITYPE)=1
       TOTWRD(ITYPE)=0
       ITOPRC(ITYPE)=0
      ENDIF
      IF( MOIO(LSTSPN,LSTNUM).NE.0) THEN
       IF(MOIOSZ(LSTSPN,LSTNUM).EQ.DISSIZ.AND.
     $    MOIODS(LSTSPN,LSTNUM).EQ.LSTDIS ) THEN
        RETURN
       ELSE
        write(6,*)'tried to change size of existing list: ',
     $        LSTSPN, ',', LSTNUM
        write(6,*)'current: distributions -- ',
     $        MOIODS(LSTSPN,LSTNUM), ' size -- ', MOIOSZ(LSTSPN,LSTNUM)
        write(6,*)'requested: distributions -- ',
     $        LSTDIS, ' size -- ', DISSIZ
        CALL ERREX
       ENDIF
      ENDIF
      IFILE=ITYPE+49
      CALL GFNAME(NAMES(ITYPE),FNAME,ILENGTH)
      INQUIRE(FILE=FNAME(1:ILENGTH),EXIST=YESNO1,OPENED=YESNO2)
      IF(.NOT.YESNO1.OR..NOT.YESNO2)THEN
       CALL OPNFIL_C4(ITYPE)
      ENDIF
      MOIOSZ(LSTSPN,LSTNUM)=DISSIZ
      MOIODS(LSTSPN,LSTNUM)=LSTDIS
      MOIOFL(LSTSPN,LSTNUM)=IFILE
      IF(IOFF.EQ.-1)THEN
       MOIOWD(LSTSPN,LSTNUM)=1
       TOTREC(ITYPE)=TOTREC(ITYPE)+1
       MOIO(LSTSPN,LSTNUM)=TOTREC(ITYPE)
       TOTWRD(ITYPE)=0
      ELSE
       MOIOWD(LSTSPN,LSTNUM)=TOTWRD(ITYPE)+1
       IF(TOTWRD(ITYPE).EQ.IPRCWD)THEN
        MOIOWD(LSTSPN,LSTNUM)=1
        TOTREC(ITYPE)=TOTREC(ITYPE)+1
       ENDIF
       MOIO(LSTSPN,LSTNUM)=TOTREC(ITYPE)
      ENDIF
      NWORDS=LSTDIS*DISSIZ*IINTFP
      NFULL=NWORDS/IPRCWD
      NPART=MOD(NWORDS,IPRCWD)
      TOTREC(ITYPE)=TOTREC(ITYPE)+NFULL
      NLEFT=IPRCWD-TOTWRD(ITYPE) 
      IF(NLEFT.GE.NPART)THEN
       TOTWRD(ITYPE)=TOTWRD(ITYPE)+NPART
      ELSE
       TOTWRD(ITYPE)=NPART-NLEFT
       TOTREC(ITYPE)=TOTREC(ITYPE)+1
      ENDIF
      IF(TOTREC(ITYPE).GT.ITOPRC(ITYPE))THEN
       IFILE0=CACHFILE(1)
       IREC  =UPACKR(CACHDIR(1))
       NSPLIT=NUMSPLIT(IFILE-49)
       IF(IREC.NE.0.AND.IFILE0.NE.0)THEN
        CALL WRDIR_C4(IFILE0,IREC,ICORE(CACHPOS(1)),ICHCSZ,JUNK)
       ENDIF
       CALL IZERO(ICORE(CACHPOS(1)),ICHCSZ)
       IF(NSPLIT.EQ.0)THEN
        CALL WRDIR_C4(IFILE,TOTREC(ITYPE),ICORE(CACHPOS(1)),ICHCSZ,JUNK)
       ELSE
        IWRITE=NSPLIT*(1+(TOTREC(ITYPE)-1)/NSPLIT)
        DO 1055 IOUT=1,NSPLIT
         IRECORD=IWRITE-IOUT+1
         IF(IRECORD.GT.ITOPRC(ITYPE))THEN
          CALL WRDIR_C4(IFILE,IRECORD,ICORE(CACHPOS(1)),ICHCSZ,JUNK)
         ENDIF
1055    CONTINUE
       ENDIF
       CACHDIR(1)=0
       CACHFILE(1)=0
      ENDIF
      RETURN
      END
