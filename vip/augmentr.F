      SUBROUTINE AUGMENTR(SCR, MAXCOR, ISIDE, IUHF, ICALC)
C
C
C AUGMENT EXISTING SUBSPACE MATRIX - NOTE THAT THIS IS NONHERMITIAN
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION SCR(MAXCOR)
      INTEGER SIRREP
      logical print
C
      PARAMETER (MAXORD=100)
C
      COMMON/LISTDAV/LISTC, LISTHC, LISTH0
      COMMON/EXTINF/NDIMR,IOLDEST
      COMMON/EXTINF3/IROOT,LOCROOT,ITROOT
      COMMON/EXTRAP/MAXEXP,NREDUCE,NTOL,NSIZEC
      COMMON/RMAT/ R(10000), P(10000)
      COMMON /SINFO/ NS(8), SIRREP
C
      INDXF(I,J,N)=I+(J-1)*N
      IGET(I)=1+MOD(IOLDEST+MAXORD-I,MAXORD+1)
C
C  FIRST DETERMINE OVERLAP MATRIX 'P' OF VECTORS PROJECTED ON
C      EXCITATION PATTERN (ON COLUMN 5 LISTH0)
C
      I000=1
      I010=I000+NSIZEC
      I020=I010+NSIZEC
      I030=I020+NSIZEC
      CALL GETLST(SCR(I010),IGET(1),1,1,ISIDE,LISTC)
      CALL GETLST(SCR(I020),5,1,1,1,LISTH0)
      CALL VECPRD(SCR(I020),SCR(I010),SCR(I000),NSIZEC)
      IF(IUHF.EQ.0)THEN
       CALL SPNTSING(NSIZEC,SCR(I000),SCR(I020),MAXCOR-I020+1,SIRREP,
     $      ICALC)
      ENDIF
      DO 5 I=1,NDIMR
       CALL GETLST(SCR(I010),IGET(I),1,1,ISIDE,LISTC)
       P(INDXF(1,I,MAXORD))=SDOT(NSIZEC,SCR(I000),1,SCR(I010),1)
       P(INDXF(I,1,MAXORD)) =  P(INDXF(1,I,MAXORD))
 5    CONTINUE 
C
C  UPDATE R-MATRIX
C
      print = .false.
      CALL GETLST(SCR(I000),IGET(1),1,1,ISIDE,LISTC)
      IF(IUHF.EQ.0)THEN
       CALL SPNTSING(NSIZEC,SCR(I000),SCR(I010),MAXCOR-I010+1,SIRREP,
     $      ICALC)
      ENDIF
      IF (PRINT) THEN
         WRITE(6,*) ' AUGMENTR, CURRENT VECTOR C'
         CALL OUTPUT(SCR(I000),1,1,1,NSIZEC,1,NSIZEC,1)
         WRITE(6,*) ' HC VECTORS '
      ENDIF
CSSS      Print*, Iget(1)
CSSS     Write(6,"(6(1x,F10.5))") (scr(i+i000-1),i=1,nsizec)
      DO 10 I=1,NDIMR
CSSS     Print*, Iget(i)
       CALL GETLST(SCR(I010),IGET(I),1,1,ISIDE,LISTHC)
CSSS       Write(6,"(6(1x,F10.5))") (scr(j+i010-1),j=1,nsizec)
      IF (PRINT) THEN
         CALL OUTPUT(SCR(I010),1,1,1,NSIZEC,1,NSIZEC,1)
      ENDIF
       R(INDXF(1,I,MAXORD))=SDOT(NSIZEC,SCR(I000),1,SCR(I010),1)
CSSS       Print*, "1", INDXF(1,I,MAXORD),R(INDXF(1,I,MAXORD))
10    CONTINUE 
      CALL GETLST(SCR(I000),IGET(1),1,1,ISIDE,LISTHC)
CSSS      Write(6,*) "-----------"
CSSS      Print*, Iget(1)
CSSS      Write(6,"(6(1x,F10.5))") (scr(i+i000-1),i=1,nsizec)
      IF(IUHF.EQ.0)THEN
       CALL SPNTSING(NSIZEC,SCR(I000),SCR(I010),MAXCOR-I010+1,SIRREP,
     $      ICALC)
      IF (PRINT) THEN
         WRITE(6,*) ' AUGMENTR, CURRENT VECTOR HC'
         CALL OUTPUT(SCR(I000),1,1,1,NSIZEC,1,NSIZEC,1)
         WRITE(6,*) ' C VECTORS '
      ENDIF
      ENDIF
      DO 20 I=1,NDIMR
       CALL GETLST(SCR(I010),IGET(I),1,1,ISIDE,LISTC)
CSSS       Print*, Iget(i)
CSSS       Write(6,"(6(1x,F10.5))") (scr(j+i010-1),j=1,nsizec)
       IF (PRINT) THEN
          CALL OUTPUT(SCR(I010),1,1,1,NSIZEC,1,NSIZEC,1)
       ENDIF
       R(INDXF(I,1,MAXORD))=SDOT(NSIZEC,SCR(I000),1,SCR(I010),1) 
CSSS       Print*, "2",INDXF(I,1,MAXORD),R(INDXF(I,1,MAXORD))
 20   CONTINUE
C
      RETURN
      END
