
      SUBROUTINE CREATE_IPLISTS(IUHF,ITYP)
C
C  CREATES LISTS USED IN IP-EOM CALCULATIONS.
C
      IMPLICIT INTEGER (A-Z)
      DIMENSION NS(8), MDIM(2)
      LOGICAL PRINT, LEFTHAND, SINGONLY, DROPCORE
C     
      COMMON/EXTRAP/MAXEXP,NREDUCE,NTOL,NSIZEC

#include "flags.com"
#include "flags2.com"
#include "machsp.com"
#include "sym.com"
#include "syminf.com"
#include "sympop.com"

      COMMON/LISTDIP/DIPOO(2),DIPOV(2),DIPVV(2)
      COMMON/SLISTS/LS1IN,LS1OUT,LS2IN(2,2),LS2OUT(2,2)
      COMMON/LISTDENS/DENSOO(2),DENSOV(2),DENSVV(2)
      COMMON/LISTDAV/LISTC,LISTHC,LISTH0
      COMMON/IPCALC/LEFTHAND,SINGONLY,DROPCORE
      COMMON/LISTF/LISTFJA,LISTFAJ,LISTFAB,LISTFIJ,LISTF0
     &             NDIMFLST(2,4)
      COMMON/STINFO/ITOTALS,STMODE,LISTST,STCALC,NSIZEST
C
C  IF ITYP = 1 or ITYP = 3 THEN
C  THE MAXIMUM SIZES OF THE LISTS ARE DETERMINED BY PUTTING NS TO THE 
C  MAXIMUM DIMENSION OF IPMAT, AS THIS IS DONE FIRST.
C
C  IF ITYP = 2
C  THE MAXIMUM DIMENSION OF THE LISTS ARE DETERMINED BY PUTTING NS TO 1
C
C  IF ITYP = 2 OR ITYP = 3
C  IN ADDITION THE LISTDAV, LISTDIP AND LISTDENS ARE INITIALIZED.
C
C  CREATE S1 LISTS (MAXIMUM VALUES OF THE POINTERS)
C 
      MAXDIM = 0
      DO 5 ISPIN = 1, 1+IUHF
      DO 10 IRREP = 1, NIRREP
         IF ((ITYP .EQ. 1) .OR. (ITYP .EQ. 3)) THEN
            LEN = 0
            DO 12 KSPIN = 1, 1 + IUHF
               CALL GETNIP(NIP, IRREP, KSPIN, IUHF)
               LEN = MAX(LEN, NIP)
 12         CONTINUE
         ELSEIF (ITYP.EQ.2) THEN
            LEN = 1
         ENDIF
         SIZES1 = POP(IRREP,ISPIN) * LEN
         MAXDIM = MAX(SIZES1,MAXDIM)
 10   CONTINUE
      MDIM(ISPIN) = MAXDIM
 5    CONTINUE

      call aces_io_remove(54,'DERGAM')

      INEWFIL = 0
C
C  THE VERY FIRST TIME LIST 4?? IS ADDRESSED, INEWFIL = 1 OTHERWHISE 0
C
      CALL UPDMOI(1, MDIM(1), 1, LS1IN, INEWFIL, 0)
      INEWFIL = 0
      IF (IUHF.NE.0) THEN
         CALL UPDMOI(1, MDIM(2), 2, LS1IN, INEWFIL, 0)
      ENDIF
      DO 7 ISPIN = 1, 1+IUHF
         CALL UPDMOI(1, MDIM(ISPIN), ISPIN, LS1OUT, INEWFIL, 0)
 7    CONTINUE
C
C  NOW CREATE S2 LISTS
C
      DO 15 ISPIN = 1, 1 + IUHF
C
      DO 25 MSPIN = 1, 1 + IUHF
         IF (IUHF .EQ. 0 ) THEN
            DISTYP = 14
         ELSE
            IF (ISPIN .EQ.  MSPIN) THEN
               DISTYP = ISPIN + 2 
            ELSE
               DISTYP = 14
            ENDIF
         ENDIF
C
C  DISTYP DENOTES IJ LABELS, RIGHT HAND LABELS DO NOT EXIST.
C
      ISYTYP(1, LS2IN(ISPIN, MSPIN))  = DISTYP
      ISYTYP(1, LS2OUT(ISPIN, MSPIN)) = DISTYP
C
C  FIRST DETERMINE MAXIMUM NUMBER OF S-COEFFICIENTS AND CORRESPONDING IRREP
C  FOR THE SPIN VARIANT UNDER CONSIDERATION.
C
      MAXIRREP = 0
      MAXDIM   = 0
C
      DO 20 IRREP = 1, NIRREP
C
C  DETERMINE MAX NIP OVER THE TWO SPIN VARIANTS (SING-TRIP SPLITTING)
C
         IF ((ITYP .EQ. 1) .OR. (ITYP .EQ. 3)) THEN
            CALL IZERO(NS, 8)
            NS(IRREP) = 1
            LEN = 0
            DO 22 KSPIN = 1, 1 + IUHF
               CALL GETNIP(NIP, IRREP, KSPIN, IUHF)
               LEN = MAX(LEN, NIP)
 22         CONTINUE
         ELSEIF (ITYP .EQ. 2) THEN
            NIP = 1
         ENDIF
C
C  NOW DETERMINE NUMBER OF S-COEFFICIENTS
C
      CALL IZERO(NS,8)
      NS(IRREP) = NIP
      NUMS = 0
      DO 30 IRREPR = 1, NIRREP
         IRREPL = DIRPRD(IRREPR, IRREP)
         NUMDSS = VRT(IRREPR, MSPIN)*NIP 
         DISSYS = IRPDPD(IRREPL, DISTYP)
         NUMS = NUMS + NUMDSS * DISSYS
 30   CONTINUE
      IF (NUMS .GT. MAXDIM) THEN
         MAXDIM = NUMS
         MAXIRREP = IRREP
      ENDIF
 20   CONTINUE
C
C NOW CREATE LIST POINTERS CORRESPONDING TO THE MAXIMUM DIMENSION
C
      IRREP = MAXIRREP
C
C  DETERMINE NIP
C
      IF ((ITYP .EQ. 1) .OR. (ITYP .EQ. 3)) THEN
            CALL IZERO(NS, 8)
            NS(IRREP) = 1
            DO 32 KSPIN = 1, 1 + IUHF
               CALL GETNIP(NIP, IRREP, KSPIN, IUHF)
               LEN = MAX(LEN, NIP)
 32         CONTINUE
      ELSEIF (ITYP.EQ.2) THEN
            NIP = 1
      ENDIF

      DO 35 IRREPR = 1, NIRREP
         IRREPL = DIRPRD(IRREPR,MAXIRREP)
         NUMDSS = VRT(IRREPR,MSPIN)*NIP
         DISSYS = IRPDPD(IRREPL, DISTYP)
         CALL UPDMOI(NUMDSS, DISSYS, IRREPR,
     $      LS2IN(ISPIN, MSPIN+1-IUHF), 0, 0)
 35   CONTINUE

      DO 40 IRREPR = 1, NIRREP
         IRREPL = DIRPRD(IRREPR,MAXIRREP)
         NUMDSS = VRT(IRREPR,MSPIN)*NIP
         DISSYS = IRPDPD(IRREPL,DISTYP)
         CALL UPDMOI(NUMDSS, DISSYS, IRREPR,
     $      LS2OUT(ISPIN, MSPIN+1-IUHF), 0, 0)
 40   CONTINUE
 25   CONTINUE
 15   CONTINUE
C
      IF ((ITYP .EQ. 2) .OR. (ITYP .EQ. 3)) THEN
C
C   INITIALIZE LISTDAV
C
C  FIRST DETERMINE MAXIMUM DIMENSION
C
      MAXDIM = 0
C
      DO 45 ISPIN = 1, 1 + IUHF
C
      DO 50 IRREP = 1, NIRREP
C
C  DETERMINE NIP
C
         CALL GETNIP(NIP, IRREP, ISPIN, IUHF)
         IF (NIP .GT. MAXDIM) THEN
            MAXDIM = NIP
         ENDIF
 50   CONTINUE
 45   CONTINUE
C
      IF (LEFTHAND) THEN
         NUMLST = 2
      ELSE
         NUMLST = 1
      ENDIF
C
      DO 60 I=1, NUMLST
         CALL UPDMOI(MAXEXP, MAXDIM, I, LISTC, 0, 0)
         CALL UPDMOI(MAXEXP, MAXDIM, I, LISTHC, 0, 0)
 60   CONTINUE
         CALL UPDMOI(1+NREDUCE+8, MAXDIM, 1, LISTH0, 0, 0)
         CALL UPDMOI(1,MAXDIM,1,LISTST,0,0)
C
C  DETERMINE POINTERS TO DIPLIST AND DENSLIST
C
      DO 70 ISPIN = 1, 1+IUHF
         ISYTYP(1, DIPOO(ISPIN)) = 20 + ISPIN
         ISYTYP(1, DIPOV(ISPIN)) = 15 + ISPIN
         ISYTYP(1, DIPVV(ISPIN)) = 18 + ISPIN         
         ISYTYP(1, DENSOO(ISPIN)) = 20 + ISPIN
         ISYTYP(1, DENSOV(ISPIN)) = 15 + ISPIN
         ISYTYP(1, DENSVV(ISPIN)) = 18 + ISPIN
 70   CONTINUE
C
      DO 80 ISPIN = 1, 1+IUHF
      DO 90 XIRREP = 1, NIRREP
         NUMDSS = 3
         DISSYS = IRPDPD(XIRREP, ISYTYP(1,DIPOO(ISPIN)))
         CALL UPDMOI(NUMDSS, DISSYS, XIRREP,
     $      DIPOO(ISPIN), 0, 0)
 90   CONTINUE
 80   CONTINUE
C
      DO 81 ISPIN = 1, 1+IUHF
      DO 91 XIRREP = 1, NIRREP
         NUMDSS = 3
         DISSYS = IRPDPD(XIRREP, ISYTYP(1,DIPOV(ISPIN)))
         CALL UPDMOI(NUMDSS, DISSYS, XIRREP,
     $      DIPOV(ISPIN), 0, 0)
 91   CONTINUE
 81   CONTINUE
C
      DO 82 ISPIN = 1, 1+IUHF
      DO 92 XIRREP = 1, NIRREP
         NUMDSS = 3
         DISSYS = IRPDPD(XIRREP, ISYTYP(1,DIPVV(ISPIN)))
         CALL UPDMOI(NUMDSS, DISSYS, XIRREP,
     $      DIPVV(ISPIN), 0, 0)
 92   CONTINUE
 82   CONTINUE
C
      DO 83 ISPIN = 1, 1+IUHF
      DO 93 XIRREP = 1, NIRREP
         NUMDSS = 2
         DISSYS = IRPDPD(XIRREP, ISYTYP(1,DENSOO(ISPIN)))
         CALL UPDMOI(NUMDSS, DISSYS, XIRREP,
     $      DENSOO(ISPIN), 0, 0)
 93   CONTINUE
 83   CONTINUE
C
      DO 84 ISPIN = 1, 1+IUHF
      DO 94 XIRREP = 1, NIRREP
         NUMDSS = 2
         DISSYS = IRPDPD(XIRREP, ISYTYP(1,DENSOV(ISPIN)))
         CALL UPDMOI(NUMDSS, DISSYS, XIRREP,
     $      DENSOV(ISPIN), 0, 0)
 94   CONTINUE
 84   CONTINUE
C
      DO 85 ISPIN = 1, 1+IUHF
      DO 95 XIRREP = 1, NIRREP
         NUMDSS = 2
         DISSYS = IRPDPD(XIRREP, ISYTYP(1,DENSVV(ISPIN)))
         CALL UPDMOI(NUMDSS, DISSYS, XIRREP,
     $      DENSVV(ISPIN), 0, 0)
 95   CONTINUE
 85   CONTINUE
C
      ENDIF
c
      RETURN
      END
