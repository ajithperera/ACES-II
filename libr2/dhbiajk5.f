
      SUBROUTINE DHBIAJK5(ICORE,MAXCOR,IUHF,IRREPT,IRREPF,LISTT0,LISTF,
     &                    LISTZ0,HBAR_4LCCSD,NONHF)

C CALCULATES THE CONTRACTION 
C
C    Z(IA,JK) = F(IM) * T(EA,JK)
C
C FOR EITHER DIFFERENTIATED OR UNDIFFERENTIATED QUANTITIES
C
C
C CONTRACTION :  F(IE)*T(EA,JK) [ISPIN=1,2]
C                F(ie)*T(Ae,Kj) [ISPIN=3] 
C                F(IE)*T(Ea,Jk) [ISPIN=4]
C          
CEND
      IMPLICIT INTEGER (A-Z)
      DIMENSION ICORE(MAXCOR),I0F(2)
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,CC2
      LOGICAL HBAR_4LCCSD,NONHF
      DOUBLE PRECISION ONE,ONEM,ZILCH
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,CC2
C
      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      IOFF = 0
      IF (CC2) IOFF = 2
C
      IRREPZ=DIRPRD(IRREPT,IRREPF)
      I0F(1)=1
      I0F(2)=I0F(1)+IINTFP*IRPDPD(IRREPF,9)*IUHF
      I000  =I0F(2)+IINTFP*IRPDPD(IRREPF,10)

      IF (HBAR_4LCCSD) THEN
          IF (NONHF) THEN
             CALL GETLST(ICORE(I0F(1)),1,1,1,3,93)
             IF(IUHF.NE.0)CALL GETLST(ICORE(I0F(2)),1,1,1,4,93)
          ELSE
             RETURN
          ENDIF
      ELSE
          CALL GETLST(ICORE(I0F(1)),1,1,1,1+IOFF,LISTF)
          IF(IUHF.NE.0)CALL GETLST(ICORE(I0F(2)),1,1,1,2+IOFF,LISTF)
      ENDIF 

      DO 10 ISPIN=4,4-3*IUHF,-1
       LISTT=LISTT0+MIN(3,ISPIN)
       LISTZ=LISTZ0+ISPIN
       IF(ISPIN.LE.2)THEN
        ISPINF=ISPIN
        ISPINA=ISPIN
        TTYPE =18+ISPIN
        ZTYPE =8+ISPIN
       ELSEIF(ISPIN.EQ.3)THEN
        ISPINF=2
        ISPINA=1
        TTYPE=13
        ZTYPE=11
       ELSEIF(ISPIN.EQ.4)THEN
        ISPINF=1
        ISPINA=2
        TTYPE =23
        ZTYPE =12
       ENDIF
C  
       DO 20 IRREPZL=1,NIRREP
        IRREPZR=DIRPRD(IRREPZL,IRREPZ)
        IRREPTR=IRREPZR
        IRREPTL=DIRPRD(IRREPTR,IRREPT)
        DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
        DISSYZ=IRPDPD(IRREPZR,ISYTYP(1,LISTZ))
        NUMDSZ=IRPDPD(IRREPZL,ISYTYP(2,LISTZ))
        IF(ISPIN.LE.2)THEN
         DISSYTX=IRPDPD(IRREPTL,18+ISPIN)
        ELSE
         DISSYTX=DISSYT
        ENDIF
        MAXTMP=MAX(DISSYTX,NUMDST,DISSYZ,NUMDSZ)
        I010=I000+IINTFP*MAX(NUMDST*DISSYTX,NUMDSZ*DISSYZ)
        I020=I010+IINTFP*MAX(NUMDST*DISSYTX,NUMDSZ*DISSYZ)
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        CALL GETLST(ICORE(I000),1,NUMDST,1,IRREPTR,LISTT)
        CALL TRANSP(ICORE(I000),ICORE(I010),NUMDST,DISSYT)
        IF(ISPIN.EQ.4)THEN
         CALL SYMTR1(IRREPTL,VRT(1,1),VRT(1,2),NUMDST,ICORE(I010),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ELSEIF(ISPIN.LE.2)THEN
         CALL SYMEXP(IRREPTL,VRT(1,ISPIN),NUMDST,ICORE(I010))
         CALL VMINUS(ICORE(I010),DISSYTX*NUMDST)
        ENDIF
C
C DO CONTRACTION : Z(JK,AI) <= T(JKA,E)*F(EI)
C
        DO 30 IRREPI=1,NIRREP
         IRREPE=DIRPRD(IRREPI,IRREPF)
         IRREPA=DIRPRD(IRREPE,IRREPTL)
         NUMA=VRT(IRREPA,ISPINA)
         NUMI=POP(IRREPI,ISPINF)
         NUME=VRT(IRREPE,ISPINF)
         NROW=DISSYZ*NUMA
         NCOL=NUMI
         NSUM=NUME
         IOFFZ=I000+IINTFP*DISSYZ*(ISYMOFF(IRREPI,IRREPZL,ZTYPE)-1)
         IF (MIN(NROW,NCOL,NSUM).NE.0) THEN
            IOFFF=I0F(ISPINF)+IINTFP*(ISYMOFF(IRREPI,IRREPF,8+ISPINF)-1)
            IOFFT=I010+IINTFP*NUMDST*(ISYMOFF(IRREPE,IRREPTL,TTYPE)-1)
            CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &                 ICORE(IOFFF),NUME,ZILCH,ICORE(IOFFZ),NROW)
         ELSE
            CALL DZERO(ICORE(IOFFZ),NROW*NCOL)
         END IF
30      CONTINUE
C
        IF(ISPIN.EQ.4)THEN
         CALL SYMTR1(IRREPZL,VRT(1,2),POP(1,1),DISSYZ,ICORE(I000),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ELSEIF(ISPIN.LE.2)THEN
         CALL SYMTR1(IRREPZL,VRT(1,ISPIN),POP(1,ISPIN),DISSYZ,
     &               ICORE(I000),ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
C
        CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPZL,LISTZ)
CSSS        Call checksum("z   :",ICORE(I010),NUMDSZ*DISSYZ)
CSSS        Call checksum("T2Hb:",ICORE(I000),NUMDSZ*DISSYZ)
        CALL SAXPY (NUMDSZ*DISSYZ,ONE,ICORE(I000),1,ICORE(I010),1)
        CALL PUTLST(ICORE(I010),1,NUMDSZ,1,IRREPZL,LISTZ)
C
20     CONTINUE
C
10    CONTINUE
C
      RETURN
      END 
