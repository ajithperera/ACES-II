      SUBROUTINE W5F(ICORE,MAXCOR,IUHF,IOFFLIST,HBAR_4LCCSD,NONHF)
C
C THIS ROUTINE CALCULATES THE CONTRIBUTION 
C
C  W(Ab,Ci) <= T(Ab,Mi) * F(MC) [ISPIN=4]
C  W(Ab,Ci) <= T(Ab,mI) * F(mc) [ISPIN=3]
C  W(Ab,Ci) <= T(AB,MI) * F(MC) [ISPIN=1,2]
C
C USING A GENERAL OUT-OF-CORE ALGORITHM
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,CC2
      LOGICAL HBAR_4LCCSD,NONHF
      DIMENSION ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFEA(2),NFMI(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,
     &            UCC,CC2
C
      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      IOFF = 0
      IF (CC2) IOFF = 2
C
      DO 5 ISPIN=4,4-3*IUHF,-1
       LISTT=43+MIN(ISPIN,3)
       LISTZ=126+ISPIN+IOFFLIST
       IF(ISPIN.EQ.4)THEN
        ISPINC=1
        ISPINI=2
        ITTR=14
       ELSEIF(ISPIN.EQ.3)THEN
        ISPINC=2
        ISPINI=1
        ITTR=14
       ELSEIF(ISPIN.LE.2)THEN
        ISPINC=ISPIN
        ISPINI=ISPIN
        ITTR=20+ISPIN
       ENDIF
C
C READ IN F INTERMEDIATES
C
       I000=1
       I010=I000+IINTFP*NT(ISPINC)
       I020=I010+IINTFP*NT(ISPINC)
       IF (HBAR_4LCCSD) THEN
          IF (NONHF) THEN
             CALL GETLST(ICORE(I010),1,1,1,ISPINC+2,93)
          ELSE
             RETURN
          ENDIF 
       ELSE
          CALL GETLST(ICORE(I010),1,1,1,ISPINC+IOFF,93)
       ENDIF 

       CALL SYMTRA(1,VRT(1,ISPINC),POP(1,ISPINC),1,
     &             ICORE(I010),ICORE(I000))
C
C LOOP OVER TARGET IRREPS
C
       DO 10 IRREP=1,NIRREP
        ITHRU=1
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
        DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
        NUMDSZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
        IF(ISPIN.LE.2)THEN
         NUMDSTX=IRPDPD(IRREP,20+ISPIN)
        ELSE
         NUMDSTX=NUMDST
        ENDIF
        I020=I010+IINTFP*DISSYT*NUMDSTX
        CALL GETLST(ICORE(I010),1,NUMDST,1,IRREP,LISTT)
        IF(ISPIN.LE.2)THEN
         CALL SYMEXP(IRREP,POP(1,ISPIN),DISSYT,ICORE(I010))
        ENDIF 
        IF(ISPIN.NE.3)THEN
         DO 20 IRREPI=1,NIRREP
          IRREPC=DIRPRD(IRREPI,IRREP)
          IRREPM=IRREPC
          NUMC=VRT(IRREPC,ISPINC)
          NUMM=POP(IRREPM,ISPINC)
          NUMI=POP(IRREPI,ISPINI)
          DO 21 I=1,NUMI
           IDIST=ISYMOFF(IRREPI,IRREP,ITTR)+(I-1)*NUMM
           IOFFT=I010+IINTFP*DISSYT*(IDIST-1)
C
C T(A<B,IM) * F(MC)[ISPIN=1,2]
C T(Ab,Mi) * F(MC) [ISPIN=4]
C
           DO 22 C=1,NUMC
            IOFFF=I000+IINTFP*(ISYMOFF(IRREPC,1,15+ISPINC)-1+(C-1)*NUMM)
            CALL GETLST(ICORE(I020),ITHRU,1,1,IRREP,LISTZ)
            CALL XGEMM ('N','N',DISSYZ,1,NUMM,ONEM,ICORE(IOFFT),
     &                  DISSYT,ICORE(IOFFF),NUMM,ONE,ICORE(I020),
     &                  DISSYZ)
            CALL PUTLST(ICORE(I020),ITHRU,1,1,IRREP,LISTZ)
            ITHRU=ITHRU+1
22         CONTINUE
21        CONTINUE
20       CONTINUE
        ELSE
         DO 120 IRREPC=1,NIRREP
          IRREPI=DIRPRD(IRREPC,IRREP)
          IRREPM=IRREPC
          NUMC=VRT(IRREPC,ISPINC)
          NUMM=POP(IRREPM,ISPINC)
          NUMI=POP(IRREPI,ISPINI)
C
C T(Ab,Im) * F(mc) [ISPIN=3]
C
          DO 121 C=1,NUMC
           DO 122 I=1,NUMI
            IDIST=ISYMOFF(IRREPM,IRREP,ITTR)+I-1
            IOFFT=I010+IINTFP*DISSYT*(IDIST-1)
            IOFFF=I000+IINTFP*(ISYMOFF(IRREPC,1,15+ISPINC)-1+(C-1)*NUMM)
            CALL GETLST(ICORE(I020),ITHRU,1,1,IRREP,LISTZ)
            CALL XGEMM ('N','N',DISSYZ,1,NUMM,ONEM,ICORE(IOFFT),
     &                  DISSYT*NUMI,ICORE(IOFFF),NUMM,ONE,ICORE(I020),
     &                  DISSYZ)
            CALL PUTLST(ICORE(I020),ITHRU,1,1,IRREP,LISTZ)
            ITHRU=ITHRU+1
122        CONTINUE
121       CONTINUE
120      CONTINUE
C
        ENDIF
C
10     CONTINUE
C
5     CONTINUE
C
      RETURN
      END
