      SUBROUTINE MODAIBC2(ICORE,MAXCOR,IUHF,ISPIN,IRREP,FACT)
C
C FORMS THE AIBC HBAR ELEMENTS WITH AN OUT-OF-CORE
C ALGORITHM FOR A SPECIFIC SPIN CASE AND IRREP
C
C  HBAR(ai,bc) = <ai||bc> + T(am) <mi||bc>
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,FACT,FACTOR
      DIMENSION ICORE(*)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ONE,ZILCH,ONEM/1.0D0,0.0D0,-1.0D0/ 
C
      IF(ISPIN.LE.2)THEN
       LISTW=13+ISPIN
       LISTZ=26+ISPIN
       ISPINM=ISPIN
       ISPINI=ISPIN
       ISPINC=ISPIN
       ISPINT=ISPIN
       FACTOR=ONE*FACT
       ZTYPER=8+ISPIN
      ELSEIF(ISPIN.EQ.3)THEN
       LISTW=16
       LISTZ=29
       ISPINM=2
       ISPINI=1
       ISPINC=2
       ISPINT=2
       FACTOR=ONEM*FACT
      ELSEIF(ISPIN.EQ.4)THEN
       LISTW=16
       LISTZ=30
       ISPINM=1
       ISPINI=2
       ISPINC=1
       ISPINT=1
       FACTOR=ONEM*FACT
       ZTYPER=11
      ENDIF
      DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
      NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
      IF(ISPIN.LE.2)THEN
       NUMDSWX=IRPDPD(IRREP,20+ISPIN)
      ELSE
       NUMDSWX=NUMDSW
      ENDIF
      DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
      NUMDSZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
      I000=1
      I010=I000+IINTFP*DISSYW*NUMDSWX
      I020=I010+IINTFP*NT(ISPINT)
      I030=I020+IINTFP*DISSYZ
C
C READ IN W(AB,IM) [ISPIN.LE.2]
C         W(Ab,Im) [ISPIN.EQ.3]
C         W(Ab,Mi) [ISPIN.EQ.4] => W(Ab,iM)
C
      CALL GETLST(ICORE(I000),1,NUMDSW,1,IRREP,LISTW)
      IF(ISPIN.LE.2)THEN
       CALL SYMEXP(IRREP,POP(1,ISPIN),DISSYW,ICORE(I000))
      ELSEIF(ISPIN.EQ.4)THEN
       MAXW =MAX(DISSYW,NUMDSW)
       ITMP1=I010
       ITMP2=ITMP1+IINTFP*MAXW
       ITMP3=ITMP2+IINTFP*MAXW
       CALL SYMTR1(IRREP,POP(1,1),POP(1,2),DISSYW,ICORE(I000),
     &             ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
      ENDIF
      CALL GETLST(ICORE(I010),1,1,1,ISPINT,90)
C
C GENERIC CONTRACTION ALGORITHM  
C
C                        +
C        W(abi,m) * T(cm)
C
C
      IOFFW=I000
      IOFFT0=I010
      IDISZ=1
      DO 10 IRREPC=1,NIRREP
       IOFFT=IOFFT0
       IRREPM=IRREPC
       IRREPI=DIRPRD(IRREPC,IRREP)
       NUMM=POP(IRREPM,ISPINM)
       NUMI=POP(IRREPI,ISPINI)
       NUMC=VRT(IRREPC,ISPINC)
       DO 20 C=1,NUMC
        NROW=DISSYW*NUMI
        NCOL=1
        NSUM=NUMM
        CALL XGEMM('N','T',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NROW,
     &             ICORE(IOFFT),NUMC,ZILCH,ICORE(I030),NROW)
        IOFFT=IOFFT+IINTFP
        IOFFZ=I030
        IF(ISPIN.NE.3)THEN
         DO 21 I=1,NUMI
          IDIS=C+NUMC*(I-1)+ISYMOFF(IRREPI,IRREP,ZTYPER)-1
          CALL GETLST(ICORE(I020),IDIS,1,1,IRREP,LISTZ)
          CALL SAXPY (DISSYZ,FACTOR,ICORE(IOFFZ),1,ICORE(I020),1)
          CALL PUTLST(ICORE(I020),IDIS,1,1,IRREP,LISTZ)
          IOFFZ=IOFFZ+IINTFP*DISSYZ
21       CONTINUE
        ELSE
         DO 22 I=1,NUMI
          CALL GETLST(ICORE(I020),IDISZ,1,1,IRREP,LISTZ)
          CALL SAXPY (DISSYZ,FACTOR,ICORE(IOFFZ),1,ICORE(I020),1)
          CALL PUTLST(ICORE(I020),IDISZ,1,1,IRREP,LISTZ)
          IOFFZ=IOFFZ+IINTFP*DISSYZ
          IDISZ=IDISZ+1
22       CONTINUE
        ENDIF
20     CONTINUE
       IOFFW=IOFFW+IINTFP*DISSYW*NUMM*NUMI
       IOFFT0=IOFFT0+IINTFP*NUMC*NUMM
10    CONTINUE
C
      RETURN
      END
