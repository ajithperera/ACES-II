      SUBROUTINE DHBIAJK2(ICORE,MAXCOR,IUHF,IRREPT,IRREPW,LISTTA,
     &                    LISTTB,LISTW,LISTZ)
C
C CALCULATES "THE CONTRACTION FROM HELL" FOR RHF CASES
C
C    Z(IA,JK) =  T(AE,KM)*W(IM,JE)
C
C FOR EITHER DIFFERENTIATED OR UNDIFFERENTIATED INTEGRALS
C
C CONTRACTIONS:
C
C       Z1(Ia,Jk) <=  1/2 [2*T(Ae,Km)-T(Ea,Km)]*[2*W(Im,Je)-W(Mi,Je)]
C       Z2(Ia,Jk) <=  - T(Ea,Jm)*W(Mi,Ke)
C
C  Z(Ia,Jk) <= Z1(Ia,Jk) + Z2(Ia,Jk) + 1/2 Z2(Ia,Kj)
C          
C
CEND
      IMPLICIT INTEGER (A-Z)
      DIMENSION ICORE(MAXCOR),I0T(2)
      DOUBLE PRECISION ONE,ONEM,ZILCH,HALF,TWO,THIRD
      logical bRedundant
      CHARACTER*4 SPNCASE(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
      COMMON /FLAGS2/IFLAGS2(500)
      COMMON /INFO/ NOCC(2),NVRTO(2)
C
      DATA ONE,ONEM,ZILCH,HALF,TWO /1.0D0,-1.0D0,0.0D0,0.5D0,2.0D0/
C
      bRedundant = iflags2(155).eq.0

      IRREPZ=DIRPRD(IRREPW,IRREPT)
      ISIZEW=IDSYMSZ(IRREPW,ISYTYP(1,LISTW),ISYTYP(2,LISTW))
      ISIZEZ=IDSYMSZ(IRREPZ,ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
      I000=1
      IFUL1=I000
      IFUL2=IFUL1+IINTFP*MAX(ISIZEW,ISIZEZ)
      IFUL3=IFUL2+IINTFP*MAX(ISIZEW,ISIZEZ)
      IFUL4=IFUL3+IINTFP*MAX(ISIZEW,ISIZEZ)

C
C DO Z2 CONTRACTION FIRST
C
C NOW SORT W ELEMENTS FROM W(Mi,Ke) -> W(Ki,eM)
C
C DONE BY W(Mi,Ke) => W(MK,ei) => W(Ki,eM)
C                1342        2431
C
      CALL GETALL(ICORE(IFUL1),ISIZEW,IRREPW,LISTW)
      CALL SSTGEN(ICORE(IFUL1),ICORE(IFUL2),ISIZEW,POP,POP,POP,VRT,
     &            ICORE(IFUL3),IRREPW,'1342')
      CALL SSTGEN(ICORE(IFUL2),ICORE(IFUL1),ISIZEW,POP,POP,VRT,POP,
     &            ICORE(IFUL3),IRREPW,'2431')
      CALL PUTALL(ICORE(IFUL1),ISIZEW,IRREPW,LISTW)

C
C FIRST SORT Z ELEMENTS ON DISK Z(JK,IA) => Z(KAIJ) => Z(KIAJ)
C AND HOLD THEM IN CORE
C
      CALL GETALL(ICORE(IFUL1),ISIZEZ,IRREPZ,LISTZ)
      CALL SSTGEN(ICORE(IFUL1),ICORE(IFUL2),ISIZEZ,POP,POP,POP,VRT,
     &            ICORE(IFUL3),IRREPZ,'2431')
      CALL SSTGEN(ICORE(IFUL2),ICORE(IFUL1),ISIZEZ,POP,VRT,POP,POP,
     &            ICORE(IFUL3),IRREPZ,'1324')

C
C
C DO FIRST CONTRACTION : - W(Ki,eM)*T(Em,aJ)
C     
C   Z2(KI,AJ) <= - W(KI,EM)*T(EM,AJ)
C

      DO 100 IRREPZL=1,NIRREP
       IRREPZR=DIRPRD(IRREPZL,IRREPZ)
       IRREPWL=IRREPZL
       IRREPWR=DIRPRD(IRREPWL,IRREPW)
       IRREPTR=IRREPZR
       IRREPTL=DIRPRD(IRREPTR,IRREPT)
       DISSYZ=IRPDPD(IRREPZL,ISYTYP(1,LISTZ))
       NUMDSZ=IRPDPD(IRREPZR,ISYTYP(2,LISTZ))
       DISSYW=IRPDPD(IRREPWL,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPWR,ISYTYP(2,LISTW))
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTTB))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTTB))
       I000=IFUL2
       I010=I000+IINTFP*DISSYZ*NUMDSZ
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*DISSYW*NUMDSW

       if(bRedundant) then
          CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTTB)
       else
          I030=I010+ISYMSZ(ISYTYP(1,LISTTA),ISYTYP(2,LISTTA))*IINTFP
          CALL GETLST_NR(ICORE(I010),ICORE(I030),MAXCOR-I030,
     &                 LISTTB,IRREPTR)
       endif

c       call chksums("DHBIAJK2 1 ",icore(i010),numdst*dissyt)

       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPWR,LISTW)
       CALL GETLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LISTZ)

       CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYT,ONEM,ICORE(I020),
     &            DISSYW,ICORE(I010),DISSYT,ONE,ICORE(I000),
     &            DISSYZ)


       CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LISTZ)

100   CONTINUE
C
C NOW READ BACK Z2(KI,AJ) AND CALCULATE Z2(KI,AJ)+1/2*Z2(JI,AK)
C
C DO THIS AS FOLLOWS: Z2(KI,AJ) => Z2(IJ,AK)
C                              2431
C
C               Z2(IJ,AK) + 1/2 * SSTGEN[Z2(IJ,AK)] 
C
      CALL GETALL(ICORE(IFUL2),ISIZEZ,IRREPZ,LISTZ)
      CALL SSTGEN(ICORE(IFUL2),ICORE(IFUL3),ISIZEZ,POP,POP,VRT,POP,
     &            ICORE(IFUL4),IRREPZ,'2431')
      CALL SSTGEN(ICORE(IFUL3),ICORE(IFUL2),ISIZEZ,POP,POP,VRT,POP,
     &            ICORE(IFUL4),IRREPZ,'1432')
      CALL SAXPY (ISIZEZ,HALF,ICORE(IFUL2),1,ICORE(IFUL3),1)
      CALL SAXPY (ISIZEZ,ONE,ICORE(IFUL1),1,ICORE(IFUL3),1)
      CALL PUTALL(ICORE(IFUL3),ISIZEZ,IRREPZ,LISTZ)

C NOW IT IS TIME FOR THE SECOND CONTRACTION.  FIRST WE HAVE TO GET THE
C PROPER INTEGRALS ON DISK.  PRESENTLY, THEY ARE STORED AS W(Jm,eI)
C BUT WE WANT W(IJ,em).  THIS IS SOMEWHAT COMPLICATED BECAUSE IT IS
C ALSO NECESSARY TO SPIN ADAPT THE AMPLITUDES SO THAT WE NEED THEM
C TO BE ORDERED W(Im;**) OR W(**;Im) AT SOME INTERMEDIATE STAGE!
C
C THIS IS DONE AS FOLLOWS: W(Jm,eI) => W(Je,Im) [THESE ARE SPIN ADAPTED]
C                                  1342
C  AND THEN                W(Je,Im) => W(Ie,Jm) => W(IJ,em)
C                                  3214        1324
C
      CALL GETALL(ICORE(IFUL2),ISIZEW,IRREPW,LISTW)

      CALL SSTGEN(ICORE(IFUL2),ICORE(IFUL1),ISIZEW,POP,POP,VRT,POP,
     &            ICORE(IFUL3),IRREPW,'1342')
      IOFF=IFUL1
      DO 10 IRREPWR=1,NIRREP
       IRREPWL=DIRPRD(IRREPWR,IRREPW)
       DISSYW=IRPDPD(IRREPWL,ISYTYP(2,LISTW))
       NUMDSW=IRPDPD(IRREPWR,ISYTYP(1,LISTW))
       ITMP1=IFUL2
       ITMP2=ITMP1+IINTFP*MAX(DISSYW,NUMDSW) 
       CALL SPINAD1(IRREPWR,POP,DISSYW,ICORE(IOFF),
     &              ICORE(ITMP1),ICORE(ITMP2)) 
       IOFF=IOFF+IINTFP*DISSYW*NUMDSW
10    CONTINUE
      CALL SSTGEN(ICORE(IFUL1),ICORE(IFUL2),ISIZEW,POP,VRT,POP,POP,
     &            ICORE(IFUL3),IRREPW,'3214')
      CALL SSTGEN(ICORE(IFUL2),ICORE(IFUL1),ISIZEW,POP,VRT,POP,POP,
     &            ICORE(IFUL3),IRREPW,'1324')
      CALL PUTALL(ICORE(IFUL1),ISIZEW,IRREPW,LISTW)
C
C DO LAST CONTRACTION : 1/2 T(Ae,Km)*W(Im,Je) AS
C     
C   Z(IJ,AK) <= W(IJ,em)*T(em,AK)
C
c*******************************
      DO 200 IRREPZL=1,NIRREP
       IRREPZR=DIRPRD(IRREPZL,IRREPZ)
       IRREPWL=IRREPZL
       IRREPWR=DIRPRD(IRREPWL,IRREPW)
       IRREPTR=IRREPZR
       IRREPTL=DIRPRD(IRREPTR,IRREPT)
       DISSYZ=IRPDPD(IRREPZL,ISYTYP(1,LISTZ))
       NUMDSZ=IRPDPD(IRREPZR,ISYTYP(2,LISTZ))
       DISSYW=IRPDPD(IRREPWL,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPWR,ISYTYP(2,LISTW))
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTTA))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTTA))
       I000=1
       I010=I000+IINTFP*DISSYZ*NUMDSZ
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*MAX(DISSYT*NUMDST,DISSYW*NUMDSW)
c
       if(bRedundant) then 
          CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTTA)
          CALL GETLST(ICORE(I020),1,NUMDST,1,IRREPTR,LISTTB)
       else
          I030=I010+ISYMSZ(ISYTYP(1,LISTTA),ISYTYP(2,LISTTA))*IINTFP
          CALL GETLST_NR(ICORE(I010),ICORE(I030),MAXCOR-I030,
     &                 LISTTA,IRREPTR)
          I030=I020+ISYMSZ(ISYTYP(1,LISTTB),ISYTYP(2,LISTTB))*IINTFP
          CALL GETLST_NR(ICORE(I020),ICORE(I030),MAXCOR-I030,
     &                 LISTTB,IRREPTR)
       endif
c       call chksums("DHBIAJK2 2 ",icore(i010),numdst*dissyt)
c       call chksums("DHBIAJK2 3 ",icore(i020),numdst*dissyt)

       CALL SSCAL (DISSYT*NUMDST,TWO,ICORE(I010),1)
       CALL SAXPY (DISSYT*NUMDST,ONEM,ICORE(I020),1,ICORE(I010),1)

       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPWR,LISTW)
       CALL GETLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LISTZ)

       CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYT,HALF,ICORE(I020),
     &            DISSYW,ICORE(I010),DISSYT,ONE,ICORE(I000),
     &            DISSYZ)

       CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LISTZ)
200   CONTINUE
c*******************************
C
C NOW REORDER Z(IJ,AK) ELEMENTS ON DISK TO Z(JK,IA).  
C
C  THIS IS DONE AS FOLLOWS: Z(IJ,AK) => Z(JK,IA)
C                                   2413
C
      CALL GETALL(ICORE(IFUL1),ISIZEZ,IRREPZ,LISTZ)
      CALL SSTGEN(ICORE(IFUL1),ICORE(IFUL2),ISIZEZ,POP,POP,VRT,POP,
     &            ICORE(IFUL3),IRREPZ,'2413')
      CALL PUTALL(ICORE(IFUL2),ISIZEZ,IRREPZ,LISTZ)
C
C NOW WE ARE DONE BUT MUST DO A LITTLE BOOKKEEPING.  WE HAVE TO
C REORDER THE W INTERMEDIATES TO W(Im,Je) AND "UNSPIN-ADAPT" THEM.
C
C W CURRENTLY STORED AS THE SPIN ADAPTED QUANTITY IN THE ORDERING 
C W(IJ,em).  THE UNSPINADAPTED VALUES CAN BE OBTAINED FROM
C
C  1/3 * [2* W(IJ,em) + W(mJ,eI)]  
C
C AND MUST BE STORED AS W(Im,Je).  A TOUR-DE-FORCE OF SSTGEN!
C
      THIRD=1.0D0/3.0D0
      CALL GETALL(ICORE(IFUL1),ISIZEW,IRREPW,LISTW)

      CALL SSTGEN(ICORE(IFUL1),ICORE(IFUL2),ISIZEW,POP,POP,VRT,POP,
     &            ICORE(IFUL3),IRREPW,'1342')
      CALL SSTGEN(ICORE(IFUL2),ICORE(IFUL1),ISIZEW,POP,VRT,POP,POP,
     &            ICORE(IFUL3),IRREPW,'3214')
      CALL SSCAL (ISIZEW,TWO,ICORE(IFUL2),1)
      CALL SAXPY (ISIZEW,ONE,ICORE(IFUL1),1,ICORE(IFUL2),1)
      CALL SSCAL (ISIZEW,THIRD,ICORE(IFUL2),1)
      CALL SSTGEN(ICORE(IFUL2),ICORE(IFUL1),ISIZEW,POP,VRT,POP,POP,
     &            ICORE(IFUL3),IRREPW,'1342')
      CALL PUTALL(ICORE(IFUL1),ISIZEW,IRREPW,LISTW)
C     
      RETURN
      END
