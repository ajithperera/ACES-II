      SUBROUTINE W4AAIN(ICORE,MAXCOR,IUHF,TERM1,TERM2,IOFFLIST)
C
C
C THIS ROUTINE CALCULATES THE CONTRIBUTION
C
C           Q(ifmn) = - SUM T(ef,mo) * <io||en>
C                       o,e
C
C TO THE W(ifmn) INTERMEDIATE FOR SPIN CASES AAAA AND BBBB. 
C AND INITIALIZES THE INTERMEDIATE LIST WITH  <MN||IF> +  Q(MNIF).
C THE CONTRACTION IS A RATHER DIFFICULT ONE AND REQUIRES FANCY I/O
C TRICKS TO WRITE AS A MATRIX MULTIPLICATION.
C
C THE INTERMEDIATE LIST NUMBER IS 107 FOR SPIN CASE AAAA
C                                 108 FOR SPIN CASE BBBB
C
C THIS ROUTINE IS CALLED ONLY FOR UHF CALCULATIONS.
C
C SPIN CASES:
C
C W(IFMN) = - P(MN) [SUM T(EF,MO)*<IO||EN> + SUM T(eF,oM)*<Io|Ne>] [ISPIN = 1]
C                    O,E                     o,e
C
C W(ifmn) = - P(MN) [SUM T(ef,mo)*<io||en> + SUM T(Ef,Om)*<iO|nE>] [ISPIN = 2]
C                    o,e                     O,E
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,ALPHA,BETA
      LOGICAL TERM1,TERM2
      DIMENSION ICORE(MAXCOR)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      DATA ONE   /1.0D0/
      DATA ONEM  /-1.0D0/
      DATA ZILCH /0.0D0/
C
C  COMPUTE REQUIRED DIMENSIONS OF SCRATCH ARRAYS IN FANCYIO CALLS.
C
      DO 10 ISPIN=1,2
       LSTTAR=106+ISPIN+IOFFLIST
       IF(.NOT.TERM2)GOTO 202
       DO 20 IRREPDO=1,NIRREP
C
C TERM I
C
        ALPHA=ONEM
        BETA =ZILCH
        LISTI=6+ISPIN
        LISTT=33+ISPIN
        SCRDSZ1=IRPDPD(IRREPDO,15+ISPIN)
        SCRDIS1=IRPDPD(IRREPDO,20+ISPIN)
        SCRSIZ1=SCRDIS1*SCRDSZ1
        SCRDSZ2=IRPDPD(IRREPDO,15+ISPIN)
        SCRDIS2=IRPDPD(IRREPDO,20+ISPIN)
        SCRSIZ2=SCRDIS2*SCRDSZ2
        TARDSZ=IRPDPD(IRREPDO,ISYTYP(1,LSTTAR))
        TARDIS=IRPDPD(IRREPDO,ISYTYP(2,LSTTAR))
        TARSIZ=TARDIS*TARDSZ
        INTDSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTI))
        INTDIS=IRPDPD(IRREPDO,ISYTYP(2,LISTI))
        INTSIZ=INTDIS*INTDSZ
        NT2DSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTT))
        NT2DIS=IRPDPD(IRREPDO,ISYTYP(2,LISTT))
        T2SIZE=NT2DSZ*NT2DIS
        I000=1
        I010=I000+IINTFP*SCRSIZ1
        CALL IZERO(ICORE,IINTFP*SCRSIZ1)
        I020=I010+IINTFP*SCRSIZ2
C
C READ IN THE <OI||NE> INTEGRALS AS AN I(OE,NI) MATRIX.
C
        CALL FANCYGET(ICORE(I010),ICORE(I020),'PF','1432',
     &                POP(1,ISPIN),POP(1,ISPIN),
     &                POP(1,ISPIN),VRT(1,ISPIN),
     &                1,SCRDIS2,2,IRREPDO,LISTI)
C
C CHANGE THIS TO AN I(OE,IN) MATRIX
C
        I030=I020+IINTFP*SCRDSZ2
        I040=I030+IINTFP*SCRDSZ2
        I050=I040+IINTFP*SCRDSZ2
        CALL SYMTR1(IRREPDO,POP(1,ISPIN),POP(1,ISPIN),SCRDSZ2,
     &              ICORE(I010),ICORE(I020),ICORE(I030),ICORE(I040))
C
C NOW READ IN THE T2 AMPLITUDES AS A T(FM,EO) MATRIX
C
        I030=I020+IINTFP*NT2DIS*NT2DSZ
        CALL GETLST(ICORE(I020),1,NT2DIS,1,IRREPDO,LISTT)
C
C TRANSPOSE BRA AND KET INDICES OF T2 VECTOR TO FORM T(MF,OE)
C
        I040=I030+IINTFP*MAX(NT2DSZ,NT2DIS)
        I050=I040+IINTFP*MAX(NT2DSZ,NT2DIS)
        I060=I050+IINTFP*MAX(NT2DSZ,NT2DIS)
        CALL SYMTR1(IRREPDO,VRT(1,ISPIN),POP(1,ISPIN),NT2DSZ,
     &              ICORE(I020),ICORE(I030),ICORE(I040),ICORE(I050))
        CALL SYMTR3(IRREPDO,VRT(1,ISPIN),POP(1,ISPIN),NT2DSZ,
     &              NT2DIS,ICORE(I020),ICORE(I030),ICORE(I040),
     &              ICORE(I050))
C
C NOW WE HAVE
C
C              I(OE,IN) AND T(MF,OE)
C
C AND WE CAN GENERATE THE PRODUCT WITH THE MATRIX MULTIPLICATION
C
C             Z(MF,IN) = T(MF,OE) * I(OE,IN)
C
        CALL XGEMM('N','N',NT2DSZ,SCRDIS2,NT2DIS,ALPHA,ICORE(I020),
     &             NT2DSZ,ICORE(I010),SCRDSZ2,BETA,ICORE(I000),
     &             NT2DSZ)
C
C TERM II
C
C W(IFMN) = - P(MN)  SUM T(eF,oM)*<Io|Ne>] [ISPIN = 1]
C                  o,e
C
C W(ifmn) = - P(MN)  SUM T(Ef,Om)*<Oi|En>] [ISPIN = 2]
C                  O,E
C
        BETA =ONE
        LISTI=11-ISPIN
        LISTT=36
        IF(ISPIN.EQ.1)THEN
         SCRDSZ2=IRPDPD(IRREPDO,21)
         SCRDIS2=IRPDPD(IRREPDO,10)
         SCRSIZ2=SCRDIS2*SCRDSZ2
        ELSE
         SCRDSZ2=IRPDPD(IRREPDO,9)
         SCRDIS2=IRPDPD(IRREPDO,22)
         SCRSIZ2=SCRDIS2*SCRDSZ2
        ENDIF
        INTDSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTI))
        INTDIS=IRPDPD(IRREPDO,ISYTYP(2,LISTI))
        INTSIZ=INTDIS*INTDSZ
        NT2DSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTT))
        NT2DIS=IRPDPD(IRREPDO,ISYTYP(2,LISTT))
        T2SIZE=NT2DSZ*NT2DIS
        I020=I010+IINTFP*SCRSIZ2
C
C READ THE <Io|Ne> [<Oi|En>] INTEGRALS INTO AN I(IN,eo) [I(OE,in)] MATRIX.
C  TRANSPOSE BRA INDICES FOR ISPIN=2
C
        IF(ISPIN.EQ.1)THEN
         CALL FANCYGET(ICORE(I010),ICORE(I020),'FF','1342',
     &                 POP(1,1),POP(1,2),POP(1,1),VRT(1,2),
     &                 1,SCRDIS2,2,IRREPDO,LISTI)
        ELSE
         CALL FANCYGET(ICORE(I010),ICORE(I020),'FF','1324',
     &                 POP(1,1),POP(1,2),VRT(1,1),POP(1,2),
     &                 1,SCRDIS2,2,IRREPDO,LISTI)
         I030=I020+IINTFP*SCRDIS2
         I040=I030+IINTFP*SCRDIS2
         I050=I040+IINTFP*SCRDIS2
         CALL SYMTR3(IRREPDO,POP(1,1),VRT(1,1),SCRDSZ2,SCRDIS2,
     &               ICORE(I010),ICORE(I020),ICORE(I030),ICORE(I040))
        ENDIF
C
C NOW READ THE T2 AMPLITUDES INTO A T(eo,FM) [T(fm,EO)] MATRIX AND
C  MANIPULATE TO T(eo,MF) [T(mf,EO)].
C
        I030=I020+IINTFP*NT2DIS*NT2DSZ
        CALL GETLST(ICORE(I020),1,NT2DIS,1,IRREPDO,LISTT) 
        IF(ISPIN.EQ.1)THEN
         I040=I030+IINTFP*NT2DSZ
         I050=I040+IINTFP*NT2DSZ
         I060=I050+IINTFP*NT2DSZ
         CALL SYMTR1(IRREPDO,VRT(1,1),POP(1,1),NT2DSZ,ICORE(I020),
     &               ICORE(I030),ICORE(I040),ICORE(I050))
        ELSE 
         I040=I030+IINTFP*NT2DIS
         I050=I040+IINTFP*NT2DIS
         I060=I050+IINTFP*NT2DIS
         CALL SYMTR3(IRREPDO,VRT(1,2),POP(1,2),NT2DSZ,NT2DIS,
     &               ICORE(I020),ICORE(I030),ICORE(I040),ICORE(I050))
        ENDIF
C
C NOW FORM PRODUCT AND ACCUMULATE INTO THE BOTTOM OF CORE
C                             +          +
C         Z(MF,IN) =  T(eo,MF) * I(IN,eo)   [ISPIN=1]
C
C                             
C         Z(mf,in) =  T(mf,EO) * I(EO,in)   [ISPIN=2]
C
        IF(ISPIN.EQ.1)THEN
         CALL XGEMM('T','T',NT2DIS,SCRDSZ2,NT2DSZ,ALPHA,ICORE(I020),
     &              NT2DSZ,ICORE(I010),SCRDSZ2,BETA,ICORE(I000),
     &              NT2DIS)
        ELSE
         CALL XGEMM('N','N',NT2DSZ,SCRDIS2,NT2DIS,ALPHA,ICORE(I020),
     &              NT2DSZ,ICORE(I010),SCRDSZ2,BETA,ICORE(I000),
     &              NT2DSZ)
        ENDIF
C
C NOW WRITE THE TARGET LIST AS Z(M<N,IF) WITH FULL ANTISYMMETRIZATION.
C
        CALL FANCYPUT(ICORE,ICORE(I010),'PF','1432','Y','S',ONE,
     &                POP(1,ISPIN),POP(1,ISPIN),POP(1,ISPIN),
     &                VRT(1,ISPIN),1,TARDIS,2,IRREPDO,LSTTAR)
20     CONTINUE
C
C NOW ADD IN THE CORRESPONDING INTEGRALS
C
202    IF(TERM1)CALL SAXLST(ICORE,MAXCOR,LSTTAR,LSTTAR-100-IOFFLIST,
     &                      LSTTAR,ONE,ONE)
10    CONTINUE
      RETURN
      END
