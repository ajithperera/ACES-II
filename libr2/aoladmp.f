      SUBROUTINE AOLADMP(
     &                   VALUE,ISYM,ITYPE,IWHERE,LJ0X,IAOSYM,IMAP,
     &                   IKEEP,NAODIS,NDISSTRT,IOFFT2,IOFFINT,
     &                   INDX2,INDX,W,
     &                   ILNBUF,LUINT,ISPIN,NAO,IMAX,
     &                   IADBEGIN,IRRBEGIN,IRREND)
C
C THIS ROUTINE LOADS READS AO INTEGRALS AND LOADS THEM INTO THE W
C BUFFER.
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER AND,OR,DIRPRD
      DIMENSION W(*)
      DIMENSION IMAP(*),IKEEP(*)
      DIMENSION VALUE(8*ILNBUF),ISYM(8*ILNBUF)
      DIMENSION ITYPE(8*ILNBUF),IWHERE(8*ILNBUF),IAOSYM(*)
      DIMENSION INDX2(NAO,NAO),INDX(NAO,NAO)
      DIMENSION NAODIS(8),NDISSTRT(8),IOFFT2(8),IOFFINT(8)
      COMMON/INTBUF/BUF(600),IBUF(600),NUT
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/AOSYM/IAOPOP(8),IOFFAO(8),IOFFV(8,2),IOFFO(8,2),
     &             IRPDPDAO(8),IRPDPDAOS(8),ISTART(8,8),ISTARTMO(8,3)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
C
      DATA ONE /1.0D0/
C
      IUPKI(INT)=AND(INT,IALONE)
      IUPKJ(INT)=AND(ISHFT(INT,-IBITWD),IALONE)
      IUPKK(INT)=AND(ISHFT(INT,-2*IBITWD),IALONE)
      IUPKL(INT)=AND(ISHFT(INT,-3*IBITWD),IALONE)
      IPACK(I,J,K,L)=OR(OR(OR(I,ISHFT(J,IBITWD)),ISHFT(K,2*IBITWD)),
     &                  ISHFT(L,3*IBITWD))
      INDX3(I,J,N)=I+(J-1)*N
C
      NAOBUF=0
      NUMINT=0
      CALL LOCATE(LUINT,'TWOELSUP')
1     CONTINUE
      READ(LUINT)BUF,IBUF,NUT
C1     BUFFER IN(LUINT,0) (BUF(1),NUT)
      NUT8=8*NUT
      NAOBUF=NAOBUF+1      
      ISTICK=0
C      CALL IZERO(ISYM,NUT8)
      DO 10 INT=1,NUT
C
       X=BUF(INT)
C
       INDI=IUPKI(IBUF(INT))
       INDJ=IUPKJ(IBUF(INT))
       INDK=IUPKK(IBUF(INT))
       INDL=IUPKL(IBUF(INT))
C
       IK0=INDX2(INDI,INDK)
       KI0=INDX2(INDK,INDI)
       IL0=INDX2(INDI,INDL)
       LI0=INDX2(INDL,INDI)
       JK0=INDX2(INDJ,INDK)
       KJ0=INDX2(INDK,INDJ)
       JL0=INDX2(INDJ,INDL)
       LJ0=INDX2(INDL,INDJ)
C
       IK=IMAP(IK0)
       KI=IMAP(KI0)
       IL=IMAP(IL0)
       LI=IMAP(LI0)
       JK=IMAP(JK0)
       KJ=IMAP(KJ0)
       JL=IMAP(JL0)
       LJ=IMAP(LJ0)
C
       ISYM1=DIRPRD(IAOSYM(INDI),IAOSYM(INDK))
       ISYM2=DIRPRD(IAOSYM(INDI),IAOSYM(INDL))
C
       ISYM(ISTICK+1)=(IOFFINT(ISYM1)-IADBEGIN
     &                +INDX3(IK,JL,IRPDPDAO(ISYM1)))*IKEEP(JL0)
       VALUE(ISTICK+1)=X
       ISYM(ISTICK+2)=(IOFFINT(ISYM2)-IADBEGIN
     &               +INDX3(IL,JK,IRPDPDAO(ISYM2)))*IKEEP(JK0)
       VALUE(ISTICK+2)=X
       ISYM(ISTICK+3)=(IOFFINT(ISYM2)-IADBEGIN
     &               +INDX3(JK,IL,IRPDPDAO(ISYM2)))*IKEEP(IL0)
       VALUE(ISTICK+3)=X
       ISYM(ISTICK+4)=(IOFFINT(ISYM1)-IADBEGIN
     &               +INDX3(JL,IK,IRPDPDAO(ISYM1)))*IKEEP(IK0)
       VALUE(ISTICK+4)=X
       ISYM(ISTICK+5)=(IOFFINT(ISYM1)-IADBEGIN
     &               +INDX3(KI,LJ,IRPDPDAO(ISYM1)))*IKEEP(LJ0)
       VALUE(ISTICK+5)=X
       ISYM(ISTICK+6)=(IOFFINT(ISYM2)-IADBEGIN
     &               +INDX3(LI,KJ,IRPDPDAO(ISYM2)))*IKEEP(KJ0)
       VALUE(ISTICK+6)=X
       ISYM(ISTICK+7)=(IOFFINT(ISYM2)-IADBEGIN
     &               +INDX3(KJ,LI,IRPDPDAO(ISYM2)))*IKEEP(LI0)
       VALUE(ISTICK+7)=X
       ISYM(ISTICK+8)=(IOFFINT(ISYM1)-IADBEGIN
     &               +INDX3(LJ,KI,IRPDPDAO(ISYM1)))*IKEEP(KI0)
       VALUE(ISTICK+8)=X
C
       ISTICK=ISTICK+8
C
10    CONTINUE
C
      CALL SCATTER(NUT8,W,ISYM,VALUE)
C
      NUMINT=NUMINT+MAX(0,NUT)
      NAOBUF=NAOBUF+1
C
      IF(NUT.NE.-1)GOTO 1
C
c      WRITE(6,1000)NUMINT,NAOBUF
c1000  FORMAT(T3,'Processed ',I12,' integrals from ',I10,' buffers.')
      RETURN
      END
