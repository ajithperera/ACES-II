      SUBROUTINE W5TAU(ICORE,MAXCOR,IUHF,TAU,IOFFLIST,CCSD)
C
C THIS ROUTINE CALCULATES THE CONTRIBUTION 
C
C  W(Ab,Ci) <= TAU(Ab,Mn)*W(Mn,Ci) [ISPIN=4]
C  W(Ab,Ic) <= TAU(Ab,Mn)*W(Mn,Ic) [ISPIN=3]
C  W(A<B,CI)<= TAU(A<B,M<N)*W(M<N,CI) [ISPIN=1,2]
C
C USING A GENERAL OUT-OF-CORE ALGORITHM
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,FACT
      LOGICAL TAU,RHF,CCSD,CC2
      DIMENSION ICORE(MAXCOR),IOFFT1(8,2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFEA(2),NFMI(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/FLAGS/IFLAGS(100)

      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      RHF=IUHF.EQ.0
      CC2 = IFLAGS(2) .EQ. 47
C
      DO 5 ISPIN=4,4-3*IUHF,-1
       IF(ISPIN.EQ.4)THEN
        LSTINT=10-IUHF
        LISTT2=46
        LISTZ =130+IOFFLIST
        ISPA=1
        ISPB=2
        ISPC=1
        ISPI=2
        FACT=ONE
       ELSEIF(ISPIN.EQ.3)THEN
        LSTINT=10
        LISTT2=46
        LISTZ =129+IOFFLIST
        ISPA=1
        ISPB=2
        ISPC=2
        ISPI=1
        FACT=ONE
       ELSEIF(ISPIN.LE.2)THEN
        LSTINT=6+ISPIN
        LISTT2=43+ISPIN
        LISTZ =126+ISPIN+IOFFLIST
        ISPA=ISPIN
        ISPB=ISPIN
        ISPC=ISPIN
        ISPI=ISPIN
        FACT=ONEM
       ENDIF
       CALL GETT1(ICORE,MAXCOR,MXCOR,IUHF,IOFFT1)
       DO 10 IRREPDO=1,NIRREP
        DISSYZ=IRPDPD(IRREPDO,ISYTYP(1,LISTZ))
        NUMDSZ=IRPDPD(IRREPDO,ISYTYP(2,LISTZ))
        DISSYW=IRPDPD(IRREPDO,ISYTYP(1,LSTINT))
        NUMDSW=IRPDPD(IRREPDO,ISYTYP(2,LSTINT))
        DISSYT=IRPDPD(IRREPDO,ISYTYP(1,LISTT2))
        NUMDST=IRPDPD(IRREPDO,ISYTYP(2,LISTT2))
        I000=1
        I010=I000+IINTFP*DISSYT*NUMDST
        I020=I010+IINTFP*DISSYW*NUMDSW
        IF (CC2) THEN
           CALL ZERO(ICORE(I000),NUMDST*DISSYT)
        ELSE
            CALL GETLST(ICORE(I000),1,NUMDST,1,IRREPDO,LISTT2)
        ENDIF
C
CJDW 10/18/95. Zero out T2 vector in the CC3 method.
        IF(IFLAGS(2).EQ.33 .AND. .NOT.CCSD)THEN
        write(6,*) ' @W5TAU-I, Zeroing out T2 vector '
          CALL ZERO(ICORE(I000),DISSYT*NUMDST)
        ENDIF
CJDW END
C
        IF(TAU)THEN
         CALL FTAU(ICORE(I000),ICORE(IOFFT1(1,ISPA)),
     &             ICORE(IOFFT1(1,ISPB)),
     &             DISSYT,NUMDST,POP(1,ISPA),POP(1,ISPB),VRT(1,ISPA),
     &             VRT(1,ISPB),IRREPDO,ISPIN,ONE)
        ENDIF
C
C PICK UP THE INTEGRALS 
C
C  W(Mn,Ci) [ISPIN=4]
C  W(Mn,Ic) [ISPIN=3]
C  W(M<N,IC)[ISPIN=1,2]
C  
C
        CALL GETLST(ICORE(I010),1,NUMDSW,2,IRREPDO,LSTINT)
CSSS        call checksum("W(MNCI):",ICORE(I010),NUMDSW*DISSYW)
CSSS        call checksum("Tau    :",ICORE(I000),NUMDST*DISSYT)
C
C TRANSPOSE KET INDICES IF NECESSARY
C
        IF(ISPIN.LE.2.OR.RHF)THEN
         MAXW=MAX(DISSYW,NUMDSW)
         I030=I020+IINTFP*MAXW
         I040=I030+IINTFP*MAXW
         I050=I040+IINTFP*MAXW
         CALL SYMTR1(IRREPDO,POP(1,ISPI),VRT(1,ISPC),DISSYW,ICORE(I010),
     &               ICORE(I020),ICORE(I030),ICORE(I040))
         IF(RHF)THEN
          CALL SYMTR3(IRREPDO,POP(1,2),POP(1,1),DISSYW,NUMDSW,
     &                ICORE(I010),ICORE(I020),ICORE(I030),ICORE(I040))
         ENDIF
        ENDIF
C
C DO CONTRACTION T(ab,mn) * W(mn,ci) WITH GENERAL OUT OF CORE ALGORITHM
C
        CORLFT=MXCOR-I020+1
        IF(DISSYZ.NE.0)THEN
         NINCOR=CORLFT/(IINTFP*DISSYZ)
        ELSE
         NINCOR=NUMDSZ
        ENDIF
        NLEFT =NUMDSZ
        NFIRST=1
        IOFFW=I010
1       NREAD =MIN(NINCOR,NLEFT)
        CALL GETLST(ICORE(I020),NFIRST,NREAD,1,IRREPDO,LISTZ)
CSSS        call checksum("Z-IN   :",ICORE(I020),NUMDSZ*DISSYZ)
        CALL XGEMM('N','N',DISSYT,NREAD,NUMDST,FACT,ICORE(I000),
     &             DISSYT,ICORE(IOFFW),DISSYW,ONE,ICORE(I020),DISSYT)
CSSS        call checksum("W*Tau  :",ICORE(I020),NUMDSZ*DISSYZ)
        CALL PUTLST(ICORE(I020),NFIRST,NREAD,1,IRREPDO,LISTZ)
        IOFFW=IOFFW+IINTFP*DISSYW*NREAD
        NLEFT=NLEFT-NREAD
        NFIRST=NFIRST+NREAD
        IF(NLEFT.NE.0)GOTO 1
10     CONTINUE
C
5     CONTINUE
C
      RETURN
      END
