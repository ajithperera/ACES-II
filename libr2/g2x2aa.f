      SUBROUTINE G2X2AA(T2,Z2,T1A,TAU,ISPIN,FMI,POP,VRT,NOCCSQ,
     &                  DISSYT,DISSYZ,NUMSYT,NUMSYZ,NFSIZ,
     &                  LISTT,LISTZ,IRREP,TMP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL TAU
      INTEGER DISSYT,DISSYZ,DIRPRD,POP,VRT
      DIMENSION T2(DISSYT,NOCCSQ),Z2(DISSYZ,NOCCSQ),FMI(NFSIZ)
      DIMENSION TMP(1),POP(8),VRT(8),T1A(1)
C
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
C
      DATA AZERO,ONE,ONEM /0.0D0,1.0D0,-1.0D0/
C
C   GET T2  AMPLITUDES
C
      CALL GETLST(T2,1,NUMSYT,2,IRREP,LISTT)
C
C  IF TAU IS TRUE FORM TAU AMPLITUDES (ONLY FOR CCSD) 
C
      IF(TAU) THEN
       CALL FTAU(T2,T1A,T1A,DISSYT,NUMSYT,POP,POP,VRT,VRT,
     &           IRREP,ISPIN,ONE)
      ENDIF
C
      CALL SYMEXP(IRREP,POP,DISSYT,T2)
      CALL ZERO(Z2,DISSYZ*NOCCSQ)
C
C   PERFORM MULTIPLICATION
C
      JOFF=1     
      IOFF=1
      DO 90 IRREPJ=1,NIRREP
C
       NOCCJ=POP(IRREPJ)
C
       IF(NOCCJ.EQ.0) GO TO 90
C
       IRREPI=DIRPRD(IRREPJ,IRREP)
C
       NOCCI=POP(IRREPI)
C
       IF(NOCCI.EQ.0) GO TO 80 
C
       CALL XGEMM('N','T',DISSYT*NOCCI,NOCCJ,NOCCJ,ONEM,T2(1,JOFF), 
     &            NOCCI*DISSYT,FMI(IOFF),NOCCJ,
     &            AZERO,Z2(1,JOFF),NOCCI*DISSYZ)
C
       JOFF=JOFF+NOCCJ*NOCCI
80     CONTINUE
       IOFF=IOFF+NOCCJ*NOCCJ
90    CONTINUE
C
      CALL ASSYM(IRREP,POP,DISSYZ,DISSYZ,T2,Z2)
C
      CALL GETLST(Z2,1,NUMSYZ,1,IRREP,LISTZ)
      CALL VADD(Z2,Z2,T2,NUMSYZ*DISSYZ,ONE)
      CALL PUTLST(Z2,1,NUMSYZ,1,IRREP,LISTZ)
      RETURN
      END
