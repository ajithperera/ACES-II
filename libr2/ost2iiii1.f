      SUBROUTINE OST2IIII1(ICORE,MAXCOR,IUHF,W,LAMBDA,WL)
C
C
C   THIS ROUTINE CALCULATE INACTIVE,INACTIVE-INACTIVE,INACTIVE T2 CONTRIBUTION
C
C                                                               ISPIN JSPIN
C   T2(IJ,AB)=-W*T2(Mj,Nm)*T2(ni,ab)  T2(JI,AB)=P(I,J)T2(IJ,AB)    1     1
C   T2(ij,ab)=-W*T2(Jn,Nm)*T2(MI,AB)  T2(ji,ab)=P(i,j)T2(ij,ab)    2     1
C   T2(Ji,Ab)= W*T2(Mj,Nm)*T2(In,Ba)                               1     2
C   T2(Ij,Ab)= W*T2(Jn,Nm)*T2(Mi,Ba)                               2     2
C
CEND
C
CPROGRAMED PS NOV/92
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,POP,VRT,DISSYT2,DISSYT1
      CHARACTER*4 STRT21,STRT22
      LOGICAL LAMBDA
C
      DIMENSION ICORE(MAXCOR)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
C
      INTEGER POPA,POPI,VRTA,VRTI
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      INTEGER FSDPDAN,FSDPDNA,FSDPDAA,FSDPDIN,FSDPDNI,FSDPDII,FSDPDAI,
     $   FSDPDIA
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
C
      COMMON /ACTIRR/ IRREPO(2),IRREPV(2)
C
      COMMON /FLAGS/ IFLAGS(100)
C
      DATA ONE,ONEM,ZILCH,FOUR/1.D0,-1.D0,0.D0,4.0D0/
C
      IF(.NOT.LAMBDA) THEN
         LISTAR0=60
      ELSE
         LISTAR0=143
      ENDIF
      LISTT20=43
C
      DO 10 ISPIN=1,IUHF+1
         DO 20 JSPIN=1,IUHF+1
         LISTAR=LISTAR0+ISPIN
         IF(JSPIN.NE.1) LISTAR=LISTAR0+3
         LISTT21=LISTT20+3
         LISTT22=LISTT20+3-ISPIN
         IF(JSPIN.NE.1) LISTT22=LISTT20+3
         IRREPN=IRREPO(3-ISPIN)
         IRREPM=IRREPO(ISPIN)
C
C IRREP IS THE IRREP FOR TARGET AND SECOND T2
C
      DO 100 IRREP=1,NIRREP
         NUMSYT=FSDPDII(IRREP,ISYTYP(2,LISTAR))
         DISSYT=FSDPDII(IRREP,ISYTYP(1,LISTAR))
         IF(NUMSYT*DISSYT.EQ.0) GOTO 100
C     
C     I000:  T2(CONT)  
C
         I000=1
         I010=I000+NUMSYT*DISSYT*IINTFP
         CALL ZERO(ICORE(I000),NUMSYT*DISSYT)
C
         DISSYT2=FSDPDII(IRREP,ISYTYP(1,LISTT22))
         IF(ISPIN.EQ.1.AND.JSPIN.EQ.2) THEN
            NUMSYT2=FSDPDIA(IRREP,ISYTYP(2,LISTT22))
            STRT22='IIIA'
         ELSE
            NUMSYT2=FSDPDAI(IRREP,ISYTYP(2,LISTT22))
            STRT22='IIAI'
         ENDIF
C
         IRREP1=DIRPRD(IRREPN,IRREPM)
         DISSYT1=FSDPDAA(IRREP1,ISYTYP(1,LISTT21))
         IF(ISPIN.EQ.1) THEN
            NUMSYT1=FSDPDAI(IRREP1,ISYTYP(2,LISTT21))
            STRT21='AAAI'
         ELSE
            NUMSYT1=FSDPDIA(IRREP1,ISYTYP(2,LISTT21))
            STRT21='AAIA'
         ENDIF
         IF(NUMSYT1*DISSYT1.EQ.0) GOTO 100
C
         IF(DISSYT1.NE.1) THEN
            WRITE(6,*)'@OST2IIII1-E FATAL ERROR: DISSYT1.NE.1,',
     $         DISSYT1
            CALL ERREX
         ENDIF
C     
C     I000:  T2(CONT)  I010: T2(1)    I020: T2(2)   I030:  SCR
C
         I020=I010+NUMSYT1*DISSYT1*IINTFP
         I030=I020+NUMSYT2*DISSYT2*IINTFP
         IF(I030.GT.MAXCOR) CALL INSMEM('OST2IIII1',I030,MAXCOR)
C     
         CALL FSGET(ICORE(I010),1,NUMSYT1,1,IRREP1,LISTT21,STRT21)
         IF(JSPIN.EQ.1) THEN
            CALL FSGET(ICORE(I020),1,NUMSYT2,1,IRREP,LISTT22,
     $         STRT22)
         ELSE
            I040=I030+NUMSYT2*DISSYT2*IINTFP
            IF(I040.GT.MAXCOR)CALL INSMEM('OST2IIII1',I040,MAXCOR)
            CALL FSGET(ICORE(I030),1,NUMSYT2,1,IRREP,LISTT22,
     $         STRT22)
            CALL SYMTRA2(IRREP,VRTI(1,1),VRTI(1,2),DISSYT2,
     $         NUMSYT2,ICORE(I030),ICORE(I020))
         ENDIF
C
         IOFFT=I000
         DO 200 IRREPJ=1,NIRREP
            NPOPJ=POPI(IRREPJ,3-ISPIN)
            IF(NPOPJ.EQ.0) GOTO 200
            IRREPI=DIRPRD(IRREP,IRREPJ)
            IF(JSPIN.EQ.1) THEN
               NPOPI=POPI(IRREPI,3-ISPIN)
            ELSE
               NPOPI=POPI(IRREPI,ISPIN)
            ENDIF
            IF(NPOPI.EQ.0) GOTO 200
C
            IF(IRREPJ.NE.IRREPN) GOTO 201
C
               CALL XGEMM('N','N',NUMSYT2*DISSYT2,NUMSYT1*DISSYT1,1,W,
     $            ICORE(I020),NUMSYT2*DISSYT2,ICORE(I010),1,ZILCH,
     $            ICORE(IOFFT),NUMSYT2*DISSYT2)
C
 201           CONTINUE
               IOFFT=IOFFT+DISSYT*NPOPI*NPOPJ*IINTFP
C
 200     CONTINUE
C     
C     I000:  T2(CONT) and T2(TARGET)  I010: T2(CONT-TR)
C
         I020=I010+NUMSYT*DISSYT*IINTFP
         IF(I020.GT.MAXCOR)CALL INSMEM('OST2IIII1',I020,MAXCOR)
C
         IF(JSPIN.EQ.1) THEN
            CALL SYMTRA(IRREP,POPI(1,ISPIN),POPI(1,ISPIN),DISSYT,
     $         ICORE(I000),ICORE(I010))
            CALL SAXPY(NUMSYT*DISSYT,ONEM,ICORE(I000),1,ICORE(I010),1)
            CALL FSGET(ICORE(I000),1,NUMSYT,1,IRREP,LISTAR,'IIII')
            IF(.NOT.LAMBDA) THEN
              CALL SAXPY(DISSYT*NUMSYT,ONE,ICORE(I010),1,
     $              ICORE(I000),1)
              CALL FSPUT(ICORE(I000),1,NUMSYT,1,IRREP,LISTAR,'IIII')
            ELSE
              WL=WL+SDOT(NUMSYT*DISSYT,ICORE(I000),1,ICORE(I010),1)/FOUR
            ENDIF
         ELSE
            IF(ISPIN.EQ.1) THEN
               CALL SYMTRA(IRREP,POPI(1,2),POPI(1,1),DISSYT,
     $            ICORE(I000),ICORE(I010))
               II=I010
               IT=I000
            ELSE
               II=I000
               IT=I010
            ENDIF
            CALL FSGET(ICORE(IT),1,NUMSYT,1,IRREP,LISTAR,'IIII')
            IF(.NOT.LAMBDA) THEN
               CALL SAXPY(DISSYT*NUMSYT,ONE,ICORE(II),1,
     $            ICORE(IT),1)
               CALL FSPUT(ICORE(IT),1,NUMSYT,1,IRREP,LISTAR,'IIII')
            ELSE
               WL=WL+SDOT(NUMSYT*DISSYT,ICORE(IT),1,ICORE(II),1)
            ENDIF
         ENDIF
C     
 100  CONTINUE
C     
 20   CONTINUE
C
 10   CONTINUE
      RETURN
      END
