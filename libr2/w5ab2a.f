      SUBROUTINE W5AB2A(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES ONE OF THE TERMS WHICH CONTRIBUTES
C  TO THE W(EfAm) INTERMEDIATE WHICH IS NEEDED FOR CCSD GRADIENTS
C  AND CCSDT MODELS.  
C
C    Z(EfAm) = - SUM T1(N,E) * W (NfAm) - SUM T1(n,f) * W (EnAm)
C                 N                        n
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,ALPHA,BETA
      DIMENSION ICORE(MAXCOR),IOFFT1(8,2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      DATA ONE   /1.0/
      DATA ONEM  /-1.0/
      DATA ZILCH /0.0/
      CALL GETT1(ICORE,MAXCOR,MXCOR,IUHF,IOFFT1)
      LSTTAR=130
      ALPHA=ONEM
      BETA =ZILCH
C
C FIRST CONTRACTION: 
C                                
C    Z(EfAm) = - SUM T1(N,E) * W1(NfAm) 
C                 N                    
C
C HERE W1 IS SIMILAR TO THE W(MBEJ) INTERMEDIATE AND IS STORED
C  ON LIST 118, BUT UNFORTUNATELY AS AN,fm.
C
C FIRST PIECE 
C
C READ THE FIRST SET OF INTERMEDIATES INTO CORE AS I(AN,fm)
C
      MAXTAR=0
      DO 5 IRREP=1,NIRREP
       MAXTAR=MAX(MAXTAR,IRPDPD(IRREP,ISYTYP(1,LSTTAR)))
5     CONTINUE
C
      LISTW =118
      ISIZE=ISYMSZ(ISYTYP(1,LISTW),ISYTYP(2,LISTW))
      I000=1
      I010=I000+MAX(MAXTAR,ISIZE)*IINTFP
      I020=I010+ISIZE*IINTFP
      CALL GETALL(ICORE(I010),ISIZE,1,LISTW)
C
C RESORT TO I(Am,fN).
C
      CALL SSTRNG(ICORE(I010),ICORE(I000),ISIZE,ISIZE,ICORE(I020),
     &            'AABB')
C
C NOW LOOP OVER IRREPS AND FORM PRODUCT
C
      IOFFIR=I000
      DO 10 IRREPDO=1,NIRREP
       WDSZ=IRPDPD(IRREPDO,ISYTYP(1,21))
       WDIS=IRPDPD(IRREPDO,ISYTYP(2,21))
       TARDSZ=IRPDPD(IRREPDO,ISYTYP(1,LSTTAR))
       TARDIS=IRPDPD(IRREPDO,ISYTYP(2,LSTTAR))
       TARSIZ=TARDIS*TARDSZ
C
C NOW FORM THE PRODUCT MATRIX [Z(Am,fE)] WITH MATRIX MULTIPLICATION
C                                        +
C            Z(Am,fE) = I(Amf,N) * T(E,N)
C
       I020=I010+IINTFP*TARDIS*TARDSZ
       IOFFZ=I010
       CALL IZERO(ICORE(IOFFZ),IINTFP*TARDIS*TARDSZ)
       DO 20 IRREPN=1,NIRREP
        IRREPF=DIRPRD(IRREPN,IRREPDO)
        IRREPE=IRREPN
        IOFFT=IOFFT1(IRREPE,1) 
        NROWI=WDSZ*VRT(IRREPF,2)
        NCOLI=POP(IRREPN,1)
        NROWZ=NROWI
        NCOLZ=VRT(IRREPE,1)
        NROWT=VRT(IRREPE,1)
        NCOLT=POP(IRREPN,1)
        NSUM =NCOLI
        IF(MIN(NROWZ,NCOLZ,NSUM).GT.0)THEN
         CALL XGEMM('N','T',NROWZ,NCOLZ,NSUM,ALPHA,ICORE(IOFFIR),
     &              NROWI,ICORE(IOFFT),NROWT,BETA,ICORE(IOFFZ),
     &              NROWZ)
        ENDIF
        IOFFZ=IOFFZ+IINTFP*NROWZ*NCOLZ
        IOFFIR=IOFFIR+IINTFP*NROWI*NCOLI
20     CONTINUE
C
C TRANSPOSE KET INDICES Z(Am,fE) -> Z(Am,Ef)
C
       I030=I020+IINTFP*TARDIS
       I040=I030+IINTFP*TARDIS
       I050=I040+IINTFP*TARDIS
       CALL SYMTR1(IRREPDO,VRT(1,2),VRT(1,1),TARDIS,
     &             ICORE(I010),ICORE(I020),ICORE(I030),
     &             ICORE(I040))
C    
C NOW TRANSPOSE TARGET TO Z(fE,Am) AND AUGMENT LISTS
C
       I030=I020+IINTFP*TARSIZ
       IF(I030.LE.MAXCOR)THEN
        CALL TRANSP(ICORE(I010),ICORE(I020),TARDSZ,TARDIS)
c YAU : old
c       CALL ICOPY(IINTFP*TARDSZ*TARDIS,ICORE(I020),1,ICORE(I010),1)
c YAU : new
        CALL DCOPY(TARDSZ*TARDIS,ICORE(I020),1,ICORE(I010),1)
c YAU : end
        CALL GETLST(ICORE(I020),1,TARDIS,1,IRREPDO,LSTTAR)
        CALL SAXPY (TARSIZ,ONE,ICORE(I020),1,ICORE(I010),1)
        CALL PUTLST(ICORE(I010),1,TARDIS,1,IRREPDO,LSTTAR)
       ELSE
        I030=I020+IINTFP*TARDSZ
        IF(I030.GT.MAXCOR)THEN
         CALL INSMEM('W5AB2A',I030,MAXCOR)
         CALL ERREX
        ENDIF
        IOFF=I010
        DO 200 IDIS=1,TARDIS
         CALL SCOPY(TARDSZ,ICORE(IOFF),TARDIS,ICORE(I020),1)
         CALL GETLST(ICORE(I000),IDIS,1,1,IRREPDO,LSTTAR)
         CALL SAXPY (TARDSZ,ONE,ICORE(I020),1,ICORE(I000),1)
         CALL PUTLST(ICORE(I000),IDIS,1,1,IRREPDO,LSTTAR)
         IOFF=IOFF+IINTFP
200     CONTINUE
       ENDIF
10    CONTINUE 
C
C SECOND PIECE
C    Z(EfAm) =  - SUM T1(n,f) * W (EnAm)
C                  n
C
C READ IN FIRST SET OF INTERMEDIATES INTO CORE FOR
C  ALL IRREPS I(Em,An)
C
      LISTW =125
      ISIZE=ISYMSZ(ISYTYP(1,LISTW),ISYTYP(2,LISTW))
      I000=1
      I010=I000+MAX(ISIZE,MAXTAR)*IINTFP
      I020=I010+ISIZE*IINTFP
      CALL GETALT(ICORE(I010),ISIZE,1,LISTW)
C
C RESORT TO I(En,Am).
C
      CALL SSTRNG(ICORE(I010),ICORE(I000),ISIZE,ISIZE,ICORE(I020),
     &            'ABAB')
C
C NOW LOOP OVER IRREPS AND FORM PRODUCT
C
      IOFFIR=I000
      DO 110 IRREPDO=1,NIRREP
       WDSZ=IRPDPD(IRREPDO,ISYTYP(1,25))
       WDIS=WDSZ
       TARDSZ=IRPDPD(IRREPDO,ISYTYP(1,LSTTAR))
       TARDIS=IRPDPD(IRREPDO,ISYTYP(2,LSTTAR))
       TARSIZ=TARDIS*TARDSZ
C
C DO IN-PLACE TRANSPOSITION OF I MATRIX, GIVIGN I(Am,En).
C
       CALL MTRAN2(ICORE(IOFFIR),WDIS)
C
C NOW FORM THE PRODUCT MATRIX [Z(Fi,nM)] WITH MATRIX MULTIPLICATION
C                                        +
C            Z(Am,Ef) = I(Am,En) * T(f,n)
C
       I020=I010+IINTFP*TARDIS*TARDSZ
       IOFFZ=I010
       CALL IZERO(ICORE(IOFFZ),IINTFP*TARDIS*TARDSZ)
       DO 120 IRREPN=1,NIRREP
        IRREPE=DIRPRD(IRREPN,IRREPDO)
        IRREPF=IRREPN
        IOFFT=IOFFT1(IRREPF,2) 
        NROWI=WDSZ*VRT(IRREPE,1)
        NCOLI=POP(IRREPN,2)
        NROWZ=NROWI
        NCOLZ=VRT(IRREPF,2)
        NROWT=VRT(IRREPF,2)
        NCOLT=POP(IRREPN,2)
        NSUM =NCOLI
        IF(MIN(NROWZ,NCOLZ,NSUM).GT.0)THEN
         CALL XGEMM('N','T',NROWZ,NCOLZ,NSUM,ALPHA,ICORE(IOFFIR),
     &              NROWI,ICORE(IOFFT),NROWT,BETA,ICORE(IOFFZ),
     &              NROWZ)
        ENDIF
        IOFFZ=IOFFZ+IINTFP*NROWZ*NCOLZ
        IOFFIR=IOFFIR+IINTFP*NROWI*NCOLI
120    CONTINUE
C
C NOW TRANSPOSE THE MONSTER AND AUGMENT THE LISTS ON DISK.
C
       I030=I020+IINTFP*TARSIZ
       IF(I030.LE.MAXCOR)THEN
        CALL TRANSP(ICORE(I010),ICORE(I020),TARDSZ,TARDIS)
        CALL GETLST(ICORE(I010),1,TARDIS,1,IRREPDO,LSTTAR)
        CALL SAXPY (TARSIZ,ONE,ICORE(I020),1,ICORE(I010),1)
        CALL PUTLST(ICORE(I010),1,TARDIS,1,IRREPDO,LSTTAR)
       ELSE
        I030=I020+IINTFP*TARDSZ
        IF(I030.GT.MAXCOR)THEN
         CALL INSMEM('W5AB2A',I030,MAXCOR)
         CALL ERREX
        ENDIF
        IOFF=I010
        DO 201 IDIS=1,TARDIS
         CALL SCOPY(TARDSZ,ICORE(IOFF),TARDIS,ICORE(I020),1)
         CALL GETLST(ICORE(I000),IDIS,1,1,IRREPDO,LSTTAR)
         CALL SAXPY (TARDSZ,ONE,ICORE(I020),1,ICORE(I000),1)
         CALL PUTLST(ICORE(I000),IDIS,1,1,IRREPDO,LSTTAR)
         IOFF=IOFF+IINTFP
201     CONTINUE
       ENDIF
C       
110   CONTINUE 
      RETURN
      END
