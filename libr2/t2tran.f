      SUBROUTINE T2TRAN(ICASE,T2MO,T2MIX,EVEC1,EVEC2,
     &                  SCR,NAO,NMO,ISPIN,IUHF,IRREPIJ,IRREPAB)
C
C THIS ROUTINE TRANSFORMS T2 VECTORS BETWEEN THE MO AND MIXED
C AO/MO REPRESENTATIONS:
C
C        T2(XX,IJ) <== T2(AB,IJ) [ICASE=1]
C
C        T2(AB,IJ) <== T2(XX,IJ) [ICASE=2]
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,POP,VRT
      CHARACTER*8 LABELX(2),LABELY(2)
      DIMENSION T2MO(*),T2MIX(*)
      DIMENSION EVEC1(NAO,NMO),EVEC2(NAO,NMO),SCR(NAO*NAO)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/AOSYM/IAOPOP(8),IOFFAO(8),IOFFV(8,2),IOFFO(8,2),
     &             IRPDPDAO(8),IRPDPDAOS(8),ISTART(8,8),ISTARTMO(8,3)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      DATA LABELX /'SCFEVECA','SCFEVECB'/
      DATA LABELY /'SCFEVECA','SCFEVECB'/
      DATA ZILCH,ONE /0.0D0,1.0D0/
C
      NNM1O2(I)=(I*(I-1))/2
C
      NUMIJDIS=IRPDPD(IRREPIJ,ISYTYP(2,43+ISPIN))
      IF(ISPIN.LE.2)THEN 
       NUMABDIS=IRPDPD(IRREPAB,18+ISPIN)
      ELSE
       NUMABDIS=IRPDPD(IRREPAB,ISYTYP(1,46))
      ENDIF 
C
      IOFFMO=1
      IOFFMIX=1
C
      IF(ISPIN.LE.2)THEN
       CALL GETREC(20,'JOBARC',LABELX(ISPIN),IINTFP*NAO*NMO,EVEC1)
       CALL SCOPY (NAO*NMO,EVEC1,1,EVEC2,1)
       ISPIN1=ISPIN
       ISPIN2=ISPIN
      ELSE
       CALL GETREC(20,'JOBARC',LABELX(1),IINTFP*NAO*NMO,EVEC1)
       CALL GETREC(20,'JOBARC',LABELX(1+IUHF),IINTFP*NAO*NMO,EVEC2)
       ISPIN1=1
       ISPIN2=2
      ENDIF 
C
      IF(ICASE.EQ.1)THEN
C
C LOOP OVER DISTRIBUTIONS
C
       DO 10 IJ=1,NUMIJDIS
C
C LOOP OVER SYMMETRIES OF B
C
        DO 20 IRREPB=1,NIRREP
         IRREPA=DIRPRD(IRREPB,IRREPAB)
         NUMA=VRT(IRREPA,ISPIN1)
         NUMB=VRT(IRREPB,ISPIN2)
         NAO1=IAOPOP(IRREPA)
         NAO2=IAOPOP(IRREPB)
         IOFFR1=IOFFV(IRREPA,ISPIN1)
         IOFFR2=IOFFV(IRREPB,ISPIN2)
         IOFFL1=IOFFAO(IRREPA)
         IOFFL2=IOFFAO(IRREPB)
         IF (MIN(NAO1,NUMB,NUMA).NE.0) THEN
            CALL XGEMM('N','N',NAO1,NUMB,NUMA,ONE,EVEC1(IOFFL1,IOFFR1),
     &                 NAO,T2MO(IOFFMO),NUMA,ZILCH,SCR,NAO1)
         ELSE
            CALL DZERO(SCR,NAO1*NUMB)
         END IF 
         IF (MIN(NAO1,NAO2,NUMB).NE.0) THEN
            CALL XGEMM('N','T',NAO1,NAO2,NUMB,ONE,SCR,NAO1,
     &                 EVEC2(IOFFL2,IOFFR2),NAO,
     &                 ZILCH,T2MIX(IOFFMIX),NAO1)
         ELSE
            CALL DZERO(T2MIX(IOFFMIX),NAO1*NAO2)
         END IF
         IOFFMIX=IOFFMIX+NAO1*NAO2
         IOFFMO =IOFFMO +NUMA*NUMB
20      CONTINUE
10     CONTINUE 
C
      ELSE
C
       DO 30 IJ=1,NUMIJDIS
        DO 40 IRREPB=1,NIRREP
         IRREPA=DIRPRD(IRREPAB,IRREPB)
         NUMA=VRT(IRREPA,ISPIN1)
         NUMB=VRT(IRREPB,ISPIN2)
         NAO1=IAOPOP(IRREPA)
         NAO2=IAOPOP(IRREPB)
         IOFFR1=IOFFV(IRREPA,ISPIN1)
         IOFFR2=IOFFV(IRREPB,ISPIN2)
         IOFFL1=IOFFAO(IRREPA)
         IOFFL2=IOFFAO(IRREPB)
         IF (MIN(NUMA,NAO2,NAO1).NE.0) THEN
            CALL XGEMM('T','N',NUMA,NAO2,NAO1,ONE,EVEC1(IOFFL1,IOFFR1),
     &                 NAO,T2MIX(IOFFMIX),NAO1,ZILCH,SCR,NUMA)
         ELSE
            CALL DZERO(SCR,NUMA*NAO2)
         END IF
         IF (MIN(NUMA,NUMB,NAO2).NE.0) THEN
            CALL XGEMM('N','N',NUMA,NUMB,NAO2,ONE,SCR,NUMA,
     &                 EVEC2(IOFFL2,IOFFR2),NAO,ZILCH,T2MO(IOFFMO),NUMA)
         ELSE
            CALL DZERO(T2MO(IOFFMO),NUMA*NUMB)
         END IF
         IOFFMO=IOFFMO+NUMA*NUMB
         IOFFMIX=IOFFMIX+NAO1*NAO2
40      CONTINUE
30     CONTINUE
C
      ENDIF
C
      RETURN
      END      
