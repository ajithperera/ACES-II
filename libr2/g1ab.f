      SUBROUTINE G1AB(L,T,T1,G,ISAME,ISPIN,POP1,POP2,
     &                VRT1,VRT2,NVRTSQ,DISSYW,DISSYT,NUMSYW,
     &                NUMSYT,LISTL,LISTT,IRREP,TMP,IUHF,FACT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL ISAME
      DOUBLE PRECISION L
      INTEGER DISSYT,DISSYW,DIRPRD,POP1,POP2,VRT1,VRT2
      DIMENSION L(NUMSYW,DISSYW),T(NUMSYT,DISSYT),G(NVRTSQ)
      DIMENSION T1(DISSYW,NUMSYW),TMP(1)
      DIMENSION POP1(8),POP2(8),VRT1(8),VRT2(8) 
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),DIRPRD(8,8)
C
      DATA ONE,ONEM,TWO,HALF /1.0D0,-1.0D0,2.0D0,0.5D0/
C
      FACTM=-FACT
C
C      PICK UP FIRST THE L AMPLITUDES AND TRANPOSE THEM
C
       CALL GETLST(T1,1,NUMSYW,2,IRREP,LISTL)
       CALL TRANSP(T1,L,NUMSYW,DISSYW)
C
C  SPIN ADAPTED CODE FOR RHF
C
C     FOR MBPT4 COPY L ( ON W) TO T
C
       IF(ISAME) THEN
c YAU : old
c       CALL ICOPY(IINTFP*NUMSYT*DISSYT,L,1,T,1)
c YAU : new
        CALL DCOPY(NUMSYT*DISSYT,L,1,T,1)
c YAU : end
       ENDIF
C
C     FOR RHF SPIN ADAPT W
C
       IF(IUHF.EQ.0) THEN
        CALL SYMTRA(IRREP,VRT1,VRT2,NUMSYW,L,T1)
        CALL SSCAL(NUMSYW*DISSYW,TWO,L,1)
        CALL SAXPY(NUMSYW*DISSYW,ONEM,T1,1,L,1)
       ENDIF
C
C     FOR CC METHODS GET T AMPLITUDES 
C
       IF(.NOT.ISAME) THEN
        CALL GETLST(T1,1,NUMSYT,1,IRREP,LISTT)
C
C  TRANSPOSE THE T AMPLITUDES
C
       CALL TRANSP(T1,T,NUMSYT,DISSYT)
       ENDIF
C
      IF(IUHF.EQ.1.AND.ISPIN.EQ.1) THEN
        CALL SYMTR1(IRREP,VRT1,VRT2,NUMSYW,L,TMP,TMP(1+NUMSYW),
     &              TMP(1+2*NUMSYW))
        CALL SYMTR1(IRREP,VRT1,VRT2,NUMSYT,T,TMP,TMP(1+NUMSYT),
     &              TMP(1+2*NUMSYT))
      ENDIF
C
       IOFF=1
       JOFF=1
       DO 90 IRREPI=1,NIRREP
C          
C        GET NUMBER OF VIRTUAL ORBITALS FOR IRREPJ
C
        NVRTI=VRT1(IRREPI)
C
C        DETERMINE IRREPI WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREP
C
        IRREPJ=DIRPRD(IRREP,IRREPI)
C
C        GET NUMBER OF VIRTUAL ORBITALS FOR KRREP
C
        NVRTJ=VRT2(IRREPJ)
C
C        IF ZERO, NOTHING TO COMPUTE
C
        IF(MIN(NVRTJ,NVRTI).NE.0) THEN
C
        CALL XGEMM('T','N',NVRTI,NVRTI,NUMSYW*NVRTJ,FACTM,
     &             T(1,JOFF),NVRTJ*NUMSYW,L(1,JOFF),
     &             NVRTJ*NUMSYT,ONE,G(IOFF),NVRTI)
        ENDIF
C
       JOFF=JOFF+NVRTJ*NVRTI
       IOFF=IOFF+NVRTI*NVRTI
90    CONTINUE
C
      RETURN
      END
