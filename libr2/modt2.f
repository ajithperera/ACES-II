      SUBROUTINE MODT2(ICORE,MAXCOR,IUHF,FACTAA,FACTAB,BREDUNDANT)
C
C THIS ROUTINE READS IN LISTS 36 AND 37, AND FORMS
C
C   Z(AI,bj) = T(AI,bj) + SIGN*T(AI)*T(bj)
C
C AND THEN RESORTS THEM AND WRITES THE RESULT TO LISTS 38 AND
C 39.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION FACTAA,FACTAB,ONE,ONEM,ZILCH
      LOGICAL BREDUNDANT
      DIMENSION ICORE(MAXCOR),IOFFT1(8,2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
C
      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      CALL GETT1(ICORE,MAXCOR,MXCOR,IUHF,IOFFT1)

C
      LISTT=37
      LISTR=39
      IF(.NOT.BREDUNDANT) LISTR=239
      NUMDIS=IRPDPD(1,ISYTYP(2,LISTT))
      DISSIZ=IRPDPD(1,ISYTYP(1,LISTT))
      ISIZE=ISYMSZ(ISYTYP(1,LISTT),ISYTYP(2,LISTT))
      I000=1
      I010=I000+ISIZE*IINTFP
      I020=I010+ISIZE*IINTFP
      IF(BREDUNDANT) THEN
         CALL GETALL(ICORE(I000),ISIZE,1,LISTT)
      ELSE
         CALL GETALL_NR(ICORE(I000),ICORE(I010),MAXCOR-I010,LISTT,1)
      ENDIF

      IF(FACTAB.NE.ZILCH)THEN
        IF(BREDUNDANT) THEN
           CALL GETLST(ICORE(I000),1,NUMDIS,1,1,LISTT)
        ELSE
           CALL GETLST_NR(ICORE(I000),ICORE(I010),MAXCOR-I010,LISTT,1)
        ENDIF
                  
         CALL XGEMM ('N','N',DISSIZ,NUMDIS,1,FACTAB,
     &               ICORE(IOFFT1(1,1)),DISSIZ,
     &               ICORE(IOFFT1(1,2)),1,
     &               ONE,ICORE(I000),DISSIZ)
      ENDIF

      CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),
     &            POP(1,1),VRT(1,2),POP(1,2),ICORE(I020),
     &            1,'1432')
      CALL PUTALL(ICORE(I010),1,1,LISTR)

      IF(IUHF.NE.0)THEN
       CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),
     &             POP(1,1),VRT(1,2),POP(1,2),ICORE(I020),
     &             1,'3214')
       CALL PUTALL(ICORE(I010),1,1,LISTR-1)

      ENDIF
C
      DO 20 ISPIN=1,1+IUHF
       LISTT=33+ISPIN
       LISTR=33+ISPIN
       IF(.NOT.BREDUNDANT) LISTR=233+ISPIN
       NUMDIS=IRPDPD(1,ISYTYP(2,LISTT))
       DISSIZ=IRPDPD(1,ISYTYP(1,LISTT))
       ISIZE=ISYMSZ(ISYTYP(1,LISTT),ISYTYP(2,LISTT))
       I000=1
       I010=I000+ISIZE*IINTFP
       I020=I010+ISIZE*IINTFP
       IF(BREDUNDANT) THEN
          CALL GETALL(ICORE(I000),ISIZE,1,LISTT)
       ELSE
          CALL GETALL_NR(ICORE(I000),ICORE(I010),MAXCOR-I010,
     &                   LISTT,1)
       ENDIF
       IF(FACTAA.NE.ZILCH)THEN
        CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,ISPIN),
     &              POP(1,ISPIN),VRT(1,ISPIN),POP(1,ISPIN),
     &              ICORE(I020),1,'1432')
        CALL XGEMM ('N','N',DISSIZ,NUMDIS,1,FACTAA,
     &              ICORE(IOFFT1(1,ISPIN)),DISSIZ,
     &              ICORE(IOFFT1(1,ISPIN)),1,
     &              ONE,ICORE(I010),DISSIZ)
        CALL SSTGEN(ICORE(I010),ICORE(I000),ISIZE,VRT(1,ISPIN),
     &              POP(1,ISPIN),VRT(1,ISPIN),POP(1,ISPIN),
     &              ICORE(I020),1,'1432')
       ENDIF


       CALL PUTALL(ICORE(I000),1,1,LISTR)
20    CONTINUE
      RETURN
      END
