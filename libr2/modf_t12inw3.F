      SUBROUTINE MODF_T12INW3(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE FOLLOWING TERM REQUIRED FOR CCSD
C
C   SUM N F T(F,J) T(B,N) <MN//EF>
C
C  IN RHF THERE ARE TWO REMAINING TERMS
C
C          SUM N f T(f,j) T(B,N) <mN//Ef> (TARGET LIST 58)
C
C          SUM n f T(f,j) T(b,n) <Mn//Ef>   (TARGET LIST 56)
C
C  IN UHF , THERE ARE FOUR ADDITIONAL TERMS REQUIRED
C
C          SUM N F T(F,J) T(B,N) <MN//EF>  (TARGET LIST 54)
C
C          SUM n f T(f,j) T(b,n) <mn//ef>  (TARGET LIST 55)
C
C          SUM N F T(F,J) T(B,M) <mN//eF>  (TARGET LIST 57)
C
C          SUM n F T(F,J) T(b,n) <Mn//eF>  (TARGET LIST 59)
C
C  THE MULTIPLICATION IS CARRIED OUT IN T12W3
C
CEND
C
C   CODED  SEPTEMBER/90
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYW,DISSYZ,DISTMP,VRT,POP
      DIMENSION ICORE(MAXCOR),IOFFT1(2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWO
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF1BB,
     &             NF2AA,NF2BB
C
      DATA AZERO,ONE,ONEM /0.D0,1.D0,-1.D0/
C
C ALLOCATE MEMORY FOR T1 AMPLITUDE AND GET THEM FROM DISK
C

      MXCOR=MAXCOR
      IOFFT1(1)=MXCOR+1-IINTFP*NTAA 
      MXCOR=MXCOR-IINTFP*NTAA
      CALL GETLST(ICORE(IOFFT1(1)),1,1,1,1,90)
      IF(IUHF.EQ.0) THEN
       IOFFT1(2)=IOFFT1(1)
      ELSE
       IOFFT1(2)=IOFFT1(1)-IINTFP*NTBB
       MXCOR=MXCOR-IINTFP*NTBB
       CALL GETLST(ICORE(IOFFT1(2)),1,1,1,2,90)
      ENDIF
C 
C    AAAA AND BBBB SPIN CASES (ONLY NECCESARY FOR UHF)
C
C      SUM N F T(F,J) T(B,N) <MN//EF>  (TARGET LIST 54)
C
C      SUM n f T(f,j) T(b,n) <mn//ef>  (TARGET LIST 55) (UHF)   
C
C  THS SIGN MUST BE HERE ONEM
C
       DO 100 ISPIN=1,IUHF+1
C
C     PREFACTOR OF THE CORRESPONDING CONTRIBUTION
C
        FACT=ONEM
C
C     INTEGRAL (LISTW) AND TARGET (LISTZ) LIST
C
        LISTW=18+ISPIN
        LISTZ=253+ISPIN
C
C    LOOP OVER IRREP
C
        DO 50 IRREP=1,NIRREP
C
         NOCCSQ=0
         DO 45 IRREPJ=1,NIRREP
          IRREPI=DIRPRD(IRREP,IRREPJ)
          NOCCSQ=NOCCSQ+POP(IRREPJ,ISPIN)*POP(IRREPI,ISPIN)
45       CONTINUE
C
         DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
         NUMSYW=IRPDPD(IRREP,ISYTYP(2,LISTW))
         DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
         NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
         DISTMP=DISSYZ
         NUMTMP=NUMSYZ
         MSIZE=MAX(NUMSYW*DISSYW,NUMSYZ*DISSYZ,DISSYZ*NOCCSQ) 
         I001=1
         I002=I001+IINTFP*MSIZE
         I003=I002+IINTFP*MSIZE
         IF(I003.LT.MXCOR) THEN
C
C  IN CORE MULTIPLICATION
C  Missing IUHF argument was added 02/17/97 AP
C  
          CALL T12W3(ICORE(I001),ICORE(I002),ICORE(I003),
     &               ICORE(IOFFT1(ISPIN)),
     &               ICORE(IOFFT1(ISPIN)),DISSYW,DISSYZ,DISTMP,
     &               NUMSYW,NUMSYZ,NUMTMP,NOCCSQ,POP(1,ISPIN),
     &               POP(1,ISPIN),VRT(1,ISPIN),VRT(1,ISPIN),LISTW,
     &               LISTZ,FACT,IRREP,IUHF,MXCOR-I003)
         ELSE
C 
C    SORRY, NO OUT CORE ALGORITHM AVAILABLE 
C
          CALL INSMEM('T12W3 ',I003,MXCOR)
         ENDIF
50      CONTINUE
100    CONTINUE
C
C   ABBA SPIN CASE
C
C          SUM N f T(f,j) T(B,N) <mN//Ef> (TARGET LIST 58)
C
C          SUM n F T(F,J) T(b,n) <Mn//eF>  (TARGET LIST 59)
C
C  THE OVERALL FACTOR IS ONE
C
      DO 200 ISPIN=1,IUHF+1
C
       FACT=ONE
C
C    ON THE FIRST PASS, INITIALIZE OUTPUT LIST AND DO NOT TRANSPOSE
C    RESULT, ON THE SECOND PASS, UPDATE OUTPUT LIST AND TRANSPOSE
C
       I0T1=IOFFT1(3-ISPIN)
       I0T2=IOFFT1(ISPIN)
C
C  INTEGRAL AND TARGET LIST
C
       LISTW=20+ISPIN
       LISTZ=257+ISPIN
C
       DO 150 IRREP=1,NIRREP
C
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMSYW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
        NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
        DISTMP=DISSYZ
        NUMTMP=NUMSYZ
        NOCCSQ=IRPDPD(IRREP,14)
        MSIZE=MAX(NUMSYW*DISSYW,NUMSYZ*DISSYZ,DISSYZ*NOCCSQ)
        I001=1
        I002=I001+IINTFP*MSIZE
        I003=I002+IINTFP*MSIZE 
        IF(I003.LT.MXCOR) THEN
C
C   IN CORE ALGORITHM
C
         CALL T12W3(ICORE(I001),ICORE(I002),ICORE(I003),
     &            ICORE(I0T1),ICORE(I0T2),
     &            DISSYW,DISSYZ,DISTMP,NUMSYW,NUMSYZ,NUMTMP,NOCCSQ,
     &            POP(1,ISPIN),POP(1,3-ISPIN),VRT(1,ISPIN),
     &           VRT(1,3-ISPIN),LISTW,LISTZ,FACT,IRREP,IUHF,MXCOR-I003)
        ELSE
C
C   SORRY, NO OUT CORE ALGORITHM AVAILABLE
C
         CALL INSMEM('T12W3 ',I003,MXCOR)
        ENDIF
150    CONTINUE
200   CONTINUE
      IF(IUHF.EQ.1) THEN
C 
C     ABAB SPIN CASE SECOND CONTRIBUTION
C
C          SUM n f T(f,j) T(b,n) <Mn//Ef>   (TARGET LIST 56)
C
C          SUM N F T(F,J) T(B,M) <mN//eF>  (TARGET LIST 57)
C
C  THE OVERALL FACTOR IS ONE
C
      DO 300 ISPIN=1,IUHF+1
C
       FACT=ONE
C
       I0T1=IOFFT1(3-ISPIN)
C
C  INTEGRAL AND TARGET LIST
C
       LISTW=19-ISPIN
       LISTZ=255+ISPIN
C
       DO 250 IRREP=1,NIRREP
C
        NOCCSQ=0
        DO 245 IRREPJ=1,NIRREP
         IRREPI=DIRPRD(IRREP,IRREPJ)
         NOCCSQ=NOCCSQ+POP(IRREPJ,3-ISPIN)*POP(IRREPI,3-ISPIN)
245     CONTINUE
C
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMSYW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
        NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
        DISTMP=DISSYZ
        NUMTMP=NUMSYZ
        MSIZE=MAX(NUMSYW*DISSYW,NUMSYZ*DISSYZ,DISTMP*NOCCSQ,
     &            NUMTMP*NOCCSQ)
        I001=1
        I002=I001+IINTFP*MSIZE
        I003=I002+IINTFP*MSIZE
        IF(I003.LT.MXCOR) THEN
C
C IN CORE ALGORITHM
C
         CALL T12W3(ICORE(I001),ICORE(I002),ICORE(I003),
     &              ICORE(I0T1),ICORE(I0T1),
     &              DISSYW,DISSYZ,DISTMP,NUMSYW,NUMSYZ,NUMTMP,NOCCSQ,
     &              POP(1,3-ISPIN),POP(1,3-ISPIN),VRT(1,3-ISPIN),
     &              VRT(1,3-ISPIN),LISTW,LISTZ,
     &              FACT,IRREP,IUHF,MXCOR-I003)
        ELSE 
C
C SORRY, NO OUT CORE ALGORITHM
C
         CALL INSMEM('T12W3 ',I003,MXCOR)
        ENDIF
250    CONTINUE
300   CONTINUE
      ENDIF
C
C ALL DONE, RETURN
C
      RETURN
      END
