

      SUBROUTINE OST1II(ICORE,MAXCOR,IUHF,W,LAMBDA,WL)
C
C     THIS ROUTINE CALCULATE THE INACTIVE -- INACTIVE T1 CONTRIBUTION
C     
C     T1(C,I)= W*T2(iM,mN)*T1(c,n)+W*T2(nM,cN)*T1(m,i)
C
C     and
C
C     T1(c,i)= W*T2(In,Nm)*T1(C,M)+W*T2(nM,mC)*T1(N,I)
C
C     AND THE DISCONNECTED T2 CONTRIBUTION
C
C T2(IJ,CD)=-P(IJ,CD)(W*T2(iM,mN)*T1(c,n)+W*T2(nM,cN)*T1(m,i))(T1(D,J)-T1(d,j))
C T2(Ij,Cd)=-(W*T2(iM,mN)*T1(c,n)+W*T2(nM,cN)*T1(m,i))(T1(d,j)-T1(D,J))
C
C and
C
C T2(ij,cd)=-P(ij,cd)(W*T2(In,Nm)*T1(C,M)+W*T2(nM,mC)*T1(N,I))(T1(d,j)-T1(D,J))
C T2(Ji,Dc)=-(W*T2(In,Nm)*T1(C,M)+W*T2(nM,mC)*T1(N,I))(T1(D,J)-T1(d,j))
C
CEND
C
CPROGRAMED PS NOV/92
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,POP,VRT,DISSYTX
      CHARACTER*4 STRING
      LOGICAL LAMBDA
C
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0(2)
C     
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
C
      INTEGER POPA,POPI,VRTA,VRTI
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      INTEGER FSDPDAN,FSDPDNA,FSDPDAA,FSDPDIN,FSDPDNI,FSDPDII,FSDPDAI,
     $   FSDPDIA
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
C
      COMMON /ACTIRR/ IRREPO(2),IRREPV(2)
C
      COMMON /FLAGS/ IFLAGS(100)
C
      DATA ONE,ONEM,HALFM/1.D0,-1.D0,-0.5D0/
C
      NSYT1=0
      NSYT2=0
      LISTT1=90
      LISTL1=190
      LISTT2=46
      IF(.NOT.LAMBDA) THEN
         LISTAR0=60
      ELSE
         LISTAR0=143
      ENDIF
      IRREP2=DIRPRD(IRREPO(1),IRREPO(2))
C
C     READ IN T1 AMPLITUDES REQUIRED FOR CALCULATION OF T2 CONTRIBUTION
C     DIRTY TRICKS ARE PLAYED BECAUSE (D,J) IN THE FIRST TERM IS 
C     UNRESTRICTED BUT IN THE SECOND ONE ONLY INACTIVE IS ALLOWED
C
      NSIZTA=FSDPDII(1,9)
      NSIZTB=FSDPDII(1,10)
      IF(NSIZTA.NE.NSIZTB) THEN
         WRITE(6,*)'@OST1II-E FATAL ERROR: NSIZTA.NE.NSIZTB',
     $      NSIZTA,NSIZTB
         CALL ERREX
      ENDIF
      NSIZTNA=NT(1)
      NSIZTNB=NT(2)
C
C     I0(1):  T1A-T1B  I0(2): T1B-T1A  I010:  T1A  I020:  T1B
C
      I0(1)=1
      I0(2)=I0(1)+MAX(NSIZTA,NSIZTNA)*IINTFP
      I010=I0(2)+MAX(NSIZTB,NSIZTNB)*IINTFP
      I020=I010+NSIZTA*IINTFP
      I030=I020+NSIZTB*IINTFP
      CALL FSGETT1(ICORE(I010),1,LISTT1,'II',9)
      CALL FSGETT1(ICORE(I020),2,LISTT1,'II',10)
      CALL SCOPY(NSIZTA,ICORE(I010),1,ICORE(I0(1)),1)
      CALL SCOPY(NSIZTB,ICORE(I020),1,ICORE(I0(2)),1)
      CALL SAXPY(NSIZTA,ONEM,ICORE(I020),1,ICORE(I0(1)),1)
      CALL SAXPY(NSIZTB,ONEM,ICORE(I010),1,ICORE(I0(2)),1)
      CALL FSPUTT1(ICORE(I0(1)),1,LISTT1,'II',9)
      CALL FSPUTT1(ICORE(I0(2)),2,LISTT1,'II',10)
      CALL GETLST(ICORE(I0(1)),1,1,1,1,LISTT1)
      CALL GETLST(ICORE(I0(2)),1,1,1,2,LISTT1)
      CALL FSPUTT1(ICORE(I010),1,LISTT1,'II',9)
      CALL FSPUTT1(ICORE(I020),2,LISTT1,'II',10)
      IF (.NOT.LAMBDA) THEN
            CALL UPDMOI(1,NT(1),1,99,0,0)
            CALL UPDMOI(2,NT(2),2,99,0,0)
      ENDIF
      I000=I010
C
      DO 10 ISPIN=1,IUHF+1
C
         NSIZTAR=FSDPDII(1,8+ISPIN)
         NSIZT11=FSDPDIA(1,11-ISPIN)
         NSIZT12=FSDPDAI(1,11-ISPIN)
C
C     I000:  T1(TARGET)  I010:  T1(INACT,ACT)   I020:  T1(ACT,INACT)
C
         I010=I000+NT(ISPIN)*IINTFP
         I020=I010+NSIZT11*IINTFP
         I030=I020+NSIZT12*IINTFP
         CALL ZERO(ICORE(I000),NSIZTAR)
         CALL FSGETT1(ICORE(I010),3-ISPIN,LISTT1,'IA',11-ISPIN)
         CALL FSGETT1(ICORE(I020),3-ISPIN,LISTT1,'AI',11-ISPIN)
C
C     T1 TERMS
C
C     FIRST TERM
C
         IRREP=DIRPRD(IRREP2,IRREPO(ISPIN))
         NSYTAR=POPI(IRREP,ISPIN)*VRTI(IRREP,ISPIN)
         IF(NSYTAR.EQ.0) GOTO 11
C
         IOFFTAR=I000
         IOFFT1=I010
         IOFFT2=I020
         DO 100 IRREPI=2,IRREP
            IOFFTAR=IOFFTAR+POPI(IRREPI-1,ISPIN)*VRTI(IRREPI-1,ISPIN)
     $         *IINTFP
            IOFFT1=IOFFT1+POPA(IRREPI-1,3-ISPIN)*VRTI(IRREPI-1,3-ISPIN)
     $         *IINTFP
            IOFFT2=IOFFT2+POPI(IRREPI-1,3-ISPIN)*VRTA(IRREPI-1,3-ISPIN)
     $         *IINTFP
 100     CONTINUE
C
         NSYT1=POPA(IRREP,3-ISPIN)*VRTI(IRREP,3-ISPIN)
         IF(NSYT1.EQ.0) GOTO 11
C
         DISSYT=FSDPDAA(IRREP2,ISYTYP(1,LISTT2))
         IF(ISPIN.EQ.1) THEN
            NUMSYT=FSDPDAI(IRREP2,ISYTYP(2,LISTT2))
            STRING='AAAI'
         ELSE
            NUMSYT=FSDPDIA(IRREP2,ISYTYP(2,LISTT2))
            STRING='AAIA'
         ENDIF
         IF(DISSYT*NUMSYT.EQ.0) GOTO 11
         IF(DISSYT.NE.1.OR.NUMSYT*NSYT1.NE.NSYTAR) THEN
            WRITE(6,*)'@OST1II-E FATAL ERROR: DISSYT,',
     $         'NUMSYT,NSYT1,NSYTAR',DISSYT,NUMSYT,NSYT1,NSYTAR
            CALL ERREX
         ENDIF
C
C  I000: T1(TARGET)  I010: T1(INACT,ACT) I020: T1(ACT,INACT) I030: T2
C
         I040=I030+NUMSYT*DISSYT*IINTFP
C
         CALL FSGET(ICORE(I030),1,NUMSYT,1,IRREP2,LISTT2,STRING)
         CALL XGEMM('N','N',NSYT1,NUMSYT,1,W,ICORE(IOFFT1),NSYT1,
     $      ICORE(I030),1,ONE,ICORE(IOFFTAR),NSYT1)
 11      CONTINUE
C
C     SECOND TERM
C
         IRREP=DIRPRD(IRREP2,IRREPV(ISPIN))
         NSYTAR=POPI(IRREP,ISPIN)*VRTI(IRREP,ISPIN)
         IF(NSYTAR.EQ.0) GOTO 12
C
         IOFFTAR=I000
         IOFFT1=I010
         IOFFT2=I020
         DO 200 IRREPI=2,IRREP
            IOFFTAR=IOFFTAR+POPI(IRREPI-1,ISPIN)*VRTI(IRREPI-1,ISPIN)
     $         *IINTFP
            IOFFT1=IOFFT1+POPA(IRREPI-1,3-ISPIN)*VRTI(IRREPI-1,3-ISPIN)
     $         *IINTFP
            IOFFT2=IOFFT2+POPI(IRREPI-1,3-ISPIN)*VRTA(IRREPI-1,3-ISPIN)
     $         *IINTFP
 200     CONTINUE
C
         NSYT2=POPI(IRREP,3-ISPIN)*VRTA(IRREP,3-ISPIN)
         IF(NSYT2.EQ.0) GOTO 12
C
         NUMSYT=FSDPDAA(IRREP2,ISYTYP(2,LISTT2))
         IF(ISPIN.EQ.1) THEN
            DISSYT=FSDPDAI(IRREP2,ISYTYP(1,LISTT2))
            STRING='AIAA'
         ELSE
            DISSYT=FSDPDIA(IRREP2,ISYTYP(1,LISTT2))
            STRING='IAAA'
         ENDIF
         IF(DISSYT*NUMSYT.EQ.0) GOTO 12
         IF(NUMSYT.NE.1.OR.DISSYT*NSYT2.NE.NSYTAR) THEN
            WRITE(6,*)'@OST1II-E FATAL ERROR: DISSYT,',
     $         'NUMSYT,NSYT2,NSYTAR',DISSYT,NUMSYT,NSYT2,NSYTAR
            CALL ERREX
         ENDIF
C
C  I000: T1(TARGET)  I010: T1(INACT,ACT) I020: T1(ACT,INACT) I030: T2
C
         I040=I030+NUMSYT*DISSYT*IINTFP
C
         CALL FSGET(ICORE(I030),1,NUMSYT,1,IRREP2,LISTT2,STRING)
         CALL XGEMM('N','N',DISSYT,NSYT2,1,W,ICORE(I030),DISSYT,
     $      ICORE(IOFFT2),1,ONE,ICORE(IOFFTAR),DISSYT)
C
 12      CONTINUE
         IF(NSYT1.EQ.0.AND.NSYT2.EQ.0) GOTO 10
C
C     I000:  T1(CONTR)   I010:  T1(TARGET)
C
         I020=I010+NSIZTAR*IINTFP
         IF(.NOT.LAMBDA) THEN
            CALL FSGETT1(ICORE(I010),2+ISPIN,LISTT1,'II',8+ISPIN)
            CALL SAXPY(NSIZTAR,ONE,ICORE(I000),1,ICORE(I010),1)
            CALL FSPUTT1(ICORE(I010),2+ISPIN,LISTT1,'II',8+ISPIN)
         ELSE
            CALL FSGETT1(ICORE(I010),ISPIN,LISTL1,'II',8+ISPIN)
            WL=WL+SDOT(NSIZTAR,ICORE(I000),1,ICORE(I010),1)
         ENDIF
C
C     T2 AB CONTRIBUTION
C
         DO 1001 IRREP=1,NIRREP
            LISTAR=LISTAR0+3
            IF(ISPIN.EQ.1) THEN
               NUMSYT=FSDPDIN(IRREP,ISYTYP(2,LISTAR))
               DISSYT=FSDPDIN(IRREP,ISYTYP(1,LISTAR))
               IF(NUMSYT*DISSYT.EQ.0) GOTO 1001
               I020=I010+NUMSYT*DISSYT*IINTFP
               IF(.NOT.LAMBDA) THEN
                  CALL FSGET(ICORE(I010),1,NUMSYT,1,IRREP,LISTAR,'ININ')
               ELSE
                  CALL ZERO(ICORE(I010),NUMSYT*DISSYT)
               ENDIF
               CALL FTAU(ICORE(I010),ICORE(I000),ICORE(I0(3-ISPIN)),
     $            DISSYT,NUMSYT,POPI(1,ISPIN),POP(1,3-ISPIN),
     $            VRTI(1,ISPIN),VRT(1,3-ISPIN),IRREP,3,ONEM)
               IF(.NOT.LAMBDA) THEN
                  CALL FSPUT(ICORE(I010),1,NUMSYT,1,IRREP,LISTAR,'ININ')
               ELSE
                  I030=I020+NUMSYT*DISSYT*IINTFP
                  CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR,'ININ')
                  WL=WL+SDOT(NUMSYT*DISSYT,ICORE(I010),1,ICORE(I020),1)
               ENDIF
            ELSE
               NUMSYT=FSDPDNI(IRREP,ISYTYP(2,LISTAR))
               DISSYT=FSDPDNI(IRREP,ISYTYP(1,LISTAR))
               IF(NUMSYT*DISSYT.EQ.0) GOTO 1001
               I020=I010+NUMSYT*DISSYT*IINTFP
               IF(.NOT.LAMBDA) THEN
                  CALL FSGET(ICORE(I010),1,NUMSYT,1,IRREP,LISTAR,'NINI')
               ELSE
                  CALL ZERO(ICORE(I010),NUMSYT*DISSYT)
               ENDIF
               CALL FTAU(ICORE(I010),ICORE(I0(3-ISPIN)),ICORE(I000),
     $            DISSYT,NUMSYT,POP(1,3-ISPIN),POPI(1,ISPIN),
     $            VRT(1,3-ISPIN),VRTI(1,ISPIN),IRREP,3,ONEM)
               IF(.NOT.LAMBDA) THEN
                  CALL FSPUT(ICORE(I010),1,NUMSYT,1,IRREP,LISTAR,'NINI')
               ELSE
                  I030=I020+NUMSYT*DISSYT*IINTFP
                  CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR,'NINI')
                  WL=WL+SDOT(NUMSYT*DISSYT,ICORE(I010),1,ICORE(I020),1)
               ENDIF
            ENDIF
C         
 1001    CONTINUE
C
C     T2 AA AND BB CONTRIBUTION
C
         CALL ZERLST(ICORE(I010),NT(ISPIN),1,1,ISPIN,99)
         CALL FSPUTT1(ICORE(I000),ISPIN,99,'II',8+ISPIN)
         CALL GETLST(ICORE(I000),1,1,1,ISPIN,99)
C
         DO 1000 IRREP=1,NIRREP
C
C     I0(1): T1A-T1B  I0(2): T1B-T1A  I000: T1(CONT)  I010: T2  I020: T2
C
            LISTAR=LISTAR0+ISPIN
            NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTAR))
            DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTAR))
            DISSYTX=IRPDPD(IRREP,18+ISPIN)
            NUMSYTX=IRPDPD(IRREP,20+ISPIN)
            IF(NUMSYT*DISSYT.EQ.0) GOTO 1000
            I020=I010+NUMSYTX*DISSYTX*IINTFP
            I030=I020+NUMSYTX*DISSYTX*IINTFP
            CALL ZERO(ICORE(I010),NUMSYTX*DISSYTX)
            CALL FTAU(ICORE(I010),ICORE(I000),ICORE(I0(ISPIN)),
     $         DISSYTX,NUMSYTX,POP(1,ISPIN),POP(1,ISPIN),VRT(1,ISPIN),
     $         VRT(1,ISPIN),IRREP,3,ONEM)
            CALL ASSYM2(IRREP,POP(1,ISPIN),DISSYTX,ICORE(I010))
            CALL TRANSP(ICORE(I010),ICORE(I020),NUMSYT,DISSYTX)
            CALL ASSYM2(IRREP,VRT(1,ISPIN),NUMSYT,ICORE(I020))
            CALL TRANSP(ICORE(I020),ICORE(I010),DISSYT,NUMSYT)
            CALL GETLST(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR)
            IF(.NOT.LAMBDA) THEN
               CALL SAXPY(NUMSYT*DISSYT,ONE,ICORE(I010),1,ICORE(I020),1)
               CALL PUTLST(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR)
            ELSE
               WL=WL+SDOT(NUMSYT*DISSYT,ICORE(I020),1,ICORE(I010),1)
            ENDIF
C
 1000    CONTINUE
 10   CONTINUE
C
      RETURN
      END
