      SUBROUTINE PDCC_T2L2V1ALL(L,T,Z,TA,TB,ISPIN,TAU,ISAME,
     &                          DISSYW,DISSYT,NUMSYW,NUMSYT,
     &                          LISTL,LISTT,IRREP,TMP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL TAU,ISAME
      DOUBLE PRECISION L
      INTEGER DISSYT, DISSYW, DIRPRD,POP,VRT
      DIMENSION L(DISSYW,NUMSYW),T(DISSYT,NUMSYT),Z(NUMSYW,NUMSYT)
      DIMENSION TMP(1),TA(1),TB(1)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF1BB,NF2AA,NF2BB
      COMMON /FLAGS/ IFLAGS(100)
C
#include "parcc.com"
C
      DATA AZERO,ONE /0.0D0,1.D0/
C
C      PICK UP FIRST THE RELEVANT T AND L PIECES
C
      CALL GETLST(L,1,NUMSYW,2,IRREP,LISTL)
C
C      FOR MBPT(4) THEY ARE THE SAME, COPY L TO T
C
      IF(ISAME) THEN
c YAU : old
c      CALL ICOPY(IINTFP*NUMSYT*DISSYT,L,1,T,1)
c YAU : new
       CALL DCOPY(NUMSYT*DISSYT,L,1,T,1)
c YAU : end
      ELSE
C
C      FOR CC FORM TAU AMPLITUDES IF REQUIRED 
C
       CALL GETLST(T,1,NUMSYT,1,IRREP,LISTT)

       IF (ISPAR) THEN
           ONEM_WMNIJ_SCALE = (1.0D0 - PARGAMMA)
           Write(6, "(a,a,F5.2)") " In PDCC_T2L2V1ALL scaling by ", 
     &                          "(1-pargamma)", ONEM_WMNIJ_SCALE
           Write(6,*)
           CALL DSCAL(NUMSYT*DISSYT, ONEM_WMNIJ_SCALE, T, 1)
       ENDIF 

       IF(TAU) THEN
        IF(ISPIN.LT.3) THEN
         CALL FTAU(T,TA,TB,DISSYT,NUMSYT,POP(1,ISPIN),POP(1,ISPIN),
     &             VRT(1,ISPIN),VRT(1,ISPIN),IRREP,ISPIN,ONE)
        ELSE
         CALL FTAU(T,TA,TB,DISSYT,NUMSYT,POP(1,1),POP(1,2),VRT(1,1),
     &             VRT(1,2),IRREP,ISPIN,ONE)
        ENDIF
       ENDIF
      ENDIF
C
C     PERFORM THE MULTIPLICATION IF WE WANT THE INTERMEDIATE.
C
      CALL XGEMM('T','N',NUMSYT,NUMSYW,DISSYW,ONE,T,DISSYT,L,DISSYW,
     &           AZERO,Z,NUMSYT)
C
C     SAVE THE RESULT ON FILE
C
      CALL PUTLST(Z,1,NUMSYW,1,IRREP,150+ISPIN)
C
      RETURN
      END
