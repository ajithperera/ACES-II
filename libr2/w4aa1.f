      SUBROUTINE W4AA1(ICORE,MAXCOR,IUHF,TERM1,TERM2,TERM3,TAU)
c     &                 IOFFLIST)
C
C THIS ROUTINE CALCULATES THREE OF THE FIVE CONTRACTIONS WHICH 
C  CONTRIBUTE TO THE W(IFMN) INTERMEDIATE WHICH IS USED IN CCSD
C  GRADIENTS AND CCSDT MODELS FOR AAAA AND BBBB SPIN CASES.  
C
C  FIRST CONTRACTION:
C           Z(ifmn) = - T1(f,o) * W (iomn)
C  SECOND CONTRACTION:
C           Z(ifmn) = T2(ef,mn) * F(ie)
C  THIRD CONTRACTION
C           Z(ifmn) = TAU(eg,mn) <if||eg>
C
C  THE REMAINING CONTRACTIONS ARE DONE BEFORE THIS ROUTINE IS
C   CALLED AND THE TARGET LIST CONTAINS THEM ON ENTRY. 
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,ALPHA,BETA
      LOGICAL INCORE,TERM1,TERM2,TERM3,TAU
      DIMENSION ICORE(MAXCOR),MNFULL(8),ABFULL(8),IOFFT1(8,2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      DATA ONE   /1.0D0/
      DATA ONEM  /-1.0D0/
      DATA ZILCH /0.0D0/

      iofflist = 0

      CALL GETT1(ICORE,MAXCOR,MXCOR,IUHF,IOFFT1)
      IBOT=1
      BETA=ONE
      DO 10 ISPIN=1,2
       LSTTAR=106+ISPIN+IOFFLIST
       DO 5 IRREP=1,NIRREP
        ABFULL(IRREP)=IRPDPD(IRREP,18+ISPIN)
        MNFULL(IRREP)=IRPDPD(IRREP,20+ISPIN)
5      CONTINUE
       DO 20 IRREPDO=1,NIRREP
        TARDSZ=IRPDPD(IRREPDO,ISYTYP(1,6+ISPIN))
        TARDIS=IRPDPD(IRREPDO,ISYTYP(2,6+ISPIN))
        TARSIZ=TARDSZ*TARDIS
        I000=1
        I010=I000+IINTFP*TARSIZ
        CALL IZERO(ICORE,IINTFP*TARSIZ)
        IF(TERM1)THEN
C
C FIRST CONTRACTION: 
C                                
C           Z(ifmn) = - T1(f,o) * W (iomn)
C                                
C           Z(IFMN) = - T1(F,O) * W (IOMN)    [ISPIN = 1]
C
C           Z(ifmn) = - T1(f,o) * W (iomn)    [ISPIN = 2]
C
        ALPHA=ONEM
        LISTW =50+ISPIN
        DSZFUL=MNFULL(IRREPDO)
        WDSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTW))
        WDIS=IRPDPD(IRREPDO,ISYTYP(2,LISTW))
        I020=I010+IINTFP*DSZFUL*WDIS
        I030=I020+IINTFP*WDSZ
        CALL GETLST(ICORE(I010),1,WDIS,2,IRREPDO,LISTW)
        CALL MTRAN2(ICORE(I010),WDIS)
C
C NOW EXPAND W(M<N,I<O) TO W(M<N,IO)
C
        CALL SYMEXP(IRREPDO,POP(1,ISPIN),WDSZ,ICORE(I010))
C
C EVALUATE V CONTRIBUTION WITH THE MATRIX MULTIPLICATION
C                                          t 
C             Z(M<NI,F) = - W(M<NI,O)*T(F,O)   [ISPIN=1]
C                                          t
C             Z(m<ni,f) = - W(m<ni,o)*T(f,o)   [ISPIN=2]
C
C DO PREAMBLE AND DO THE CONTRACTION
C
        IOFFZ=I000
        IOFFW=I010
        DO 330 IRREPO=1,NIRREP
         IRREPI=DIRPRD(IRREPO,IRREPDO)
         IRREPF=IRREPO
         NROWZ=WDSZ*POP(IRREPI,ISPIN)
         NCOLZ=VRT(IRREPF,ISPIN)
         NROWW=NROWZ
         NCOLW=POP(IRREPO,ISPIN)
         NROWT=VRT(IRREPF,ISPIN)
         NCOLT=NCOLW
         IOFFT=IOFFT1(IRREPO,ISPIN)
         IF(MIN(NROWZ,NCOLZ,NCOLW).GT.0)THEN
          CALL XGEMM('N','T',NROWZ,NCOLZ,NCOLW,ALPHA,ICORE(IOFFW),
     &               NROWW,ICORE(IOFFT),NROWT,BETA,ICORE(IOFFZ),
     &               NROWZ)
         ENDIF
         IOFFW=IOFFW+IINTFP*NROWW*NCOLW
         IOFFZ=IOFFZ+IINTFP*NROWZ*NCOLZ
330     CONTINUE
        ENDIF
C
C NOW TRANSPOSE KET INDICES OF TARGET SINCE THE NEXT CONTRACTION
C  CALCULATES Z(M<NF,I)
C
        I020=I010+IINTFP*TARDSZ
        I030=I020+IINTFP*TARDSZ
        I040=I030+IINTFP*TARDSZ
        CALL SYMTR1(IRREPDO,POP(1,ISPIN),VRT(1,ISPIN),TARDSZ,
     &              ICORE(I000),ICORE(I010),ICORE(I020),ICORE(I030))
        IF(TERM2)THEN
C 
C SECOND CONTRACTION: 
C                                
C           Z(ifmn) = SUM T2(ef,mn) * F(ie)
C                      e
C                                
C           Z(IF,MN) = T2(EF,MN) * F(E,I)    [ISPIN = 1]
C
C           Z(if,mn) = T1(if,mn) * F(e,i)    [ISPIN = 2]
C
        ALPHA=ONE
        LISTT2=43+ISPIN
        DSZFUL=ABFULL(IRREPDO)
        NT2DSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTT2))
        NT2DIS=IRPDPD(IRREPDO,ISYTYP(2,LISTT2))
        I020=I010+IINTFP*DSZFUL*NT2DIS
        I030=I020+IINTFP*NT2DSZ
        CALL GETTRN(ICORE(I010),ICORE(I020),NT2DSZ,NT2DIS,1,IRREPDO,
     &              LISTT2)
C
C REDEFINE DISTRIBUTION SIZE AND NUMBER OF DISTRIBUTIONS
C
        ITMP=NT2DIS
        NT2DIS=NT2DSZ
        NT2DSZ=ITMP
C
C NOW EXPAND T(M<N,E<F) TO T(M<N,EF) 
C
        CALL SYMEXP(IRREPDO,VRT(1,ISPIN),NT2DSZ,ICORE(I010))
C
C NOW TRANSPOSE KET INDICES TO T(M<N,FE)
C
        I030=I020+IINTFP*NT2DSZ
        I040=I030+IINTFP*NT2DSZ
        I050=I040+IINTFP*NT2DSZ
        CALL SYMTR1(IRREPDO,VRT(1,ISPIN),VRT(1,ISPIN),NT2DSZ,
     &              ICORE(I010),ICORE(I020),ICORE(I030),ICORE(I040))
C
C EVALUATE V CONTRIBUTION WITH THE MATRIX MULTIPLICATION
C                                          
C             Z(M<NF,I) = T(M<NF,E) * F(E,I)  [ISPIN=1]
C                                         
C             Z(m<nf,i) = T(m<nf,e) * F(e,i)  [ISPIN=2]
C
        CALL GETLST(ICORE(I020),1,1,1,ISPIN,93)
        IOFFF =I020
        IOFFT2=I010
        IOFFZ =I000
        DO 430 IRREPE=1,NIRREP
         IRREPF=DIRPRD(IRREPE,IRREPDO)
         IRREPI=IRREPE
         NROWT2=NT2DSZ*VRT(IRREPF,ISPIN)
         NCOLT2=VRT(IRREPE,ISPIN)
         NROWZ =NROWT2
         NCOLZ =POP(IRREPI,ISPIN)
         NROWF =NCOLT2
         NCOLF =NCOLZ
         IF(MIN(NROWZ,NCOLZ,NCOLT2).GT.0)THEN
          CALL XGEMM('N','N',NROWZ,NCOLZ,NCOLT2,ALPHA,ICORE(IOFFT2),
     &               NROWT2,ICORE(IOFFF),NROWF,BETA,ICORE(IOFFZ),
     &               NROWZ)
         ENDIF
         IOFFF =IOFFF+IINTFP*NROWF*NCOLF
         IOFFT2=IOFFT2+IINTFP*NROWT2*NCOLT2
         IOFFZ =IOFFZ+IINTFP*NROWZ*NCOLZ
430     CONTINUE
        ENDIF
        IF(TERM3)THEN
C 
C THIRD AND FINAL TERM (N**6 DEPENDENCE)
C                                
C           Z(ifmn) = TAU(eg,mn) <if||eg>
C                                
C           Z(IF,MN)= TAU(EG,MN) <IF||EG>     [ISPIN = 1]
C
C           Z(if,mn)= TAU(eg,mn) <if||eg>     [ISPIN = 2]
C
C
         ALPHA=ONEM
         LSTINT=26+ISPIN
         LISTT2=43+ISPIN
         DSZFUL=ABFULL(IRREPDO)
         INTDSZ=IRPDPD(IRREPDO,ISYTYP(1,LSTINT))
         INTDIS=IRPDPD(IRREPDO,ISYTYP(2,LSTINT))
         TAUDSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTT2))
         TAUDIS=IRPDPD(IRREPDO,ISYTYP(2,LISTT2))
         I020=I010+IINTFP*TAUDSZ*TAUDIS
         CALL GETLST(ICORE(I010),1,TAUDIS,1,IRREPDO,LISTT2)
         IOFSET=IOFFT1(1,ISPIN)
         IF(TAU)THEN
         CALL FTAU(ICORE(I010),ICORE(IOFSET),ICORE(IOFSET),
     &             TAUDSZ,TAUDIS,POP(1,ISPIN),POP(1,ISPIN),VRT(1,ISPIN),
     &             VRT(1,ISPIN),IRREPDO,ISPIN,ONE)
         ENDIF
C
         MXCOR2=MXCOR-I020+1
         NINCOR=MXCOR2/(IINTFP*MAX(1,INTDSZ)) 
          nincor=1
         NLEFT =INTDIS
         IFIRST=1 
         IOFFZ=I000
1        NREAD=MIN(NINCOR,NLEFT)
         CALL GETLST(ICORE(I020),IFIRST,NREAD,1,IRREPDO,LSTINT)
         NROW=TAUDIS
         NCOL=NREAD
         NSUM=TAUDSZ
C                                  t
C          Z(M<N,FI) = TAU(E<G,M<N) * W(E<G,FI)
C
         CALL XGEMM('T','N',NROW,NCOL,NSUM,ALPHA,ICORE(I010),
     &              NSUM,ICORE(I020),NSUM,BETA,ICORE(IOFFZ),NROW)
         IFIRST=IFIRST+NREAD
         NLEFT=NLEFT-NREAD
         IOFFZ=IOFFZ+IINTFP*NROW*NCOL
         IF(NLEFT.NE.0)GOTO 1
        ENDIF
C
C NOW CHANGE TARGET FROM Z(M<N,FI) TO Z(M<N,IF)
C
        I020=I010+IINTFP*TARDSZ
        I030=I020+IINTFP*TARDSZ
        I040=I030+IINTFP*TARDSZ
        CALL SYMTR1(IRREPDO,VRT(1,ISPIN),POP(1,ISPIN),TARDSZ,
     &              ICORE(I000),ICORE(I010),ICORE(I020),ICORE(I030))
C
C FINALLY, INCREMENT THE LIST AND EXIT.
C
        I020=I010+IINTFP*TARDSZ*TARDIS
        CALL GETLST(ICORE(I010),1,TARDIS,2,IRREPDO,LSTTAR)
        CALL SAXPY(TARSIZ,ONE,ICORE(I010),1,ICORE(I000),1)
        CALL PUTLST(ICORE(I000),1,TARDIS,2,IRREPDO,LSTTAR)
20     CONTINUE
10    CONTINUE
      RETURN
      END
