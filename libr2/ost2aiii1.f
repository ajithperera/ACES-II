      SUBROUTINE OST2AIII1(ICORE,MAXCOR,IUHF,W,LAMBDA,WL)
C
C
C     THIS ROUTINE CALCULATE ACTIVE,INACTIVE-INACTIVE,INACTIVE T2 CONTRIBUTION
C
C     T2(MI,AB) <-- T2(AI,BM) = W * P(A,B) T2(Mi,Na)*T1(b,n)
C     T2(ni,ab) <-- T2(ai,bn) = W * P(a,b) T2(In,Am)*T1(B,M)
C     T2(In,Ba) <-- T2(Bn,aI) = W * T2(Mi,Am)*T1(b,n)
C     T2(Mi,Ab) <-- T2(Ai,bM) = W * T2(In,Na)*T1(B,M)
C     T2(In,Ba) <-- T2(BI,an) = W * T2(ni,bm)*T1(A,M)
C     T2(Mi,Ab) <-- T2(AN,bi) = W * T2(IM,NB)*T1(a,n)
C
CEND
C
CPROGRAMED PS NOV/92
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,POP,VRT,DISSYT2,DISSYT1,DISSYTAR
      CHARACTER*4 STRING
      LOGICAL LAMBDA
C
      DIMENSION ICORE(MAXCOR)
C
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
C
      INTEGER POPA,POPI,VRTA,VRTI
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      INTEGER FSDPDAN,FSDPDNA,FSDPDAA,FSDPDIN,FSDPDNI,FSDPDII,FSDPDAI,
     $   FSDPDIA
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
C
      COMMON /ACTIRR/ IRREPOA,IRREPOB,IRREPVA,IRREPVB
C
      COMMON /FLAGS/ IFLAGS(100)
C
      DATA ONE,ONEM,ZILCH/1.D0,-1.D0,0.D0/
C
C     ZERO SCRATCH LISTS
C
      CALL ZEROLIST(ICORE,MAXCOR,40)
      CALL ZEROLIST(ICORE,MAXCOR,41)
      CALL ZEROLIST(ICORE,MAXCOR,42)
      CALL ZEROLIST(ICORE,MAXCOR,43)
C
C     NOW CONSIDER THE DIFFERENT SPINCASES
C
C     AAAA   SPINCASE
C
      CALL OST2I2(ICORE,MAXCOR,IRREPOA,IRREPVA,IRREPOA,IRREPOB,90,2,46,
     $   POPI(1,2),VRTI(1,2),VRTI(1,1),'AIAI','IIIA',
     $   40,W,ZILCH,ZILCH,IEX)
      IF (IEX.EQ.0) GOTO 10
C
C     RESORT AND ANTISYMMETRIZE T2 INCREMENT, AND THEN AUGMENT THE 
C     T2 INCREMENT LIST. 
C
      NTOTSZ=ISYMSZ(ISYTYP(1,40),ISYTYP(2,40))
      NTOTSZ2=ISYMSZ(ISYTYP(1,61),ISYTYP(2,61))
      NOCC=NOCCO(1)
      NVRT=NVRTO(1)
      NVSIZ=(NVRT*(NVRT-1))/2
      NOSIZ=(NOCC*(NOCC-1))/2
      ISCRSZ=NVSIZ+NOSIZ+NOCC*NVRT
C
C    I000: T2(IN)   I010:  T2(OUT)    I020:  SCR
C
      I000=1
      I010=I000+MAX(NTOTSZ,NTOTSZ2)*IINTFP
      I020=I010+MAX(NTOTSZ,NTOTSZ2)*IINTFP
      I030=I020+ISCRSZ
      CALL GETALL(ICORE(I000),NTOTSZ,1,40)
      CALL SST03I(ICORE(I000),ICORE(I010),NTOTSZ,NTOTSZ2,ICORE(I020),
     $   'AAAA')
      IF(.NOT.LAMBDA) THEN
         CALL GETALL(ICORE(I000),NTOTSZ2,1,61)
         CALL SAXPY(NTOTSZ2,ONEM,ICORE(I010),1,ICORE(I000),1)
         CALL PUTALL(ICORE(I000),NTOTSZ2,1,61)
      ELSE
         CALL GETALL(ICORE(I000),NTOTSZ2,1,144)
         WL=WL+ONEM*SDOT(NTOTSZ2,ICORE(I000),1,ICORE(I010),1)
      ENDIF
 10   CONTINUE
C
C     BBBB   SPINCASE
C
      CALL OST2I2(ICORE,MAXCOR,IRREPOB,IRREPVB,IRREPOB,IRREPOA,90,1,46,
     $   POPI(1,1),VRTI(1,1),VRTI(1,2),'IAIA','IIIA',
     $   41,W,ZILCH,ZILCH,IEX)
      IF(IEX.EQ.0) GOTO 20
C
C     RESORT AND ANTISYMMETRIZE T2 INCREMENT, AND THEN AUGMENT THE 
C     T2 INCREMENT LIST. 
C
      NTOTSZ=ISYMSZ(ISYTYP(1,41),ISYTYP(2,41))
      NTOTSZ2=ISYMSZ(ISYTYP(1,62),ISYTYP(2,62))
      NOCC=NOCCO(2)
      NVRT=NVRTO(2)
      NVSIZ=(NVRT*(NVRT-1))/2
      NOSIZ=(NOCC*(NOCC-1))/2
      ISCRSZ=NVSIZ+NOSIZ+NOCC*NVRT
C
C    I000: T2(IN)   I010:  T2(OUT)    I020:  SCR
C
      I000=1
      I010=I000+MAX(NTOTSZ,NTOTSZ2)*IINTFP
      I020=I010+MAX(NTOTSZ,NTOTSZ2)*IINTFP
      I030=I020+ISCRSZ
      CALL GETALL(ICORE(I000),NTOTSZ,1,41)
      CALL SST03I(ICORE(I000),ICORE(I010),NTOTSZ,NTOTSZ2,ICORE(I020),
     $   'BBBB')
      IF(.NOT.LAMBDA) THEN
         CALL GETALL(ICORE(I000),NTOTSZ2,1,62)
         CALL SAXPY(NTOTSZ2,ONEM,ICORE(I010),1,ICORE(I000),1)
         CALL PUTALL(ICORE(I000),NTOTSZ2,1,62)
      ELSE
         CALL GETALL(ICORE(I000),NTOTSZ2,1,145)
         WL=WL+ONEM*SDOT(NTOTSZ2,ICORE(I000),1,ICORE(I010),1)
      ENDIF
 20   CONTINUE
C
C     ABAB   SPINCASE FIRST TWO TERMS
C
      CALL OST2I2(ICORE,MAXCOR,IRREPOB,IRREPVB,IRREPOA,IRREPOB,90,2,46,
     $   POPI(1,2),VRTI(1,1),VRTI(1,2),'IAAI','IAII',
     $   43,W,ZILCH,ZILCH,IEX1)
      IF(IEX1.NE.0) THEN
         FACT=ONE
      ELSE
         FACT=ZILCH
      ENDIF
      CALL OST2I2(ICORE,MAXCOR,IRREPOA,IRREPVA,IRREPOB,IRREPOA,90,1,46,
     $   POPI(1,1),VRTI(1,2),VRTI(1,1),'AIIA','IIIA',
     $   43,W,FACT,ZILCH,IEX2)
C     
C
C     ABAB   SPINCASE LAST TWO TERMS
C
C
      CALL OST2I2(ICORE,MAXCOR,IRREPOB,IRREPVB,IRREPOB,IRREPOA,90,1,45,
     $   POPI(1,2),VRTI(1,2),VRTI(1,1),'IAAI','IIIA',
     $   42,W,ZILCH,ZILCH,IEX3)
      IF(IEX3.NE.0) THEN
         FACT=ONE
      ELSE
         FACT=ZILCH
      ENDIF
      CALL OST2I2(ICORE,MAXCOR,IRREPOA,IRREPVA,IRREPOA,IRREPOB,90,2,44,
     $   POPI(1,1),VRTI(1,1),VRTI(1,2),'AIIA','IAII',
     $   42,W,FACT,ZILCH,IEX4)
C
C     RESORT AND ANTISYMMETRIZE T2 INCREMENT, AND THEN AUGMENT THE 
C     T2 INCREMENT LIST. 
C
      NTOTSZ=ISYMSZ(ISYTYP(1,43),ISYTYP(2,43))
      NTOTSZ1=ISYMSZ(ISYTYP(1,42),ISYTYP(2,42))
      NTOTSZ2=ISYMSZ(ISYTYP(1,63),ISYTYP(2,63))
      NOCCA=NOCCO(1)
      NOCCB=NOCCO(2)
      NVRTA=NVRTO(1)
      NVRTB=NVRTO(2)
      ISCRSZ=(NOCCA+NOCCB)*(NVRTA*NVRTB)
C
C    I000: T2(IN)   I010:  T2(OUT)    I020:  T2    I030:   SCR
C
      I000=1
      I010=I000+MAX(NTOTSZ,NTOTSZ1,NTOTSZ2)*IINTFP
      I020=I010+MAX(NTOTSZ,NTOTSZ1,NTOTSZ2)*IINTFP
      I030=I020+MAX(NTOTSZ,NTOTSZ1,NTOTSZ2)*IINTFP
      I040=I030+ISCRSZ
      IF(I040.GT.MAXCOR)CALL INSMEM('OST2AIII1',I040,MAXCOR)
C
      IF(IEX1.NE.0.OR.IEX2.NE.0) THEN
         CALL GETALL(ICORE(I010),NTOTSZ,1,43)
         CALL SSTGEN(ICORE(I010),ICORE(I000),NTOTSZ,VRT(1,1),POP(1,2),
     $      VRT(1,2),POP(1,1),ICORE(I030),1,'1432')
         CALL SST02I(ICORE(I000),ICORE(I010),NTOTSZ,NTOTSZ2,ICORE(I030),
     $      'AABB')
         IF(.NOT.LAMBDA) THEN
            CALL GETALL(ICORE(I000),NTOTSZ2,1,63)
            CALL SAXPY(NTOTSZ2,ONE,ICORE(I010),1,ICORE(I000),1)
         ELSE
            CALL GETALL(ICORE(I000),NTOTSZ2,1,146)
            WL=WL+SDOT(NTOTSZ2,ICORE(I000),1,ICORE(I010),1)
         ENDIF
      ENDIF
      IF(IEX3.NE.0.OR.IEX4.NE.0) THEN
        CALL GETALL(ICORE(I020),NTOTSZ,1,42)
        CALL SST02I(ICORE(I020),ICORE(I010),NTOTSZ1,NTOTSZ2,ICORE(I030),
     $     'AABB')
        IF(.NOT.LAMBDA) THEN
           IF(IEX1.EQ.0.AND.IEX2.EQ.0) THEN
              CALL GETALL(ICORE(I000),NTOTSZ2,1,63)
           ENDIF
           CALL SAXPY(NTOTSZ2,ONE,ICORE(I010),1,ICORE(I000),1)
        ELSE
           IF(IEX1.EQ.0.AND.IEX2.EQ.0) THEN
              CALL GETALL(ICORE(I000),NTOTSZ2,1,146)
           ENDIF
           WL=WL+SDOT(NTOTSZ2,ICORE(I000),1,ICORE(I010),1)
        ENDIF
      ENDIF
C
      IF(LAMBDA) RETURN
      IF(IEX1.NE.0.OR.IEX2.NE.0.OR.IEX3.NE.0.OR.IEX4.NE.0) THEN
         CALL PUTALL(ICORE(I000),NTOTSZ2,1,63)
      ENDIF
C     
      RETURN
      END
