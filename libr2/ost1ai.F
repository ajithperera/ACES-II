      SUBROUTINE OST1AI(ICORE,MAXCOR,IUHF,W,LAMBDA,WL)
C
C     THIS ROUTINE CALCULATE THE INACTIVE -- ACTIVE T1 CONTRIBUTION
C     
C     T1(N,I)= W * T2(iM,mN)  and T1(m,i)= W * T2(In,Nm)
C
C     AND THE DISCONNECTED T2 CONTRIBUTION
C
C     T2(IJ,NA)=-W * T2(iM,mN)*(T1(A,J)-T1(a,j)) ; T2(JI,NA)=P(I,J) T2(IJ,NA)
C     T2(Ij,Na)=-W * T2(iM,mN)*(T1(a,j)-T1(A,J))
C     and
C     T2(ij,ma)=-W * T2(In,Nm)*(T1(a,j)-T1(A,J)) ; T2(ji,am)=P(i,j) T2(ij,am)
C     T2(iJ,mA)=-W * T2(In,Nm)*(T1(A,J)-T1(a,j)) 
C
C
CEND
C
CPROGRAMED PS NOV/92
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,DISTAR1,DISTAR2,DISSYT2,POP,VRT,NUMSYTX
      CHARACTER*4 STRING,STRT2
      LOGICAL LAMBDA
C
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0(2)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
C
      INTEGER POPA,POPI,VRTA,VRTI
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      INTEGER FSDPDAN,FSDPDNA,FSDPDAA,FSDPDIN,FSDPDNI,FSDPDII,FSDPDAI,
     $   FSDPDIA
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
C
      COMMON /ACTIRR/ IRREPO(2),IRREPV(2)
C
      COMMON /FLAGS/ IFLAGS(100)
C
      DATA ZILCH,ONE,ONEM/0.D0,1.D0,-1.D0/
C
      LISTT1=90
      LISTL1=190
      LISTT2=46
      IF(.NOT.LAMBDA) THEN
         LISTAR0=60
      ELSE
         LISTAR0=143
      ENDIF
C
C     READ IN T1 AMPLITUDES REQUIRED FOR CALCULATION OF T2 CONTRIBUTION
C     DIRTY TRICKS ARE PLAYED BECAUSE (A,I) IN THE FIRST TERM IS 
C     UNRESTRICTED BUT IN THE SECOND ONE ONLY INACTIVE IS ALLOWED
C
      NSIZTA=FSDPDII(1,9)
      NSIZTB=FSDPDII(1,10)
      IF(NSIZTA.NE.NSIZTB) THEN
         WRITE(6,*)'@OST1AI-E FATAL ERROR: NSIZTA.NE.NSIZTB',
     $      NSIZTA,NSIZTB
         CALL ERREX
      ENDIF
      NSIZTNA=NT(1)
      NSIZTNB=NT(2)
C
C     I0(1):  T1A-T1B  I0(2): T1B-T1A  I010:  T1A  I020:  T1B
C
      I0(1)=1
      I0(2)=I0(1)+MAX(NSIZTA,NSIZTNA)*IINTFP
      I010=I0(2)+MAX(NSIZTB,NSIZTNB)*IINTFP
      I020=I010+NSIZTA*IINTFP
      I030=I020+NSIZTB*IINTFP
      CALL FSGETT1(ICORE(I010),1,LISTT1,'II',9)
      CALL FSGETT1(ICORE(I020),2,LISTT1,'II',10)
      CALL SCOPY(NSIZTA,ICORE(I010),1,ICORE(I0(1)),1)
      CALL SCOPY(NSIZTA,ICORE(I020),1,ICORE(I0(2)),1)
      CALL SAXPY(NSIZTA,ONEM,ICORE(I020),1,ICORE(I0(1)),1)
      CALL SAXPY(NSIZTA,ONEM,ICORE(I010),1,ICORE(I0(2)),1)
      CALL FSPUTT1(ICORE(I0(1)),1,LISTT1,'II',9)
      CALL FSPUTT1(ICORE(I0(2)),2,LISTT1,'II',10)
      CALL GETLST(ICORE(I0(1)),1,1,1,1,LISTT1)
      CALL GETLST(ICORE(I0(2)),1,1,1,2,LISTT1)
      CALL FSPUTT1(ICORE(I010),1,LISTT1,'II',9)
      CALL FSPUTT1(ICORE(I020),2,LISTT1,'II',10)
      IF(.NOT.LAMBDA) THEN
         CALL UPDMOI(1,NT(1),1,99,0,0)
         CALL UPDMOI(2,NT(2),2,99,0,0)
      ENDIF
C
      DO 10 ISPIN=1,IUHF+1
         LISTAR1=LISTAR0+ISPIN
         LISTAR2=LISTAR0+3
         NSIZT1=FSDPDAI(1,8+ISPIN)
         IRREPI=IRREPV(ISPIN)
         IRREP2=DIRPRD(IRREPV(1),IRREPV(2))
C
         DISSYT2=FSDPDAA(IRREP2,ISYTYP(1,LISTT2))
         IF(ISPIN.EQ.1) THEN
            NUMSYT2=FSDPDAI(IRREP2,ISYTYP(2,LISTT2))
            STRING='AAAI'
         ELSE
            NUMSYT2=FSDPDIA(IRREP2,ISYTYP(2,LISTT2))
            STRING='AAIA'
         ENDIF
         IF(DISSYT2.NE.1.OR.NUMSYT2.NE.NSIZT1) THEN
            WRITE(6,*)'@OST1AI-E FATAL ERROR: DISSYT2,',
     $         'NUMSYT2,NSIZT1',DISSYT2,NUMSYT2,NSIZT1
            CALL ERREX
         ENDIF
C
C     I0(1):  T1A-T1B   I0(2): T1B-T1A   I010:  T1(INCR) 
C
         I020=I010+NT(ISPIN)*IINTFP
C
C     T1 CONTRIBUTION

         CALL FSGET(ICORE(I010),1,NUMSYT2,1,IRREP2,LISTT2,STRING)
         CALL SSCAL(NSIZT1,W,ICORE(I010),1)
C
C     I0(1):  T1A-T1B  I0(2): T1B-T1A I010:  T1(INCR)  I020: T1(TARGET)
C
         I030=I020+NT(ISPIN)*IINTFP
         IF(.NOT.LAMBDA) THEN
            CALL FSGETT1(ICORE(I020),2+ISPIN,LISTT1,'AI',8+ISPIN)
            CALL SAXPY(NSIZT1,ONE,ICORE(I010),1,ICORE(I020),1)
            CALL FSPUTT1(ICORE(I020),2+ISPIN,LISTT1,'AI',8+ISPIN)
         ELSE
            CALL FSGETT1(ICORE(I020),ISPIN,LISTL1,'AI',8+ISPIN)
            WL=WL+SDOT(NSIZT1,ICORE(I020),1,ICORE(I010),1)
         ENDIF
#ifdef _DEBUG_LVLM
      write(6,*)
      Write(6,"(a)") " After the first T1 fsput-t1"
      Call check_res(Icore,Maxcor,iuhf)
#endif 
C
C     T2 AB CONTRIBUTION
C
         DO 101 IRREP=1,NIRREP
            LISTAR=LISTAR0+3
            IF(ISPIN.EQ.1) THEN
               NUMSYT=FSDPDIN(IRREP,ISYTYP(2,LISTAR))
               DISSYT=FSDPDAN(IRREP,ISYTYP(1,LISTAR))
               IF(NUMSYT*DISSYT.EQ.0) GOTO 101
               I030=I020+NUMSYT*DISSYT*IINTFP
               IF(.NOT.LAMBDA) THEN
                  CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR,'ANIN')
#ifdef _DEBUG_LVLM
            Write(6,"(a,2i4)") " From fsget T2ab",numsyt,dissyt
            call output(icore(i020),1,dissyt,1,numsyt,dissyt,numsyt,1)
#endif 
               ELSE
                  CALL ZERO(ICORE(I020),NUMSYT*DISSYT)
               ENDIF
               CALL FTAU(ICORE(I020),ICORE(I010),ICORE(I0(3-ISPIN)),
     $            DISSYT,NUMSYT,POPI(1,ISPIN),POP(1,3-ISPIN),
     $            VRTA(1,ISPIN),VRT(1,3-ISPIN),IRREP,3,ONEM)
               IF(.NOT.LAMBDA) THEN
                  CALL FSPUT(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR,'ANIN')
               ELSE
                  CALL FSGET(ICORE(I030),1,NUMSYT,1,IRREP,LISTAR,'ANIN')
                  I040=I030+NUMSYT*DISSYT*IINTFP
                  WL=WL+SDOT(NUMSYT*DISSYT,ICORE(I020),1,ICORE(I030),1)
               ENDIF
            ELSE
               NUMSYT=FSDPDNI(IRREP,ISYTYP(2,LISTAR))
               DISSYT=FSDPDNA(IRREP,ISYTYP(1,LISTAR))
               IF(NUMSYT*DISSYT.EQ.0) GOTO 101
               I030=I020+NUMSYT*DISSYT*IINTFP
               IF(.NOT.LAMBDA) THEN
                  CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR,'NANI')
               ELSE
                  CALL ZERO(ICORE(I020),NUMSYT*DISSYT)
               ENDIF
               CALL FTAU(ICORE(I020),ICORE(I0(3-ISPIN)),ICORE(I010),
     $            DISSYT,NUMSYT,POP(1,3-ISPIN),POPI(1,ISPIN),
     $            VRT(1,3-ISPIN),VRTA(1,ISPIN),IRREP,3,ONEM)
               IF(.NOT.LAMBDA) THEN
                  CALL FSPUT(ICORE(I020),1,NUMSYT,1,IRREP,LISTAR,'NANI')
               ELSE
                  CALL FSGET(ICORE(I030),1,NUMSYT,1,IRREP,LISTAR,'NANI')
                  I040=I030+NUMSYT*DISSYT*IINTFP
                  WL=WL+SDOT(NUMSYT*DISSYT,ICORE(I020),1,ICORE(I030),1)
               ENDIF
            ENDIF
C         
 101     CONTINUE
C
C     T2 AA AND BB CONTRIBUTION
C
         CALL ZERLST(ICORE(I020),NT(ISPIN),1,1,ISPIN,99)
         CALL FSPUTT1(ICORE(I010),ISPIN,99,'AI',8+ISPIN)
         CALL FSGETT1(ICORE(I010),ISPIN,99,'AN',8+ISPIN)
C
         DO 100 IRREP=1,NIRREP
C
C  I0(1): T1A-T1B  I0(2): T1B-T1A  I010: T1(CONT)  I020: T2  I030: T2 I040:T2
C
            LISTAR=LISTAR0+ISPIN
            NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTAR))
            DISSYT=FSDPDAN(IRREP,ISYTYP(1,LISTAR))
            NUMSYTX=IRPDPD(IRREP,20+ISPIN)
            IF(NUMSYT*DISSYT.EQ.0) GOTO 100
            I030=I020+NUMSYTX*DISSYT*IINTFP
            I040=I030+NUMSYTX*DISSYT*IINTFP
            I050=I040+NUMSYTX*DISSYT*IINTFP
            CALL ZERO(ICORE(I020),NUMSYTX*DISSYT)
            CALL FTAU(ICORE(I020),ICORE(I010),ICORE(I0(ISPIN)),
     $         DISSYT,NUMSYTX,POP(1,ISPIN),POP(1,ISPIN),VRTA(1,ISPIN),
     $         VRT(1,ISPIN),IRREP,3,ONEM)
            CALL ASSYM2(IRREP,POP(1,ISPIN),DISSYT,ICORE(I020))
            CALL FSGET(ICORE(I030),1,NUMSYT,1,IRREP,LISTAR,'ANNN')
            IF(.NOT.LAMBDA) THEN
               CALL SAXPY(NUMSYT*DISSYT,ONE,ICORE(I020),1,ICORE(I030),1)
               CALL FSPUT(ICORE(I030),1,NUMSYT,1,IRREP,LISTAR,'ANNN')
            ELSE
               WL=WL+SDOT(NUMSYT*DISSYT,ICORE(I020),1,ICORE(I030),1)
            ENDIF
C
 100     CONTINUE
  
#ifdef _DEBUG_LVLM
      write(6,*)
      Write(6,"(a)") " After the first T2 fsput-t2"
      Call check_res(Icore,Maxcor,iuhf)
#endif 
C
 10   CONTINUE
C
      RETURN
      END
