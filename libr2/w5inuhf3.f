      SUBROUTINE W5INUHF3(ICORE,MAXCOR,IUHF,TERM1,TERM2,IOFFLIST)
C
C THIS ROUTINE CALCULATES THE INITIAL T2*W CONTRIBUTION TO THE
C W5 HBAR INTERMEDIATES FOR SPIN CASE BABA [LIST 129]
C
C W(Ab,Ic) = T(Im,Ae)*<bm||ce> + T(im,ae)*W<Ec|Mb> - T(Im,Eb)*<Ec|Am>
C
CEND
      IMPLICIT INTEGER (A-Z)
      LOGICAL TERM1,TERM2
      logical bRedundant
      CHARACTER*4 SPCASE
      DOUBLE PRECISION ONE,ONEM,TWO,ZILCH,HALF,snrm2
      CHARACTER*3 GETTYP
      DIMENSION ICORE(MAXCOR),ILOCT(8),ILOCW(8,8),NDIMW(8)
      DIMENSION POPDUM(8)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFEA(2),NFMI(2)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /FLAGS2/IFLAGS2(500)
C
      DATA ONE,ONEM,ZILCH,TWO,HALF /1.0D0,-1.0D0,0.0D0,2.0D0,0.5D0/
      bRedundant = iflags2(155).eq.0
C
C DO CONTRACTION WITH AAAA INTEGRALS
C
      CALL NEWTYP2(1,401,20,10,.TRUE.)
      LISTZ=129+IOFFLIST
C
C BEGIN BY REORDERING W(c<e,bm) => W(be,cm) ON DISK
C
      LISTW=28
      LSTSCR=401
      CALL SYMTRLST(ICORE,MAXCOR,IUHF,
     &              VRT(1,2),VRT(1,2),VRT(1,2),POP(1,2),1,2,20,20,
     &              10,10,LISTW,LSTSCR,1,
     &             .FALSE.,.TRUE.,.FALSE.)
      CALL IZERO(POPDUM,8)
      POPDUM(1)=1
C
C CALCULATE SIZES OF W(be,m) ARRAYS FOR EACH SYMMETRY OF C   
C AND OFFSETS INTO REORDERED W(em,b) ARRAY
C
      DO 5 IRREPC=1,NIRREP
       NDIMW(IRREPC)=0
       INCREM2=0
       DO 6 IRREPM=1,NIRREP
        IRREPAE=DIRPRD(IRREPM,IRREPC)
        INCREM=POP(IRREPM,2)*IRPDPD(IRREPAE,20)
        ILOCW(IRREPM,IRREPC)=IINTFP*INCREM2
        INCREM2=VRT(IRREPM,2)*IRPDPD(IRREPAE,10)+INCREM2
        NDIMW(IRREPC)=NDIMW(IRREPC)+INCREM
6      CONTINUE
5     CONTINUE
C
C READ IN T VECTOR AS T(em,AI)
C
      LISTT =36
      NSIZET=ISYMSZ(ISYTYP(1,LISTT),ISYTYP(2,LISTT))
      I000=1
      I010=I000+IINTFP*NSIZET
      if(bRedundant) then
         CALL GETALL(ICORE(I000),NSIZET,1,LISTT)
      else
         CALL GETALL_NR(ICORE(I000),ICORE(I010),MAXCOR-I010+1,LISTT,1) 
c  endif bRedundant
      endif        
      IOFFT=1
      DO 7 IRREP=1,NIRREP
       ILOCT(IRREP)=IOFFT
       DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
       IOFFT=IOFFT+IINTFP*NUMDST*DISSYT 
7     CONTINUE
C      
C FIRST TERM:
C
C   Z(Ab,Ic) <= T(Im,Ae)*<ce||bm>
C
C INTEGRALS STORED NOW AS W(be,cm)
C T VECTOR HELD IN CORE AS T(em,AI)
C
C LOOP OVER IRREPS OF TARGET
C
      DO 10 IRREPCI=1,NIRREP
       TARSIZ=IRPDPD(IRREPCI,13)
       DO 11 IRREPI=1,NIRREP
        IRREPC=DIRPRD(IRREPI,IRREPCI)
        NUMI=POP(IRREPI,1)
        NUMC=VRT(IRREPC,2)
        I020=I010+IINTFP*NDIMW(IRREPC)
        I030=I020+IINTFP*MAX(NDIMW(IRREPC),TARSIZ)
        DO 12 C=1,NUMC
C
C READ IN ALL W(be;m) FOR THIS VALUE OF C
C
         CALL GET3(ICORE(I020),LSTSCR,1,C,IRREPC,
     &             VRT(1,2),VRT(1,2),VRT(1,2),POP(1,2),20,10,'124',
     &             .FALSE.,.FALSE.,ICORE(I020))
C
C REORDER TO W(em;b)
C
         CALL SSTGEN(ICORE(I020),ICORE(I010),NDIMW(IRREPC),
     &               VRT(1,2),VRT(1,2),POP(1,2),
     &               POPDUM,ICORE(I030),IRREPC,'2314')
C
         DO 13 I=1,NUMI
          DO 14 IRREPB=1,NIRREP
           IRREPA=DIRPRD(IRREPB,IRREPCI)
           IRREPBI=DIRPRD(IRREPB,IRREPI)
           IRREPAI=DIRPRD(IRREPA,IRREPI)
           IRREPEM=IRREPAI
           NUMB=VRT(IRREPB,2)
           NUMA=VRT(IRREPA,1)
           NROW=NUMB
           NCOL=NUMA
           NSUM=IRPDPD(IRREPEM,10)
           IOFFT=ILOCT(IRREPEM)+IINTFP*
     &           (NSUM*(ISYMOFF(IRREPI,IRREPEM,9)-1)+
     &           NSUM*NUMA*(I-1))
           IOFFW=I010+ILOCW(IRREPB,IRREPC)
           IOFFZ=I020+IINTFP*(ISYMOFF(IRREPA,IRREPCI,23)-1)
C
C FORM Z(bA) = W(em,b) * T(em,AI) FOR FIXED i
C
           If (nsum .ne. 0) 
     &      CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NSUM,
     &                ICORE(IOFFT),NSUM,ZILCH,ICORE(IOFFZ),NUMB)
14        CONTINUE
C
C CALCULATE ADDRESS OF Ci RECORD
C         
          CALL SYMTRA(IRREPCI,VRT(1,2),VRT(1,1),1,ICORE(I020),
     &                ICORE(I030)) 
          IREC=I+NUMI*(C-1)+ISYMOFF(IRREPC,IRREPCI,18)-1
          CALL PUTLST(ICORE(I030),IREC,1,1,IRREPCI,LISTZ)
13       CONTINUE
12      CONTINUE
11     CONTINUE
10    CONTINUE
C
C NOW DO CONTRIBUTION FROM LIST 30 INTEGRALS
C
      LISTW=30
      CALL NEWTYP2(1,401,19,10,.TRUE.)
C
C BEGIN BY REORDERING W(Ec,Am) => W(EA,cm)
C
      CALL SYMTRLST(ICORE,MAXCOR,IUHF,
     &              VRT(1,1),VRT(1,2),VRT(1,1),POP(1,2),
     &              1,13,19,19,11,10,LISTW,LSTSCR,2,
     &              .FALSE.,.FALSE.,.FALSE.)
      CALL IZERO(POPDUM,8)
      POPDUM(1)=1
C
C CALCULATE SIZES OF W(EA,m) ARRAYS FOR EACH SYMMETRY OF C   
C AND OFFSETS INTO REORDERED W(Em,A) ARRAY
C
      DO 105 IRREPC=1,NIRREP
       NDIMW(IRREPC)=0
       INCREM2=0
       DO 106 IRREPM=1,NIRREP
        IRREPAE=DIRPRD(IRREPM,IRREPC)
        INCREM=POP(IRREPM,2)*IRPDPD(IRREPAE,19)
        ILOCW(IRREPM,IRREPC)=IINTFP*INCREM2
        INCREM2=VRT(IRREPM,1)*IRPDPD(IRREPAE,11)+INCREM2
        NDIMW(IRREPC)=NDIMW(IRREPC)+INCREM
106    CONTINUE
105   CONTINUE
C
C READ IN T VECTOR AS T(Em,bI)
C
      LISTT =39
      NSIZET=ISYMSZ(ISYTYP(1,LISTT),ISYTYP(2,LISTT))
      I000=1
      I010=I000+IINTFP*NSIZET
      if(bRedundant) then
         CALL GETALL(ICORE(I000),NSIZET,1,LISTT)
      else
         CALL GETALL(ICORE(I000),NSIZET,1,LISTT+200)
      endif
      IOFFT=1
      DO 107 IRREP=1,NIRREP
       ILOCT(IRREP)=IOFFT
       DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
       IOFFT=IOFFT+IINTFP*NUMDST*DISSYT 
107   CONTINUE
C     
C SECOND TERM:
C
C   Z(Ab,Ic) <= T(Im,Eb)*<Ec|Am>
C
C INTEGRALS STORED NOW AS W(EA,cm)
C T VECTOR HELD IN CORE AS T(Em,bI)
C
C LOOP OVER IRREPS OF TARGET
C
      DO 110 IRREPCI=1,NIRREP
       TARSIZ=IRPDPD(IRREPCI,13)
       DO 111 IRREPI=1,NIRREP
        IRREPC=DIRPRD(IRREPI,IRREPCI)
        NUMI=POP(IRREPI,1)
        NUMC=VRT(IRREPC,2)
        I020=I010+IINTFP*NDIMW(IRREPC)
        I030=I020+IINTFP*MAX(TARSIZ,NDIMW(IRREPC))
        DO 112 C=1,NUMC
C
C READ IN ALL W(EA;m) FOR THIS VALUE OF C
C
         CALL GET3(ICORE(I020),LSTSCR,1,C,IRREPC,
     &             VRT(1,1),VRT(1,1),VRT(1,2),
     &             POP(1,2),19,10,'124',
     &             .FALSE.,.FALSE.,ICORE(I020))
C
C REORDER TO W(Em;A)
C
         CALL SSTGEN(ICORE(I020),ICORE(I010),NDIMW(IRREPC),
     &               VRT(1,1),VRT(1,1),POP(1,2),
     &               POPDUM,ICORE(I030),IRREPC,'1324')
C
         DO 113 I=1,NUMI
          DO 114 IRREPB=1,NIRREP
           IRREPBI=DIRPRD(IRREPB,IRREPI)
           IRREPEM=IRREPBI
           IRREPA=DIRPRD(IRREPB,IRREPCI)
           NUMB=VRT(IRREPB,2)
           NUMA=VRT(IRREPA,1)
           NROW=NUMA
           NCOL=NUMB
           NSUM=IRPDPD(IRREPEM,11)
           IOFFT=ILOCT(IRREPEM)+IINTFP*
     &           (NSUM*(ISYMOFF(IRREPI,IRREPEM,12)-1)+
     &           NSUM*NUMB*(I-1))
           IOFFW=I010+ILOCW(IRREPA,IRREPC)
           IOFFZ=I020+IINTFP*(ISYMOFF(IRREPB,IRREPCI,13)-1)
C
C FORM Z(Ab) = W(Em,A) * T(Em,bI) FOR FIXED i
C
           If (nsum .ne. 0)
     &     CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFW),NSUM,
     &                ICORE(IOFFT),NSUM,ZILCH,ICORE(IOFFZ),NUMA)
114       CONTINUE
C
C CALCULATE ADDRESS OF CI RECORD
C          
          IREC=I+NUMI*(C-1)+ISYMOFF(IRREPC,IRREPCI,18)-1
          CALL GETLST(ICORE(I030),IREC,1,1,IRREPCI,LISTZ)
          CALL SAXPY (IRPDPD(IRREPCI,13),ONE,ICORE(I030),1,
     &                ICORE(I020),1)
          CALL PUTLST(ICORE(I020),IREC,1,1,IRREPCI,LISTZ)
113      CONTINUE
112     CONTINUE
111    CONTINUE
110   CONTINUE
C
C NOW DO CONTRIBUTION FROM LIST 29 INTEGRALS
C
      LISTW=29
      CALL NEWTYP2(1,401,9,20,.TRUE.)
C
C BEGIN BY REORDERING W(Ec|Mb> => W(EM,cb)
C
      CALL SYMTRLST(ICORE,MAXCOR,IUHF,
     &              VRT(1,1),VRT(1,2),POP(1,1),VRT(1,2),
     &              1,13,9,9,18,20,LISTW,LSTSCR,2,
     &              .FALSE.,.FALSE.,.FALSE.)
      CALL IZERO(POPDUM,8)
      POPDUM(1)=1
C
C CALCULATE SIZES OF W(EM,b) ARRAYS FOR EACH SYMMETRY OF C   
C AND OFFSETS INTO REORDERED W(EM,b) ARRAY
C
      DO 205 IRREPC=1,NIRREP
       NDIMW(IRREPC)=0
       INCREM2=0
       DO 206 IRREPM=1,NIRREP
        IRREPAE=DIRPRD(IRREPM,IRREPC)
        INCREM=VRT(IRREPM,2)*IRPDPD(IRREPAE,9)
        ILOCW(IRREPM,IRREPC)=IINTFP*INCREM2
        INCREM2=VRT(IRREPM,2)*IRPDPD(IRREPAE,9)+INCREM2
        NDIMW(IRREPC)=NDIMW(IRREPC)+INCREM
206    CONTINUE
205   CONTINUE
C
C READ IN T VECTOR AS T(EM,AI)
C
      LISTT =34
      NSIZET=ISYMSZ(ISYTYP(1,LISTT),ISYTYP(2,LISTT))
      I000=1
      I010=I000+IINTFP*NSIZET
      if(bRedundant) then
         CALL GETALL(ICORE(I000),NSIZET,1,LISTT)
      else
         CALL GETALL(ICORE(I000),NSIZET,1,LISTT+200)
      endif
      IOFFT=1
      DO 207 IRREP=1,NIRREP
       ILOCT(IRREP)=IOFFT
       DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
       IOFFT=IOFFT+IINTFP*NUMDST*DISSYT 
207   CONTINUE
C     
C SECOND TERM:
C
C   Z(Ab,Ic) <= T(IM,AE)*<Ec|Mb>
C
C INTEGRALS STORED NOW AS W(EM,cb)
C T VECTOR HELD IN CORE AS T(EM,AI)
C
C LOOP OVER IRREPS OF TARGET
C
      DO 210 IRREPCI=1,NIRREP
       TARSIZ=IRPDPD(IRREPCI,13)
       DO 211 IRREPI=1,NIRREP
        IRREPC=DIRPRD(IRREPI,IRREPCI)
        NUMI=POP(IRREPI,1)
        NUMC=VRT(IRREPC,2)
        I020=I010+IINTFP*NDIMW(IRREPC)
        I030=I020+IINTFP*MAX(TARSIZ,NDIMW(IRREPC))
        DO 212 C=1,NUMC
C
C READ IN ALL W(EM,b) FOR THIS VALUE OF C
C
         CALL GET3(ICORE(I010),LSTSCR,1,C,IRREPC,
     &             VRT(1,1),POP(1,1),VRT(1,2),VRT(1,2),
     &             9,20,'124',
     &             .FALSE.,.FALSE.,ICORE(I010))
C
         DO 213 I=1,NUMI
          DO 214 IRREPB=1,NIRREP
           IRREPBI=DIRPRD(IRREPB,IRREPI)
           IRREPA=DIRPRD(IRREPB,IRREPCI)
           IRREPAI=DIRPRD(IRREPA,IRREPI)
           IRREPEM=IRREPAI
           NUMB=VRT(IRREPB,2)
           NUMA=VRT(IRREPA,1)
           NROW=NUMB
           NCOL=NUMA
           NSUM=IRPDPD(IRREPEM,9)
           IOFFT=ILOCT(IRREPEM)+IINTFP*
     &           (NSUM*(ISYMOFF(IRREPI,IRREPEM,9)-1)+
     &           NSUM*NUMA*(I-1))
           IOFFW=I010+ILOCW(IRREPB,IRREPC)
           IOFFZ=I020+IINTFP*(ISYMOFF(IRREPA,IRREPCI,23)-1)
C
C FORM Z(bA) = W(EM,b) * T(EM,AI)
C
           If (nsum .ne. 0)
     &     CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFW),NSUM,
     &                ICORE(IOFFT),NSUM,ZILCH,ICORE(IOFFZ),NUMB)
214       CONTINUE
C
C CALCULATE ADDRESS OF CI RECORD
C          
          IREC=I+NUMI*(C-1)+ISYMOFF(IRREPC,IRREPCI,18)-1
          CALL SYMTRA(IRREPCI,VRT(1,2),VRT(1,1),1,ICORE(I020),
     &                ICORE(I030))
          CALL GETLST(ICORE(I020),IREC,1,1,IRREPCI,LISTZ)
          CALL SAXPY (IRPDPD(IRREPCI,13),ONE,ICORE(I020),1,
     &                ICORE(I030),1)
          CALL PUTLST(ICORE(I030),IREC,1,1,IRREPCI,LISTZ)
213      CONTINUE
212     CONTINUE
211    CONTINUE
210   CONTINUE
C
C NOW ADD LISTS 30 AND 130
C
      DO 2000 IRREP=1,NIRREP
       LISTW=29
       LISTZ=129+IOFFLIST
       I000=1
       DISSIZ=IRPDPD(IRREP,ISYTYP(1,LISTW))
       NUMDIS=IRPDPD(IRREP,ISYTYP(2,LISTW))
       IF(DISSIZ.NE.0)THEN
        NINCOR=MAXCOR/(DISSIZ*IINTFP)
       ELSE
        NINCOR=2*NUMDIS
       ENDIF
       NBUNCH=MIN(NINCOR/2,NUMDIS)
       I010=I000+IINTFP*DISSIZ*NBUNCH
       ISTART=1
       NLEFT=NUMDIS
1      NREAD=MIN(NLEFT,NBUNCH)
       IF(TERM1)THEN
        CALL GETLST(ICORE(I000),ISTART,NREAD,1,IRREP,LISTW)
       ELSE
        CALL ZERO  (ICORE(I000),NREAD*DISSIZ)
       ENDIF
       IF(TERM2)THEN
        CALL GETLST(ICORE(I010),ISTART,NREAD,1,IRREP,LISTZ)
       ELSE
        CALL ZERO  (ICORE(I010),NREAD*DISSIZ)
       ENDIF
       CALL SAXPY (NREAD*DISSIZ,ONE,ICORE(I010),1,ICORE(I000),1)
       CALL PUTLST(ICORE(I000),ISTART,NREAD,1,IRREP,LISTZ)
       NLEFT=NLEFT-NREAD
       ISTART=ISTART+NREAD
       IF(NLEFT.NE.0)GOTO 1
2000  CONTINUE

      RETURN
      END

