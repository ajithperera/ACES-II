       SUBROUTINE PDCC_FORMG2(ICORE,MAXCOR,IUHF,FACT,IOFF)
C
C THIS ROUTINE COMPUTES :
C
C             1/2 FACT*SUM N SUM E,F   T(MN,EF) L(IN,EF)
C
C NOTE FOR MBPT4 AND UCC L(MN,EF) = T(MN,EF)
C     
C
C FOR RHF A SPIN ADAPTED CODE IS USED
C
CEND
C
C CODED JG AUGUST/90
C 
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYL,DISSYT,POP,VRT
      LOGICAL ISAME,MBPT4
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC
      DIMENSION ICORE(MAXCOR)
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF1BB,NF2AA,NF2BB
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      MXCOR=MAXCOR
      MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ.OR.UCC
C
      DO 1000 ISPIN=1,IUHF+1 
C
C      AA AND BB SPIN CASES
C
       IF(ISPIN.EQ.1) THEN
        NOCCSQ=NF1AA
       ELSE
        NOCCSQ=NF1BB
       ENDIF
C
       I000=MXCOR+1-NOCCSQ*IINTFP
       MXCOR=MXCOR-NOCCSQ*IINTFP
       CALL ZERO(ICORE(I000),NOCCSQ)
C
       IF(IUHF.EQ.1) THEN
C
       LISTT=ISPIN+43
       IF(MBPT4) THEN
        LISTL=LISTT
        ISAME=.TRUE.
       ELSE
        ISAME=.FALSE.
        LISTL=ISPIN+143
       ENDIF
C
C
C LOOP OVER IRREPS OF EF BLOCK (THE SAME IRREPS AS THE IN AND MN BLOCKS 
C HAVE
C
       DO 100 IRREP=1,NIRREP
C
C RETRIEVE INTEGRALS AND T2 AMPLITUDES.
C
        NOCC2SQ=0 
        DO 110 IRREPJ=1,NIRREP
         NOCC2SQ=NOCC2SQ+POP(IRREPJ,ISPIN)
     &                    *POP(DIRPRD(IRREPJ,IRREP),ISPIN)
110     CONTINUE 
        DISSYL=IRPDPD(IRREP,ISYTYP(1,LISTL))
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
        NUMSYL=IRPDPD(IRREP,ISYTYP(2,LISTL))  
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
        I001=1
        I002=I001+IINTFP*NOCC2SQ*DISSYT
        I003=I002+IINTFP*NOCC2SQ*DISSYT
        IF(MIN(NUMSYT,NUMSYL,DISSYT,DISSYL).NE.0) THEN
         I004=I003+IINTFP*MAX(NUMSYT,NUMSYL)
         IF(I004.LT.MXCOR) THEN
C  
C         IN CORE VERSION
C
C
          CALL G2AA(ICORE(I001),ICORE(I002),ICORE(I000),
     &              ISAME,ISPIN,POP(1,ISPIN),VRT(1,ISPIN),NOCCSQ,
     &              NOCC2SQ,DISSYL,DISSYT,NUMSYL,NUMSYT,LISTL,LISTT,
     &              IRREP,ICORE(I003),FACT)
          
         ELSE
          CALL INSMEM('G2AA  ',I004,MXCOR)
         ENDIF
        ELSE
        ENDIF 
100    CONTINUE
       ENDIF
C
C       AB SPIN CASE
C
       LISTT=46
       IF(MBPT4) THEN
        LISTL=LISTT
        ISAME=.TRUE.
       ELSE
        LISTL=146
        ISAME=.FALSE.
       ENDIF
C
C      LOOP OVER IRREPS.
C
       DO 200 IRREP=1,NIRREP
C
C     RETRIEVE INTEGRALS AND T2 AMPLITUDES
C
        DISSYL=IRPDPD(IRREP,ISYTYP(1,LISTL))
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
        NUMSYL=IRPDPD(IRREP,ISYTYP(2,LISTL))
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
        I001=1
        I002=I001+IINTFP*NUMSYL*DISSYL
        I003=I002+IINTFP*NUMSYT*DISSYT
        I004=I003+IINTFP*NUMSYT*DISSYT*(1-IUHF)
        IF(MIN(NUMSYT,NUMSYL,DISSYT,DISSYL).NE.0) THEN
         I005=I004+3*IINTFP*MAX(NUMSYT,NUMSYL,DISSYL,DISSYT)
         IF(I005.LT.MXCOR) THEN
C
C         IN CORE VERSION
C
          CALL G2AB(ICORE(I001),ICORE(I002),ICORE(I003),ICORE(I000),
     &              ISAME,ISPIN,POP(1,ISPIN),POP(1,3-ISPIN),
     &              VRT(1,ISPIN),VRT(1,3-ISPIN),NOCCSQ,DISSYL,DISSYT,
     &              NUMSYL,NUMSYT,LISTL,LISTT,IRREP,ICORE(I004),IUHF,
     &              FACT)
         ELSE
          CALL INSMEM('G2AB  ',I005,MXCOR)
         ENDIF
        ELSE
C
C
        ENDIF
200   CONTINUE
      CALL PUTLST(ICORE(I000),1,1,1,IOFF+ISPIN,191)
C
1000  CONTINUE
C
      RETURN

      END
