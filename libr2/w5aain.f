       
      SUBROUTINE W5AAIN(ICORE,MAXCOR,IUHF,TERM1,TERM2)
C
C
C THIS ROUTINE CALCULATES THE CONTRIBUTION
C
C           Z(efam) = - SUM T(fg,mn) * <ga||en>
C                       n,g
C
C TO THE W(efam) INTERMEDIATE FOR SPIN CASES AAAA AND BBBB. 
C AND INITIALIZES THE INTERMEDIATE LIST WITH  <EF||AM> + Z(EFAM)
C THE CONTRACTION IS A RATHER DIFFICULT ONE AND REQUIRES FANCY I/O
C TRICKS TO WRITE AS A MATRIX MULTIPLICATION.
C
C THE INTERMEDIATE LIST NUMBER IS 127 FOR SPIN CASE AAAA
C                                 128 FOR SPIN CASE BBBB
C
C THIS ROUTINE IS CALLED ONLY FOR UHF CALCULATIONS.
C
C SPIN CASES:
C
C Z(EFAM) = - P(EF) [SUM T(FG,MN)*<GA||EN> - SUM T(Fg,Mn)*<gA|nE>] [ISPIN = 1]
C                    G,N                     g,n
C
C Z(efam) = - P(ef) [SUM T(fg,mn)*<ga||en> - SUM T(fG,mN)*<Ga|Ne>] [ISPIN = 2]
C                    g,n                     G,N
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,ALPHA,BETA,FACT
      LOGICAL TERM1,TERM2
      DIMENSION ICORE(MAXCOR),ISCRSZ(2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      DATA ONE   /1.0/
      DATA ONEM  /-1.0/
      DATA ZILCH /0.0/
C
      MAXTP=0
      DO 5 IRREP=1,NIRREP
       MAXTP=MAX(MAXTP,IRPDPD(IRREP,9),IRPDPD(IRREP,10),
     &           IRPDPD(IRREP,19),IRPDPD(IRREP,20),
     &           IRPDPD(IRREP,21),IRPDPD(IRREP,22))
5     CONTINUE
C
      DO 10 ISPIN=1,2
       LSTTAR=126+ISPIN
       IF(.NOT.TERM2)GOTO 202
       DO 20 IRREPDO=1,NIRREP
C
C TERM I
C
C Z(EFAM) = - P(EF) [SUM T(FG,MN)*<GA||EN> 
C                    G,N                  
C
C ALPHA IS SET TO 1 HERE BECAUSE OF STUPID STORAGE MODE FOR AA AND BB
C  RING-ORDERED T2 AMPLITUDES
C
        ALPHA=ONE
        BETA =ZILCH
        LISTI=26+ISPIN
        LISTT=33+ISPIN
        SCRDSZ1=IRPDPD(IRREPDO,18+ISPIN)
        SCRDIS1=IRPDPD(IRREPDO,8+ISPIN)
        SCRSIZ1=SCRDIS1*SCRDSZ1
        SCRDSZ2=IRPDPD(IRREPDO,8+ISPIN)
        SCRDIS2=IRPDPD(IRREPDO,18+ISPIN)
        SCRSIZ2=SCRDIS2*SCRDSZ2
        TARDSZ=IRPDPD(IRREPDO,ISYTYP(1,LSTTAR))
        TARDIS=IRPDPD(IRREPDO,ISYTYP(2,LSTTAR))
        TARSIZ=TARDIS*TARDSZ
        INTDSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTI))
        INTDIS=IRPDPD(IRREPDO,ISYTYP(2,LISTI))
        INTSIZ=INTDIS*INTDSZ
        NT2DSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTT))
        NT2DIS=IRPDPD(IRREPDO,ISYTYP(2,LISTT))
        T2SIZE=NT2DSZ*NT2DIS
        I000=1
        I010=I000+IINTFP*SCRSIZ1
        ITMP1=I010+IINTFP*NT2DSZ*NT2DIS
        I020=ITMP1+IINTFP*MAXTP
        I030=I020+IINTFP*MAXTP
        IF(I030.GE.MAXCOR) CALL INSMEM('W5ABIN',I030,MAXCOR)
        MXCOR=MAXCOR-I030+1
        CALL IZERO(ICORE,IINTFP*SCRSIZ1)
C
C NOW READ IN THE T2 AMPLITUDES AS A T(GN,FM) MATRIX
C
        CALL GETLST(ICORE(I010),1,NT2DIS,1,IRREPDO,LISTT)
C
        IF(SCRDSZ2.NE.0)THEN
         NINCOR=MXCOR/(SCRDSZ2*IINTFP)
        ELSE
         NINCOR=SCRDIS2
        ENDIF 
        NLEFT =SCRDIS2
        NFIRST=1
        FACT=BETA
        IOFZ=I000
1       NREAD=MIN(NLEFT,NINCOR)
        CALL FANCYGET(ICORE(I020),ICORE(ITMP1),'PF','1432',
     &                VRT(1,ISPIN),VRT(1,ISPIN),
     &                VRT(1,ISPIN),POP(1,ISPIN),
     &                NFIRST,NREAD,2,IRREPDO,LISTI)
        CALL XGEMM('T','N',NREAD,NT2DIS,NT2DSZ,ONE,ICORE(I020),
     &             SCRDSZ2,ICORE(I010),NT2DSZ,FACT,ICORE(IOFZ),SCRDIS2)
        NFIRST=NFIRST+NREAD
        NLEFT =NLEFT-NREAD
        IOFZ=IOFZ+NREAD*IINTFP
        IF(NLEFT.NE.0)GOTO 1
C
C READ <GA||EN> INTEGRALS INTO A I(GN,EA) MATRIX
C
c        CALL FANCYGET(ICORE(I010),ICORE(I020),'PF','1432',
c     &                VRT(1,ISPIN),VRT(1,ISPIN),
c     &                VRT(1,ISPIN),POP(1,ISPIN),
c     &                1,SCRDIS,2,IRREPDO,LISTI)
C
C NOW WE CAN GENERATE THE PRODUCT WITH THE MATRIX MULTIPLICATION
C
C                                +
C             Z(EA,FM) = I(GN,EA) * T(GN,FM)
C
c        CALL XGEMM('T','N',SCRDIS2,NT2DIS,NT2DSZ,ALPHA,ICORE(I010),
c     &             SCRDSZ2,ICORE(I020),NT2DSZ,BETA,ICORE(I000),SCRDIS2)
C
C TERM II
C
C Z(EFAM) =  P(EF) SUM T(Fg,Mn)*<gA|nE>    [ISPIN = 1]
C                   g,n
C
C Z(efam) =  P(ef) SUM T(fG,mN)*<Ga|Ne>    [ISPIN = 2]
C                   G,N
C
        BETA =ONE
        ALPHA=ONE
        LISTI=31-ISPIN
        LISTT=36
        IF(ISPIN.EQ.1)THEN
         SCRDSZ2=IRPDPD(IRREPDO,19)
         SCRDIS2=IRPDPD(IRREPDO,10)
         SCRSIZ2=SCRDIS2*SCRDSZ2
        ELSE
         SCRDSZ2=IRPDPD(IRREPDO,9)
         SCRDIS2=IRPDPD(IRREPDO,20)
         SCRSIZ2=SCRDIS2*SCRDSZ2
        ENDIF
        INTDSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTI))
        INTDIS=IRPDPD(IRREPDO,ISYTYP(2,LISTI))
        INTSIZ=INTDIS*INTDSZ
        NT2DSZ=IRPDPD(IRREPDO,ISYTYP(1,LISTT))
        NT2DIS=IRPDPD(IRREPDO,ISYTYP(2,LISTT))
        T2SIZE=NT2DSZ*NT2DIS
        ITMP1=I010+IINTFP*NT2DSZ*NT2DIS
        ITMP2=ITMP1+IINTFP*MAXTP
        ITMP3=ITMP2+IINTFP*MAXTP
        I020=ITMP3+IINTFP*MAXTP
        I030=I020+IINTFP*MAXTP
        IF(I030.GE.MAXCOR) CALL INSMEM('W5ABIN',I030,MAXCOR)
        MXCOR=MAXCOR-I030+1
C
C NOW READ THE T2 AMPLITUDES INTO A T(gn,FM) [T(fm,GN)] MATRIX.
C
        CALL GETLST(ICORE(I010),1,NT2DIS,1,IRREPDO,LISTT) 
C
C READ THE <Ag|En> [<Ga|Ne>] INTEGRALS INTO AN I(AE,gn) [I(GN,ae)] MATRIX 
C  ARE TRANSPOSE INDICES TO FORM I(EA,gn) [I(GN,ea)].
C
        IF(ISPIN.EQ.1)THEN
C
C         Z(EA,FM) =  I(EA,gn) * T(gn,FM)    [ISPIN = 1]
C                 
         IF(SCRDSZ2.NE.0)THEN
          NINCOR=MXCOR/(SCRDSZ2*IINTFP)
         ELSE
          NINCOR=SCRDIS2
         ENDIF
         NLEFT =SCRDIS2
         NFIRST=1
         FACT=BETA
         IOFT=I010
2        NREAD=MIN(NLEFT,NINCOR)
         CALL FANCYGET(ICORE(I020),ICORE(ITMP1),'FF','1324',
     &                 VRT(1,1),VRT(1,2),VRT(1,1),POP(1,2),
     &                 NFIRST,NREAD,2,IRREPDO,LISTI)
         CALL SYMTR3(IRREPDO,VRT(1,1),VRT(1,1),SCRDSZ2,NREAD,
     &               ICORE(I020),ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         CALL XGEMM('N','N',SCRDSZ2,NT2DIS,NREAD,ALPHA,ICORE(I020),
     &              SCRDSZ2,ICORE(IOFT),NT2DSZ,BETA,ICORE(I000),SCRDSZ2)
         NFIRST=NFIRST+NREAD
         NLEFT =NLEFT-NREAD
         IOFT=IOFT+NREAD*IINTFP
         IF(NLEFT.NE.0)GOTO 2
C
c         CALL FANCYGET(ICORE(I010),ICORE(I020),'FF','1324',
c     &                 VRT(1,1),VRT(1,2),VRT(1,1),POP(1,2),
c     &                 1,SCRDIS,2,IRREPDO,LISTI)
c         CALL SYMTR3(IRREPDO,VRT(1,1),VRT(1,1),SCRDSZ2,SCRDIS2,
c     &               ICORE(I010),ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
c         CALL XGEMM('N','N',SCRDSZ2,NT2DIS,SCRDIS2,ALPHA,ICORE(I010),
c     &              SCRDSZ2,ICORE(I020),NT2DSZ,BETA,ICORE(I000),
c     &              SCRDSZ2)
        ELSE
         CALL SYMTR3(IRREPDO,VRT(1,2),VRT(1,2),SCRDIS2,NT2DSZ,
     &               ICORE(I000),ICORE(ITMP1),ICORE(ITMP2),
     &               ICORE(ITMP3))
         IF(SCRDSZ2.NE.0)THEN 
          NINCOR=MXCOR/(SCRDSZ2*IINTFP)
         ELSE
          NINCOR=SCRDIS2
         ENDIF
         NLEFT =SCRDIS2
         NFIRST=1
         FACT=BETA
         IOFZ=I000
3        NREAD=MIN(NLEFT,NINCOR)
         CALL FANCYGET(ICORE(I020),ICORE(ITMP1),'FF','1324',
     &                 VRT(1,1),VRT(1,2),POP(1,1),VRT(1,2),
     &                 NFIRST,NREAD,2,IRREPDO,LISTI)
         CALL XGEMM('T','T',NREAD,NT2DSZ,SCRDSZ2,ALPHA,ICORE(I020),
     &              SCRDSZ2,ICORE(I010),NT2DSZ,BETA,ICORE(IOFZ),SCRDIS2)
         NFIRST=NFIRST+NREAD
         NLEFT =NLEFT-NREAD
         IOFZ=IOFZ+NREAD*IINTFP
         IF(NLEFT.NE.0)GOTO 3
         CALL SYMTR3(IRREPDO,VRT(1,2),VRT(1,2),SCRDIS2,NT2DSZ,
     &               ICORE(I000),ICORE(ITMP1),ICORE(ITMP2),
     &               ICORE(ITMP3))
C                             +          +
C         Z(ea,fm) =  I(GN,ea) * T(fm,GN)    [ISPIN = 2]
C
c         CALL FANCYGET(ICORE(I010),ICORE(I020),'FF','1324',
c     &                 VRT(1,1),VRT(1,2),POP(1,1),VRT(1,2),
c     &                 1,SCRDIS,2,IRREPDO,LISTI)
c         CALL SYMTR1(IRREPDO,VRT(1,2),VRT(1,2),SCRDSZ2,ICORE(I010),
c     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
c         CALL XGEMM('T','T',SCRDIS2,NT2DSZ,SCRDSZ2,ALPHA,ICORE(I010),
c     &              SCRDSZ2,ICORE(I020),NT2DSZ,BETA,ICORE(I000),
c     &              SCRDIS2)
        ENDIF
C
C NOW WRITE THE TARGET LIST AS Z(E<F,AM) WITH FULL ANTISYMMETRIZATION.
C
        CALL FANCYPUT(ICORE,ICORE(I010),'PF','1324','Y','S',ONE,
     &                VRT(1,ISPIN),VRT(1,ISPIN),VRT(1,ISPIN),
     &                POP(1,ISPIN),1,TARDIS,2,IRREPDO,LSTTAR)
20     CONTINUE
C
C NOW ADD IN THE CORRESPONDING INTEGRALS
C
202   IF(TERM1)CALL SAXLST(ICORE,MAXCOR,LSTTAR,LSTTAR-100,LSTTAR,
     &       ONE,ONE)
10    CONTINUE
      RETURN
      END
