      SUBROUTINE PDCC_V1X2AA(W,T,Z,DISSYW,NUMSYW,DISSYT,NUMSYT,
     &                  LISTW,
     &                  LISTT,ITYPE,IRREP,T1,TAU,POP,VRT,LISTZ,
     &                  ISPIN)
C
C THIS ROUTINE COMPUTES THE A-A OR B-B LADDER CONTRIBUTIONS TO THE
C  MBPT(3) ENERGY, USING A FULL IN-CORE ALGORITHM.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL TAU,CIS,EOM, LTRP
      INTEGER DISSYT,DISSYW,DIRPRD,POP,VRT
      DIMENSION W(DISSYW,NUMSYW),T(DISSYT,NUMSYT)
      DIMENSION Z(DISSYT,NUMSYT),T1(1)
      DIMENSION POP(8),VRT(8) 
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /EXCITE/ CIS,EOM
      COMMON /LTRIP/ LTRP
      EQUIVALENCE(ICLLVL,IFLAGS(2))
      EQUIVALENCE(IDRLVL,IFLAGS(3))
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &DIRPRD(8,8)
      DATA ONE,AZERO,TWO /1.0D0,0.0D0,2.0D0/
C
#include "parcc.com"

      If (ISPAR) Then
         Call DZERO(T,NUMSYT*DISSYT)
      Else
C    
C PICK UP THE RELEVANT T AND L PIECES.
C
        CALL GETLST(T,1,NUMSYT,1,IRREP,LISTT)

      Endif 
C
C FORM TAU AMPLITUDES IF REQUIRED
C
       IF(TAU) THEN
        CALL FTAU(T,T1,T1,DISSYT,NUMSYT,POP,POP,
     &            VRT,VRT,IRREP,ISPIN,ONE)
       ENDIF
       CALL GETLST(W,1,NUMSYW,2,IRREP,LISTW)

CSSS       call checksum("VMNIJ", W, NUMSYW*DISSYW)
C
C COMPUTE THE CONTRIBUTION.
C
      CALL XGEMM('N','T',DISSYT,DISSYW,NUMSYT,ONE,T,
     &           DISSYT,W,DISSYW,AZERO,Z,DISSYT)
C
C     If this is a CCSD(T) or QCISD(T) gradient calculation, read
C     LISTZ and add to Z.
C
      IF(IDRLVL.GT.0.AND.(ICLLVL.EQ.21.OR.ICLLVL.EQ.22.OR.LTRP).OR.EOM)
     &  THEN
       FX=ONE
       IF(EOM .or. LTRP)FX=TWO
       CALL GETLST(T,1,NUMSYT,1,IRREP,LISTZ)
       CALL SAXPY (DISSYT*NUMSYT,FX,T,1,Z,1)
       IF (LTRP) THEN
         CALL GETLST(T,1,NUMSYT,1,IRREP,LISTZ+59)
         CALL SAXPY (DISSYT*NUMSYT,ONE,T,1,Z,1)
       ENDIF
      ENDIF
C
C SAVE ON LISTZ
C
      CALL GETLST(T,1,NUMSYT,1,IRREP,LISTZ)
      CALL DAXPY(DISSYT*NUMSYT, 1.0D0, T, 1, Z, 1)
      CALL PUTLST(Z,1,NUMSYT,1,IRREP,LISTZ)

      RETURN
      END
