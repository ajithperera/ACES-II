#-D_NONO_SKIP will do the original transformation
#-D_READ_ONLY do the new transformation but built on old structure
#-D_2HOT is new transformation on the new structure.
#
#DEFINES_EXTRA += -D_READ_ONLY -D_DEBUG_LVL0# -D_DEBUG_LVLM1 -D_ASSERT
#DEFINES_EXTRA += -D_DEBUG_LVLM1 -D_DEBUG_LVL0 -D_NONOSKIP   -D_ASSERT
#DEFINES_EXTRA += -D_2HOT -D_ASSERT #-D_DEBUG_LVL0 #-D_DEBUG_LVLM1 -D_DEBUG_LVL0  -D_DEBUG_LVLM2

#DEFINES_EXTRA +=  -D_ASSERT -D_DOUG_KROLL -D_DPOCC -D_DEBUG_LVL0 #-D_RCC #-D_OLDECP #-D_DEBUG_LVLM1 # -D_DOUG_KROLL #-D_DEBUG -D_IMPORT_CORR_ORBS -D_DEBUG_LVL0# -D_2ND_ORD_PROPS  -D_DEBUG 
DEFINES_EXTRA = -D_ASSERT -D_DOUG_KROLL -D_TDENS -D_MKLST -D_GETPTS -D_DPOCC -D_RCC -D_DEBUG_LVL0  #-D_NO_NRML_ORD #-D_HF_ONLY #-D_SAVE_GAMMA -D_TAILORED #-D_USE_CFOUR #-D_SCALE_IJAB
 
OPTIMIZE=1
DEBUG=0
64BIT=1
INCDIRS= ../include ../include/mpi ./include  ../intgrt/include/ ../sbtools/include
MKL_GRP:= -Bstatic -lmkl_intel_ilp64 -lmkl_lapack95_ilp64 -lmkl_sequential -lmkl_core -Bdynamic

#LDFLAGS_NUMLIBS:= -L/apps/compilers/intel/2020/0.166/mkl/lib/intel64  -Wl,--start-group $(MKL_GRP) -Wl,--end-group -pthread -L//apps/shared/bartlett/ACESII-2.14.0/lib -llb -llinpack

LDFLAGS_NUMLIBS:= -L/apps/shared/bartlett/ACESII-2.14.0/lib -llinpack -llb

DIR_INSTBIN := /home/perera/Develop/ACESII/bin
DIR_INSTLIB := /home/perera/Develop/ACESII/lib
DIR_SRCLIB  := ${DIR_INSTLIB}

###################################
## AME and ASL specific settings ##
###################################

ifeq (${CURR},asv)
   LIST_DEF_LIBS :=
   ACES_LINK_LISTS :=
   LD := $(filter-out -c,${CC})
   LDFLAGS := ${CFLAGS}
   LDFLAGS_EXTRA := ../joda/asv_ctl.o
   LDFLAGS_NUMLIBS :=
endif

