      SUBROUTINE NONLIN(EVEC,EVAL,IA,ISYMO,DAP,DAM,FP,FM,F1,F2,FW,FSW
     X ,FWW,FS,FS2,E1,E2,EW,ESW,EWW,ES,ES2,HMO,UP1,UM1,UP2,UM2,UWP,UWM
     X ,US,US2,USWP,USWM,UWWP,UWWM,ABP,ABM,IVO,IVRT,IOCC,UPDATE,ASMALL
     X ,ASQUARE,ASCALE,ICONV,ABPM,UVAL,UVEC,WVAL,WVEC,PORT,SCR
     X ,ABVEC,ABVEC1,AMVEC,AMVEC1,IAS,IVRTS,IOCCS,IVOS,ABPI,SVEC,TVEC
     X ,ZVEC,YVEC,REDVEC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*8 LAB(52)
      COMMON/INFOA/NBASIS,NUMSCF,NX,NMO2,NOC,NVT,NVO
      COMMON/SWPPP/INP,IAMO,IFAMO,IINDO,IORTH
C     COMMON/TDHFIN/FREQ,NTDHF,IFIL1,IPROP
      COMMON/THRES/ TOLPER,DEGEN,EPSI
      COMMON/THRE1/ NITER,MAXIT
      COMMON/TDAMP/  DAMP,IDST,IDEN
      COMMON/ITOPR/ IDCSHG,IOKE,IDCOR,IIDRI,ITHG
      COMMON/IPRNT/ IOPEV,IOPDA,IOPU,IOPFE,IOPPR,IWRPA
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C ..... for reduced linear equation solver
      COMMON /LRDUCE/ CONVI
      COMMON /LRDUC1/ KMAX
      DIMENSION ITITLE(18),LCOMP(21,4)
      COMMON/INFT/ITITLE,NCOMP,LCOMP,MSIZVO
C ..... <<<<<<< AO size of 500 Atom # of 100 <<<<<<<<<<<<<<<<<<<<<<<
      COMMON/PIND/ NAT,N1(500),N2(500),N3(100)
      COMMON/PIND1/ G(100,100),G2(5),G1(5)
C <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      COMMON/INFSYM/NSYMHF,NSO(8),NOCS(8),NVTS(8),IDPR(8,8),NVOS(8)
     X ,NIJS(8),NIJS2(8),NRDS(8),NIJSR(8)
C ..............................................
C     DIMENSION EVEC(NSIZ2),EVAL(NSIZ1),IA(NSIZ1),T(NSIZ1)
C     DIMENSION DAP(NSIZ2),DAM(NSIZ2),FP(NSIZ2),FM(NSIZ2)
C     DIMENSION F1(NSIZ2*3),F2(NSIZ2*6),FW(NSIZ2*3),FSW(NSIZ2*9)
C    X ,FWW(NSIZ2*9),FS(NSIZ2*3),FS2(NSIZ2*9)
C    X ,E1(NSIZO2*3),E2(NSIZO2*6),EW(NSIZO2*3),ESW(NSIZO2*9)
C    X ,EWW(NSIZO2*9),ES(NSIZO2*3),ES2(NSIZO2*6)
C     DIMENSION HMO(NSIZ2*3),UP1(NSIZ1*NSIZO*3),UM1(NSIZ1*NSIZO*3)
C    X ,UP2(NSIZ1*NSIZO*6),UM2(NSIZ1*NSIZO*6),UWP(NSIZ1*NSIZO*3)
C    X ,UWM(NSIZ1*NSIZO*3),US(NSIZ1*NSIZO*3),US2(NSIZ1*NSIZO*9)
C    X ,USWP(NSIZ1*NSIZO*9),USWM(NSIZ1*NSIZO*9),UWWP(NSIZ1*NSIZO*9)
C    X ,UWWM(NSIZ1*NSIZO*9)
C     DIMENSION ABP(IOVO2),ABM(IOVO2),ABPI(IOVO2)
C    X ,IVO(NSIZ1*NSIZ1),IVRT(NSIZVO),IOCC(NSIZVO)
C     DIMENSION UPDATE(NSIZVO*MCOMP*KMAX*2),ASMALL(KMAX*KMAX*MCOMP)
C    X ,ASQUARE((KMAX+1)*MCOMP),ASCALE(MCOMP),ICONV(MCOMP)
C     DIMENSION IAS(NSIZ1*MCOMP),IVRTS(NSIZVO*MCOMP),IOCCS(NSIZVO*MCOMP)
C    X ,IVOS(NSIZ1*NSIZO*MCOMP),ISYMO(NSIZ1)
C ...... arraies for non-iterative case .........
C ..... UVAL used also in ABSOLV but called in GTDFEQ
C     DIMENSION ABPM(NIJS2(NSYMHF)),UVAL(MSIZVO),UVEC(MSIZVO*MSIZVO)
C    X ,WVAL(MSIZVO),WVEC(MSIZVO*MSIZVO),PORT(MSIZVO*MSIZVO),SCR(MSIZVO*2)
C     DIMENSION ABVEC(NSIZVO,9),ABVEC1(NSIZVO,9),AMVEC(NSIZVO,9)
C    X ,AMVEC1(NSIZVO,9),SVEC(IOVOR),TVEC(IOVOR),ZVEC(IOVOR),YVEC(IOVOR)
C    X ,REDVEC(IORED)
      DIMENSION EVEC(1),EVAL(1),IA(1)
      DIMENSION DAP(1),DAM(1),FP(1),FM(1)
      DIMENSION F1(1),F2(1),FW(1),FSW(1),FWW(1),FS(1),FS2(1)
     X ,E1(1),E2(1),EW(1),ESW(1),EWW(1),ES(1),ES2(1)
      DIMENSION HMO(1),UP1(1),UM1(1),UP2(1),UM2(1),UWP(1),UWM(1),US(1)
     X ,US2(1),USWP(1),USWM(1),UWWP(1),UWWM(1)
      DIMENSION ABP(1),ABM(1),ABPI(1),IVO(1),IVRT(1),IOCC(1)
      DIMENSION IAS(1),IVRTS(1),IOCCS(1),IVOS(1),ISYMO(1)
      DIMENSION UPDATE(1),ASMALL(1),ASQUARE(1),ASCALE(1),ICONV(1)
      DIMENSION ABPM(1),UVAL(1),UVEC(1),WVAL(1),WVEC(1),PORT(1),SCR(1)
      DIMENSION ABVEC(1),ABVEC1(1),AMVEC(1),AMVEC1(1)
      DIMENSION SVEC(1),TVEC(1),ZVEC(1),YVEC(1),REDVEC(1)
C ......................................................
C     DIMENSION XX(600),IX(600),PTOTN(7)
      DIMENSION XX(600),IX(600)
CGAMESS     DIMENSION IODA(99),IFILEN(99)
      DATA ZERO/0.D0/,ONE/1.D0/,HALF/.5D0/,TWO/2.D0/
      DATA STATIC/1.D-10/

C  ... set for vmol buffer .....
      NINTMX=600
C set two-electron file, one-electron included  in IIII(INT)
C  this is common for both vmol and GAMESS integral file
      INT=8
C ...... for EVE and VPOUT(PRP) files ......
      IFIL1=4
      IPROP=3
C.....READ  M.O. AND EIGEN-VALUES
C....................................
      IF(INP.EQ.0) THEN
C     CALL GETREC(1,'JOBARC','SCFEVCA0',IINTFP*NBASIS*NBASIS,EVEC)
      CALL GETREC(1,'JOBARC','SCFEVECA',IINTFP*NBASIS*NUMSCF,EVEC)
C     CALL GETREC(1,'JOBARC','SCFEVLA0',IINTFP*NBASIS,EVAL)
      CALL GETREC(1,'JOBARC','SCFEVALA',IINTFP*NUMSCF,EVAL)
      CALL GETREC(1,'JOBARC','IRREPALP',NUMSCF,ISYMO)
C     CALL GETREC(1,'JOBARC','OCCUPYA ',8,NOCS)
      ELSE
      REWIND IFIL1
C... getting eigen-vectors and values from EVE
C  .... For the moment NUMSCF is set to NBASIS
      READ(IFIL1)LAB,ID,NMO2,NBASIS,(EVEC(I),I=1,NMO2)
     X ,(EVAL(I),I=1,NBASIS)
      NUMSCF=NBASIS
      READ(IFIL1) NAT,N1,N2,N3,G,G2,G1
      if (nat.gt.100.or.numscf.gt.500) then
         print *, '@NONLIN: Assertion failed.'
         print *, '         numscf = ',numscf,' (limit 500)'
         print *, '         nat    = ',nat,' (limit 100)'
         call errex
      end if
      WRITE(6,*) 'NAT = ', NAT
      WRITE(6,*) 'N1 '
      WRITE(6,*) (N1(I),I=1,NUMSCF)
      WRITE(6,*) 'N2 '
      WRITE(6,*) (N2(I),I=1,NUMSCF)
      WRITE(6,*) 'N3 '
      WRITE(6,*) (N3(I),I=1,NAT)
      WRITE(6,*) ' gamma(i,j) in eV '
      DO 15 I=1,NAT
   15 WRITE(6,*) (G(I,J),J=1,NAT)
      WRITE(6,*) ' Slater Condon Parameters '
      WRITE(6,*) ' F2 = ',G2
      WRITE(6,*) ' G1 = ',G1
      END IF
      WRITE(6,*) 'EVAL  '
      WRITE(6,100) (I,EVAL(I),ISYMO(I),I=1,NUMSCF)
  100 FORMAT(1H ,2(I3,2X,F20.10,2X,I3))
      WRITE(6,*) ' NUMSCF = ',NUMSCF
      IF(IOPEV.NE.0) THEN
      WRITE(6,201) ITITLE
  201 FORMAT(1H1,'    M.O. COEFFICIENT',5X,18A4/)
      CALL OUTMXD(EVEC,NBASIS,NBASIS,NBASIS)
      END IF
      NX=(NUMSCF*(NUMSCF+1))/2
      NXX=(NBASIS*(NBASIS+1))/2
      NMO2=NUMSCF*NUMSCF
      NVT=NUMSCF-NOC
      NVO=NOC*NVT
C ........ size of matices ........
      NSIZ1=NUMSCF
      NSIZ11=NBASIS
      NSIZ2=NMO2
      NSIZO=NOC
      NSIZ3=NX
      NSIZ33=NXX
      IF(INP.EQ.0) THEN
      NSIZVO=NVO
      ELSE
      NSIZVO=0
      END IF
      MCOMP=9
C .....(9 vectors) * 2 = 18
      NSIZIV=NSIZVO+MCOMP*2
C.....SET ARRY IA(I), etc. ......................
      CALL SYM_INF(NSYMHF,NSIZVO,NSIZ1,NOC,ISYMO,IA,IAS,IVRT,IOCC,IVRTS,
     X IOCCS,IVO,IVOS)
      IJ=0
      DO 90 I=1,NSIZ1
      DO 90 J=1,I
      IJ=IJ+1
      DAP(IJ) = 0.D0
      IF(I.EQ.J.AND.I.LE.NOC) DAP(IJ)=TWO
   90 CONTINUE
      IF(IAMO.NE.0) THEN
      CALL DENAO(NBASIS,EVEC,DAP,FP)
      CALL TRPUT(FP,DAP,NSIZ1)
      END IF
      IF(IOPDA.NE.0) THEN
      WRITE(6,202) ITITLE
  202 FORMAT(1H1,'    DENSITY MATRIX',5X,18A4/)
      CALL RTPUT(FW,DAP,NSIZ1)
      CALL OUTMXD(FW,NSIZ1,NUMSCF,NUMSCF)
      END IF
      IF(IINDO.EQ.0.AND.NBASIS.EQ.NUMSCF) THEN
C *********** Total Energy for the Zero th order ******************
      CALL ONEINT(INT,F1,NSTO,VNR,XX,IX,NSIZ3,NINTMX)
       IF(NSTO.NE.NUMSCF) WRITE(6,*) 'NSTO,NUMSCF',NSTO,NUMSCF
      CALL STPUT(FW,F1,NSIZ1)
      IF(IOPFE.NE.0) THEN
      WRITE(6,*) ' One-elctron Part of Hamiltonian IAMO = ',IAMO
      CALL OUTMXD(FW,NSIZ1,NUMSCF,NUMSCF)
      END IF
C     CALL COPY(FW,F2,NSIZ2)
      CALL COPY(F1,F2,NSIZ3)
      IF(IAMO.EQ.0) THEN
C    Transform One-electron part to over MO
      CALL MATMUL(FW,EVEC,FWW,NSIZ1,NSIZ1,NSIZ1,1,0)
      CALL TRANSQ(EVEC,NSIZ1)
      CALL MATMUL(EVEC,FWW,FW,NSIZ1,NSIZ1,NSIZ1,1,0)
      CALL TRANSQ(EVEC,NSIZ1)
      CALL TRPUT(FW,F1,NSIZ1)
      END IF
      EHE = TRACEP(DAP,F1,NUMSCF)
      WRITE(6,*) '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
      WRITE(6,*) ' One electron contribution = ',EHE
      IF(IFAMO.EQ.0) THEN
      CALL COPY(F1,F2,NSIZ3)
      CALL FMOK(DAP,F2,XX,IX,NINTMX,IA)
      ELSE
      CALL COPY(DAP,FWW,NSIZ3)
      CALL DENAO(NBASIS,EVEC,FWW,FP)
      CALL FNOK(FP,EVEC,F2,NBASIS,NSIZ1,XX,IX,NINTMX,IA)
      CALL TRPUT(F2,FP,NSIZ1)
      CALL COPY(FP,F2,NSIZ3)
C ..... This moment F2 is purely two-electron matrix
C ..... The contribution fromn one electron part is added in EHE
      EHE = EHE + EHE
      END IF
      EHFE=(EHE+TRACEP(DAP,F2,NBASIS))/TWO
      EHFN=EHFE+VNR
      WRITE(6,*) '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
      WRITE(6,303) EHFN,VNR
  303 FORMAT(' HARTREE FOCK SCF ENERGY = ',F20.13,' nuclear',F20.13)
      WRITE(6,*) '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
      IF(IOPFE.NE.0) THEN
      WRITE(6,208) ITITLE
  208 FORMAT(1H1,'    M.O. FOCK  MATRIX',5X,18A4/)
      CALL RTPUT(FW,F2,NSIZ1)
      CALL OUTMXD(FW,NSIZ1,NUMSCF,NUMSCF)
      END IF
C **** End of Total energy in Zero th order **************************
      END IF
C
C..... READ PROPERTY FROM VPOUT
C
      CALL ONEPRS(IPROP,NXX,F1,XX,IX,NT,ISYMO,EVEC,HMO,DAP,SCR
     X ,NINTMX,NBASIS,NUMSCF)
C
C     COUPLED HARTREE FOCK CALCULATIONS
C
C
C    SCR;SCRATCH
C   U1,U2 ARE CPHF(first and second order) SOLUTIONS
C   F1,F2 are fock matrices over zeroth order MO
C   and E1,E2 are fock matrix of the order
C
C SG 12/6/96
      IDALPH = 0
      IOR = 0
      IEOPE = 0
      ISHG = 0
C
      IF(IDCSHG.EQ.0.AND.IOKE.EQ.0.AND.IDCOR.EQ.0.AND.
     X IIDRI.EQ.0.AND.ITHG.EQ.0.AND.ISHG.EQ.0.AND.
     X IEOPE.EQ.0.AND.IOR.EQ.0.AND.IDALPH.EQ.0) THEN
      CALL GCHFEQ(SCR,EVAL,EVEC,DAP,FP,HMO
     X ,US,US2,FS,FS2,ES,ES2,UPDATE,ASMALL,ASQUARE,ASCALE,ICONV
     X ,XX,IX,NINTMX,ABP,ABVEC,ABVEC1,UVEC,IVO,IVOS,IVRT,IOCC
     X ,IVRTS,IOCCS,IA,IAS,ISYMO,LCOMP,NCOMP)
      ELSE
      CALL GTDFEQ(SCR,EVAL,EVEC,DAP,DAM,HMO
     X ,UP1,UM1,UP2,UM2,UWP,UWM,US,US2,USWP,USWM,UWWP,UWWM
     X ,F1,F2,FW,FS,FS2,FSW,FWW,E1,E2,EW,ES,ES2,ESW,EWW,FP,FM
     X ,UPDATE,ASMALL,ASQUARE,ASCALE,ICONV,XX,IX,NINTMX,ABP,ABM,ABPI
     X ,ABVEC,AMVEC,ABVEC1,AMVEC1,ABPM,UVAL,UVEC,WVAL,WVEC,PORT
     X ,SVEC,TVEC,ZVEC,YVEC,REDVEC
     X ,IVO,IVOS,IVRT,IOCC,IVRTS,IOCCS,IA,IAS,ISYMO,LCOMP,NCOMP)
      END IF
      RETURN
      END
