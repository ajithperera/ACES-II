      SUBROUTINE OSL2IAC(L,T,T1,G,T1A,T1B,ISPIN,VRTL,VRT1,VRT2,
     $   POPT1,POPT2,NVRTSQ,
     $   DISSYW,DISSYT,NUMSYW,NUMSYT,LISTL,IRREP,FACT)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION L
      INTEGER DISSYT, DISSYW, DIRPRD,POP,VRTL,VRT1,VRT2,POPT1,POPT2
      DIMENSION L(NUMSYW,DISSYW),T(NUMSYT,DISSYT)
      DIMENSION T1(DISSYT,NUMSYT),G(NVRTSQ)
      DIMENSION VRTL(8),VRT1(8),VRT2(8),POPT1(8),POPT2(8)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),DIRPRD(8,8)
C
      DATA ONEM,ONE,HALF,HALFM /-1.0D0,1.D0,0.5D0,-0.5D0/
C
      CALL FSGET(T1,1,NUMSYW,1,IRREP,LISTL,'NINI')
      CALL TRANSP(T1,L,NUMSYW,DISSYW)
C 
      CALL ZERO(T1,NUMSYT*DISSYT)
      CALL FTAU(T1,T1A,T1B,DISSYT,NUMSYT,POPT1,POPT2,VRT1,VRT2,IRREP,
     $     3,ONE)
      CALL TRANSP(T1,T,NUMSYT,DISSYT)
C 
      IOFF=1
      JOFFL=1
      JOFFT=1
      DO 90 IRREPJ=1,NIRREP
C          
         NVRTL=VRTL(IRREPJ)
         NVRTT=VRT2(IRREPJ)
C
         IRREPI=DIRPRD(IRREP,IRREPJ)
         NVRTI=VRT1(IRREPI)
C
         IF(MIN(NVRTI,NVRTT,NVRTL).NE.0) THEN
C
            CALL XGEMM('T','N',NVRTT,NVRTL,NVRTI*NUMSYW,FACT*ONEM,
     &         T(1,JOFFT),NVRTI*NUMSYW,L(1,JOFFL),
     &         NVRTI*NUMSYW,ONE,G(IOFF),NVRTT)
         ENDIF
C
         JOFFL=JOFFL+NVRTI*NVRTL
         JOFFT=JOFFT+NVRTI*NVRTT
         IOFF=IOFF+NVRTT*NVRTL
C
 90   CONTINUE
C
      RETURN
      END
