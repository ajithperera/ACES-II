      SUBROUTINE MODIAJK(ICORE,MAXCOR,IUHF,FACT)
C
C FORMS THE AIBC HBAR ELEMENTS
C
C  HBAR(ia,jk) <=  - T(ie) <jk||ea>
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,FACT
      DIMENSION ICORE(MAXCOR)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA ONE,ZILCH,ONEM/1.0D0,0.0D0,-1.0D0/      
C
C DO SPIN CASE 4 FIRST
C
C  HBAR(Jk,Ia) = T(IE) * W(Ea,Jk)
C
      LISTW=16
      LISTZ=10
      LISTT=90
      I000=1
      I010=I000+IINTFP*NT(1)
      CALL GETLST(ICORE(I000),1,1,1,1,90)
      DO 10 IRREPDO=1,NIRREP
       DISSYW=IRPDPD(IRREPDO,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPDO,ISYTYP(2,LISTW))
       DISSYZ=IRPDPD(IRREPDO,ISYTYP(1,LISTZ))
       NUMDSZ=IRPDPD(IRREPDO,ISYTYP(2,LISTZ))
       MAXW=MAX(NUMDSW,DISSYW,NUMDSZ,DISSYZ)
       I020=I010+IINTFP*MAX(NUMDSW*DISSYW,NUMDSZ*DISSYZ)
       I030=I020+IINTFP*MAX(NUMDSW*DISSYW,NUMDSZ*DISSYZ)
       ITMP1=I030 
       ITMP2=ITMP1+IINTFP*MAXW
       ITMP3=ITMP2+IINTFP*MAXW
C
C READ W(Ea,Jk) AND REORDER TO W(Jk,aE)
C
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPDO,LISTW)
       CALL TRANSP(ICORE(I020),ICORE(I010),NUMDSW,DISSYW)
       CALL SYMTR1(IRREPDO,VRT(1,1),VRT(1,2),NUMDSW,ICORE(I010),
     &             ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
       IOFFT=I000
       IOFFW=I010
       IOFFZ=I020
C
C DO CONTRACTION W(Jk,aE) * T(EI) => Z(Jk,aI)
C
       DO 20 IRREPI=1,NIRREP
        IRREPE=IRREPI
        IRREPA=DIRPRD(IRREPE,IRREPDO)
        NUMI=POP(IRREPI,1)
        NUMA=VRT(IRREPA,2)
        NUME=VRT(IRREPE,1)
        NROW=DISSYZ*NUMA
        NCOL=NUMI
        NSUM=NUME
        IF (NSUM.NE.0) THEN
         CALL XGEMM('N','N',NROW,NCOL,NSUM,FACT*ONE,ICORE(IOFFW),NROW,
     &              ICORE(IOFFT),NSUM,ZILCH,ICORE(IOFFZ),NROW)
        ELSE
         CALL ZERO(ICORE(IOFFZ),NROW*NCOL)
        END IF
        IOFFW=IOFFW+IINTFP*NROW*NSUM
        IOFFT=IOFFT+IINTFP*NSUM*NCOL
        IOFFZ=IOFFZ+IINTFP*NROW*NCOL
20     CONTINUE
C 
C REORDER BACK TO Z(Jk,Ia) AND AUGMENT LIST ON DISK.
C
       CALL SYMTR1(IRREPDO,VRT(1,2),POP(1,1),DISSYZ,ICORE(I020),
     &             ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
       CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPDO,LISTZ)
       CALL SAXPY (DISSYZ*NUMDSZ,ONE,ICORE(I010),1,ICORE(I020),1)
       CALL PUTLST(ICORE(I020),1,NUMDSZ,1,IRREPDO,LISTZ)
10    CONTINUE
C
C RETURN FOR RHF
C
      IF(IUHF.EQ.0)GOTO 333
C
C DO SPIN CASE 3 
C
C  HBAR(Jk,Ai) = W(Jk,Ae)*T(ei)
C
      LISTW=16
      LISTZ=9
      LISTT=90
      I000=1
      I010=I000+IINTFP*NT(2)
      CALL GETLST(ICORE(I000),1,1,1,2,90)
      DO 210 IRREPDO=1,NIRREP
       DISSYW=IRPDPD(IRREPDO,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPDO,ISYTYP(2,LISTW))
       DISSYZ=IRPDPD(IRREPDO,ISYTYP(1,LISTZ))
       NUMDSZ=IRPDPD(IRREPDO,ISYTYP(2,LISTZ))
       I020=I010+IINTFP*MAX(NUMDSW*DISSYW,NUMDSZ*DISSYZ)
       I030=I020+IINTFP*MAX(NUMDSW*DISSYW,NUMDSZ*DISSYZ)
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPDO,LISTW)
       CALL TRANSP(ICORE(I020),ICORE(I010),NUMDSW,DISSYW)
       IOFFT=I000
       IOFFW=I010
       IOFFZ=I020
C
C DO CONTRACTION W(Jk,Ae)*T(ei)
C
       DO 220 IRREPI=1,NIRREP
        IRREPE=IRREPI
        IRREPA=DIRPRD(IRREPE,IRREPDO)
        NUME=VRT(IRREPE,2)
        NUMA=VRT(IRREPA,1)
        NUMI=POP(IRREPI,2)
        NROW=DISSYZ*NUMA
        NCOL=NUMI
        NSUM=NUME
        IF (NSUM.NE.0) THEN
         CALL XGEMM('N','N',NROW,NCOL,NSUM,FACT*ONE,ICORE(IOFFW),NROW,
     &              ICORE(IOFFT),NSUM,ZILCH,ICORE(IOFFZ),NROW)
        ELSE
         CALL ZERO(ICORE(IOFFZ),NROW*NCOL)
        END IF
        IOFFW=IOFFW+IINTFP*NROW*NSUM
        IOFFT=IOFFT+IINTFP*NSUM*NCOL
        IOFFZ=IOFFZ+IINTFP*NROW*NCOL
220    CONTINUE
       CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPDO,LISTZ)
       CALL SAXPY (DISSYZ*NUMDSZ,ONE,ICORE(I010),1,ICORE(I020),1)
       CALL PUTLST(ICORE(I020),1,NUMDSZ,1,IRREPDO,LISTZ)
210   CONTINUE
C
C DO SPIN CASES 1 AND 2
C
C  HBAR(JK,IA) = T(IE) <JK||EA>
C
333   CONTINUE
C
      DO 300 ISPIN=1,1+IUHF
       LISTW=13+ISPIN
       LISTZ=6+ISPIN
       LISTT=90
       I000=1
       I010=I000+IINTFP*NT(ISPIN)
       CALL GETLST(ICORE(I000),1,1,1,ISPIN,90)
       DO 310 IRREPDO=1,NIRREP
        DISSYW=IRPDPD(IRREPDO,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREPDO,ISYTYP(2,LISTW))
        NUMDSW0=IRPDPD(IRREPDO,20+ISPIN)
        DISSYZ=IRPDPD(IRREPDO,ISYTYP(1,LISTZ))
        NUMDSZ=IRPDPD(IRREPDO,ISYTYP(2,LISTZ))
        MAXW=MAX(NUMDSZ,DISSYZ,NUMDSW,NUMDSW0,DISSYW)
        I020=I010+IINTFP*MAX(NUMDSW0*DISSYW,NUMDSZ*DISSYZ)
        I030=I020+IINTFP*MAX(NUMDSW0*DISSYW,NUMDSZ*DISSYZ)
        ITMP1=I030 
        ITMP2=ITMP1+IINTFP*MAXW
        ITMP3=ITMP2+IINTFP*MAXW
        CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPDO,LISTW)
        CALL TRANSP(ICORE(I020),ICORE(I010),NUMDSW,DISSYW)
        CALL SYMEXP(IRREPDO,VRT(1,ISPIN),NUMDSW,ICORE(I010))
C
C DO CONTRACTION Z(J<K,AI) = W(J<K,AE)*T(EI)
C
        IOFFT=I000
        IOFFW=I010
        IOFFZ=I020
        DO 320 IRREPI=1,NIRREP
         IRREPE=IRREPI
         IRREPA=DIRPRD(IRREPE,IRREPDO)
         NUME=VRT(IRREPE,ISPIN)
         NUMA=VRT(IRREPA,ISPIN)
         NUMI=POP(IRREPI,ISPIN)
         NROW=DISSYZ*NUMA
         NCOL=NUMI
         NSUM=NUME
         IF (NSUM.NE.0) THEN
          CALL XGEMM('N','N',NROW,NCOL,NSUM,FACT*ONEM,ICORE(IOFFW),NROW,
     &               ICORE(IOFFT),NSUM,ZILCH,ICORE(IOFFZ),NROW)
         ELSE
          CALL ZERO(ICORE(IOFFZ),NROW*NCOL)
         END IF
         IOFFW=IOFFW+IINTFP*NROW*NSUM
         IOFFT=IOFFT+IINTFP*NSUM*NCOL
         IOFFZ=IOFFZ+IINTFP*NROW*NCOL 
320     CONTINUE
        CALL SYMTR1(IRREPDO,VRT(1,ISPIN),POP(1,ISPIN),DISSYZ,
     &              ICORE(I020),ICORE(ITMP1),ICORE(ITMP2),
     &              ICORE(ITMP3))
        CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPDO,LISTZ)
        CALL SAXPY (DISSYZ*NUMDSZ,ONE,ICORE(I010),1,ICORE(I020),1)
        CALL PUTLST(ICORE(I020),1,NUMDSZ,1,IRREPDO,LISTZ)
310    CONTINUE
C
300   CONTINUE
C
      RETURN
      END
