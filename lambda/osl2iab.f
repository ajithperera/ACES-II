      SUBROUTINE OSL2IAB(L,T,T1,G,ISPIN,VRTT1,VRTL1,VRTL2,POPT1,POPT2,
     $   NVRTSQ,
     $   DISSYW,DISSYT,NUMSYW,NUMSYT,LISTL,LISTT,IRREP,TMP,FACT,STRING)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 STRING
      DOUBLE PRECISION L
      INTEGER DISSYT,DISSYW,DIRPRD,VRTT1,VRTL1,VRTL2,POPT1,POPT2
      DIMENSION L(NUMSYW,DISSYW),T(NUMSYT,DISSYT),G(NVRTSQ)
      DIMENSION T1(DISSYW,NUMSYW),TMP(*)
      DIMENSION VRTT1(8),VRTL1(8),VRTL2(8),POPT1(8),POPT2(8)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),DIRPRD(8,8)
C
      DATA ONE,ONEM,TWO,HALF /1.0D0,-1.0D0,2.0D0,0.5D0/
C
       CALL FSGET(T1,1,NUMSYW,2,IRREP,LISTL,'IIII')
       CALL TRANSP(T1,L,NUMSYW,DISSYW)
C
       CALL FSGET(T,1,NUMSYT,1,IRREP,LISTT,STRING)
       CALL TRANSP(T,T1,NUMSYT,DISSYT)
C
      IF(ISPIN.EQ.2) THEN
         CALL SYMTR1(IRREP,VRTL1,VRTL2,NUMSYW,L,TMP,TMP(1+NUMSYW),
     &      TMP(1+2*NUMSYW))
      ENDIF
      CALL SYMTRA2(IRREP,POPT1,POPT2,NUMSYT,DISSYT,T1,T)
C
      IOFF=1
      JOFFT=1
      JOFFL=1
      DO 90 IRREPI=1,NIRREP
C          
         NVRTL=VRTL1(IRREPI)
         NVRTT=VRTT1(IRREPI)
C     
         IRREPJ=DIRPRD(IRREP,IRREPI)
         NVRTJ=VRTL2(IRREPJ)
C
         IF(MIN(NVRTJ,NVRTT,NVRTL).NE.0) THEN
            CALL XGEMM('T','N',NVRTT,NVRTL,NUMSYW*NVRTJ,FACT,
     &         T(1,JOFFT),NVRTJ*NUMSYW,L(1,JOFFL),
     &         NVRTJ*NUMSYW,ONE,G(IOFF),NVRTT)
         ENDIF
C
         JOFFL=JOFFL+NVRTJ*NVRTL
         JOFFT=JOFFT+NVRTJ*NVRTT
         IOFF=IOFF+NVRTT*NVRTL
 90   CONTINUE
C
      RETURN
      END
