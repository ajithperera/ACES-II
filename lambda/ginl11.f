      SUBROUTINE GINL11(LIA,GOO,ICORE,MAXCOR,IUHF)
C
C THIS SUBROUTINE CALCULATES THE L(AI) CONTRIBUTION 
C DUE TO THE OCCUPIED-OCCUPIED BLOCK OF THE G INTERMEDIATE
C
C      X(AI)= - SUM M,N <OI//NA> G(ON)
C
C THIS ROUTINE USES EXPLICITELY SYMMETRY
C
CEND
C
C  CODED SEPTEMBER/90
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DOUBLE PRECISION LIA
      INTEGER DIRPRD,DISSYW,POP,VRT
      DIMENSION LIA(1),GOO(1),ICORE(MAXCOR)
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF1BB,NF2AA,NF2BB
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      MXCOR=MAXCOR 
C
      DO 1000 ISPIN=1,IUHF+1
C
       IF(ISPIN.EQ.1) THEN
        IOFFX=1
        IOFFDA=1
        IOFFDB=1+NF1AA*IUHF
       ELSE
        IOFFX=1+NTAA
        IOFFDA=1+NF1AA
        IOFFDB=1
       ENDIF
C
C  FIRST DO AAAA PART
C
       LISTW=6+ISPIN
C
       DO 100 IRREP=1,NIRREP
C
        NOCCSQ=0
        DO 101 IRREPJ=1,NIRREP
         NOCCSQ=NOCCSQ+POP(IRREPJ,ISPIN)*POP(DIRPRD(IRREP,IRREPJ),ISPIN)
101     CONTINUE
C
        NUMSYW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
C
        I001=1
        I002=I001+IINTFP*NOCCSQ*NUMSYW
        IF(I002.LT.MXCOR) THEN
C
         CALL LIA1AA(ICORE(I001),GOO(IOFFDA),LIA(IOFFX),ISPIN,
     &               POP(1,ISPIN),VRT(1,ISPIN),DISSYW,NUMSYW,
     &               NOCCSQ,LISTW,IRREP)
        ELSE   
         STOP 'LIA1AA'
        ENDIF
100    CONTINUE
C
C 
       LISTW=8+ISPIN
       IF(IUHF.EQ.0) LISTW=10
C
       DO 200 IRREP=1,NIRREP
C
        NUMSYW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
C
        I001=1
        I002=I001+IINTFP*NUMSYW*DISSYW
        IF(I002.LT.MXCOR) THEN
C
         CALL LIA1AB(ICORE(I001),GOO(IOFFDB),LIA(IOFFX),ISPIN,
     &               POP(1,ISPIN),VRT(1,ISPIN),POP(1,3-ISPIN),
     &               VRT(1,3-ISPIN),DISSYW,NUMSYW,LISTW,IRREP,IUHF)
        ELSE
         STOP 'LIA1AB'
        ENDIF
200    CONTINUE
1000  CONTINUE
      RETURN
      END
