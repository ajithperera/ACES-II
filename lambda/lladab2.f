      SUBROUTINE LLADAB2(W,T,Z,MAXSIZE,DISSYW,NUMSYW,DISSYT,
     &                   NUMSYT,LISTW,LISTT,ITYPE,IRREP,CC,CCSD)
C
C THIS ROUTINE FORMS THE AB PARTICLE-PARTICLE LADDER CONTRACTION
C FOR THE CC LAMBDA EQUATIONS IN CASES WHERE AN RHF REFERENCE IS USED
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYT,DISSYW,DISREAD,DISLEFT,DISMAX,DIRPRD
      INTEGER POP,VRT
      LOGICAL CC,CCSD
C
      DIMENSION W(DISSYW,NUMSYW),T(DISSYT,NUMSYT)
      DIMENSION Z(DISSYT,NUMSYT)
C
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/FLAGS/IFLAGS(100)
C
      DATA ZILCH,ONE /0.D0,1.0D0/
C
C PICK UP THE RELEVANT T2 AND W PIECES.
C
      CALL GETLST(T,1,NUMSYT,1,IRREP,LISTT)
C
C  CAN WE DO IT IN CORE ?
C
      IF(MAXSIZE.GE.DISSYW*NUMSYW) THEN
C
C  IN CORE
C
       CALL GETLST(W,1,NUMSYW,2,IRREP,LISTW)
C
C COMPUTE THE LADDER CONTRIBUTION.
C
       CALL XGEMM('N','N',DISSYW,NUMSYT,DISSYT,ONE,W,DISSYW,
     &            T,DISSYT,ZILCH,Z,DISSYW)

CSSS       call checksum("ZABEF",Z, DISSYT*NUMSYT)
C
      ELSE
C
C  WE HAVE TO DO IT OUT OF CORE
C
       CALL ZERO(Z,NUMSYT*DISSYT)
C
       DISMAX=MAXSIZE/DISSYW
       IOFFSET=1
       DISLEFT=NUMSYW
10     CONTINUE
       DISREAD=MIN(DISMAX,DISLEFT)
       DISLEFT=DISLEFT-DISREAD
       CALL GETLST(W,IOFFSET,DISREAD,2,IRREP,LISTW)
C
C  COMPUTE NOW THE LADDER CONTRIBUTION
C 
       IF(ITYPE.EQ.6.AND.ISYTYP(1,233).NE.5) THEN
        CALL XGEMM('T','N',DISREAD,NUMSYT,DISSYW,ONE,W,DISSYW,
     &             T,DISSYT,ONE,Z(IOFFSET,1),DISSYT)
       ELSEIF(ITYPE.EQ.6.AND.ISYTYP(1,233).EQ.5) THEN
        CALL XGEMM('N','N',DISSYW,NUMSYT,DISREAD,ONE,W,DISSYW,
     &             T(IOFFSET,1),DISSYT,ONE,Z,DISSYW)
       ENDIF
       IOFFSET=IOFFSET+DISREAD
       IF(DISLEFT.NE.0) GO TO 10
      ENDIF
C
      IF(ISYTYP(1,233).EQ.5)THEN
       CALL SYMEXP4(IRREP,VRT(1,1),POP(1,1),DISSYT,DISSYW,
     &              NUMSYT,Z,Z,W)
      ENDIF
C
C NOW WE NEED TO CONTRACT THE LADDER INCREMENT WITH THE T1 AMPLITUDES
C SINCE THIS ACCOUNTS FOR A PIECE OF THE ABCI INTERMEDIATE WHICH IS NOT
C CALCULATED FOR CCSD.
C
      IF(CCSD)THEN
       IF(IFLAGS(3).NE.2) THEN
        CALL SCOPY(DISSYT*NUMSYT,Z,1,W,1)
        I000=1
        I010=I000+MAX(NT(1),DISSYT,NUMSYT)
        I020=I010+MAX(NT(1),DISSYT,NUMSYT)
        CALL SPINAD1(IRREP,POP(1,1),DISSYT,W,T(I000,1),T(I010,1))
        CALL GETLST (T(I000,1),1,1,1,1,90)
        CALL GETLST (T(I010,1),1,1,1,3,90)
        CALL DOT24(IRREP,T(I010,1),T(I000,1),W,T(I020,1),DISSYT,
     &             VRT(1,1),POP(1,1),
     &             VRT(1,1),VRT(1,1),POP(1,1),POP(1,1),
     &             'STST')
        CALL PUTLST (T(I010,1),1,1,1,3,90)   
       ENDIF
      ENDIF
C
C AUGMENT T2 INCREMENT.
C
      CALL SUMSYM2(Z,T,NUMSYT*DISSYT,1,IRREP,63)
      RETURN
      END
