      SUBROUTINE OSL1II1(ICORE,MAXCOR,IUHF,W)
C
C  THIS ROUTINE COMPUTES:
C
C     L1INC(A,I)= W [ SUM(X) TERMXA ]  (ISPIN=1)
C
C     L1INC(a,i)= W [ SUM(X) TERMXB ]  (ISPIN=2)
C
C  WHERE TARGET INDECES ARE NORMAL
C
C  WITH
C
C     TERM1A  = - SUM(j) T2(Nm,Mj) * L2(NA,JI)
C               - SUM(J) T2(Nm,Jn) * L2(Am,Ij)
C     TERM1B  = - SUM(J) T2(Nm,Jn) * L2(am,ij)
C               - SUM(j) T2(Nm,Mj) * L2(Na,Ji)
C     TERM2A  = + SUM(b) T2(Nb,Mn) * L2(BA,MI)
C               + SUM(B) T2(Bm,Mn) * L2(Ab,In)
C     TERM2B  = + SUM(B) T2(Bm,Mn) * L2(ab,in)
C               + SUM(b) T2(Nb,Mn) * L2(Ba,Mi)
C     TERM3A  = - SUM(bj) K1(b,j) * L2(AB,IJ)
C               - SUM(BJ) K1(B,J) * L2(Ab,Ij)
C     TERM3B  = - SUM(BJ) K1(B,J) * L2(ba,ji)
C               - SUM(bj) K1(b,j) * L2(Ba,Ji)
C  WHERE:
C
C     K1(B,J) = T2(Nm,Jn) * T1(B,M) + T2(Bm,Mn) * T1(N,J)
C     K1(b,j) = T2(Nm,Mj) * T1(b,n) + T2(bN,Mn) * T1(m,j)
C
C
CEND
C
C CODED PS SEP/93
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYL,DISSYT,POP,VRT,DISSYT2,DISSYL2
      CHARACTER*4 STRING
C
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0(2),NSTAR(2)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
C
      INTEGER POPA,POPI,VRTA,VRTI
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      INTEGER FSDPDAN,FSDPDNA,FSDPDAA,FSDPDIN,FSDPDNI,FSDPDII,FSDPDAI,
     $   FSDPDIA
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
C
      COMMON /ACTIRR/ IRREPO(2),IRREPV(2)
C
      COMMON /FLAGS/ IFLAGS(100)
C
      DATA ONE,ONEM,ZILCH,HALF/1.D0,-1.D0,0.D0,0.5D0/
C
      FACT=ONE
      NSTAR(1)=NT(1)
      NSTAR(2)=NT(2)
      IF((NSTAR(1).EQ.0).AND.(NSTAR(2).EQ.0)) RETURN
C
C     FIRST CALCULATE THE K INTERMEDIATES
C
      IOFF=1
      DO 100 ISPIN=1,IUHF+1
         NSIZT=NTII(ISPIN)
         I0(ISPIN)=IOFF
         IOFF=IOFF+NSIZT*IINTFP
         CALL ZERO(ICORE(I0(ISPIN)),NSIZT)
C
C        FIRST CONTRIBUTION TO K
C
         LISTT=46
         NSIZT1=NTAI(3-ISPIN)
         NSIZT2=NTIA(ISPIN)
         IRREP=DIRPRD(IRREPV(ISPIN),IRREPV(3-ISPIN))
C
C     I0(1):  K1A   I0(2):   K1B    I010:  T2    I020:  T1
C
         I010=IOFF
         I020=I010+NSIZT1*IINTFP
C
         IF(ISPIN.EQ.1) THEN
            CALL FSGET(ICORE(I010),1,NSIZT1,1,IRREP,LISTT,'AAIA')
         ELSE
            CALL FSGET(ICORE(I010),1,NSIZT1,1,IRREP,LISTT,'AAAI')
         ENDIF
         CALL FSGETT1(ICORE(I020),ISPIN,90,'IA',8+ISPIN)
C
         CALL OSTAU35(ICORE(I0(ISPIN)),NSIZT,1,ICORE(I020),NSIZT2,
     $        IRREPO(ISPIN),VRTI(1,ISPIN),ICORE(I010),NSIZT1,
     $        IRREPO(ISPIN),POPI(1,ISPIN),ONE,ZILCH)
C
C
C        SECOND CONTRIBUTION TO K
C
         LISTT=46
         NSIZT1=NTIA(3-ISPIN)
         NSIZT2=NTAI(ISPIN)
         IRREP=DIRPRD(IRREPO(ISPIN),IRREPO(3-ISPIN))
C
C     I0(1):  K1A   I0(2):   K1B    I010:  T2    I020:  T1
C
         I020=I010+NSIZT1*IINTFP
C
         IF(ISPIN.EQ.1) THEN
            CALL FSGET(ICORE(I010),1,1,1,IRREP,LISTT,'IAAA')
         ELSE
            CALL FSGET(ICORE(I010),1,1,1,IRREP,LISTT,'AIAA')
         ENDIF
         CALL FSGETT1(ICORE(I020),ISPIN,90,'AI',8+ISPIN)
C
         CALL OSTAU35(ICORE(I0(ISPIN)),NSIZT,1,ICORE(I010),NSIZT1,
     $        IRREPV(ISPIN),VRTI(1,ISPIN),ICORE(I020),NSIZT2,
     $        IRREPV(ISPIN),POPI(1,ISPIN),ONE,ONE)
C
100   CONTINUE
C
C    NOW THE MAIN CALCULATION
C
      DO 1000 ISPIN=1,IUHF+1
C
         NSIZTAR=NSTAR(ISPIN)
         IF(NSIZTAR.EQ.0) GOTO 1000
C
C     I000: L1(CONT)
C
         I000=IOFF
         I010=I000+NSIZTAR*IINTFP
         CALL ZERO(ICORE(I000),NSIZTAR)
C
C     FIRST TERM
C
C     AA AND BB SPINCASE
C
         LISTT=46
         LISTL=133+ISPIN
C
         IRREP=DIRPRD(IRREPV(ISPIN),IRREPV(3-ISPIN))
C
         DISSYL=FSDPDAI(1,ISYTYP(1,LISTL))
         NUMSYL=IRPDPD(1,ISYTYP(2,LISTL))
         DISSYT=FSDPDAA(IRREP,ISYTYP(1,LISTT))
         IF(ISPIN.EQ.1) THEN
            NUMSYT=FSDPDAI(IRREP,ISYTYP(2,LISTT))
            STRING='AAAI'
         ELSE
            NUMSYT=FSDPDIA(IRREP,ISYTYP(2,LISTT))
            STRING='AAIA'
         ENDIF
         IF(NSIZTAR.NE.NUMSYL.OR.DISSYL.NE.NUMSYT) THEN
            WRITE(6,*)'@OSL21II1-E FATAL ERROR: NSIZTAR.NE.NUMSYL',
     $           NSIZTAR,NUMSYL,' OR DISSYL.NE.NUMSYT',DISSYL,NUMSYT
            CALL ERREX
         ENDIF
C
C     I000: L1(CONT)  I010: L2   I020: T2
C
         I020=I010+IINTFP*NUMSYL*DISSYL
         I030=I020+IINTFP*NUMSYT*DISSYT
         IF(I030.GT.MAXCOR) CALL INSMEM('OSL1II1',I030,MAXCOR)
C
         CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTT,STRING)
         CALL FSGET(ICORE(I010),1,NUMSYL,1,1,LISTL,'AINN')
C
         CALL XGEMM('N','N',1,NUMSYL,DISSYL,ONE,ICORE(I020),DISSYT,
     $        ICORE(I010),DISSYL,ONE,ICORE(I000),1)
C
C     AB SPINCASE
C
         LISTT=46
         LISTL=135+ISPIN
C
         IRREP=DIRPRD(IRREPV(ISPIN),IRREPV(3-ISPIN))
C
C
         DISSYL=FSDPDAI(1,ISYTYP(1,LISTL))
         NUMSYL=IRPDPD(1,ISYTYP(2,LISTL))
         DISSYT=FSDPDAA(IRREP,ISYTYP(1,LISTT))
         IF(ISPIN.EQ.1) THEN
            NUMSYT=FSDPDIA(IRREP,ISYTYP(2,LISTT))
            STRING='AAIA'
         ELSE
            NUMSYT=FSDPDAI(IRREP,ISYTYP(2,LISTT))
            STRING='AAAI'
         ENDIF
         IF(NSIZTAR.NE.NUMSYL.OR.DISSYL.NE.NUMSYT) THEN
            WRITE(6,*)'@OSL21II1-E FATAL ERROR: NSIZTAR.NE.NUMSYL',
     $           NSIZTAR,NUMSYL,' OR DISSYL.NE.NUMSYT',DISSYL,NUMSYT
            CALL ERREX
         ENDIF
C
C     I000: L2(CONT)  I010: L2   I020:  T2
C
         I020=I010+IINTFP*NUMSYL*DISSYL
         I030=I020+IINTFP*NUMSYT*DISSYT
         IF(I030.GT.MAXCOR) CALL INSMEM('OSL1II1',I030,MAXCOR)
C
         CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTT,STRING)
         CALL FSGET(ICORE(I010),1,NUMSYL,1,1,LISTL,'AINN')
C
         CALL XGEMM('N','N',1,NUMSYL,DISSYL,ONEM,ICORE(I020),DISSYT,
     $        ICORE(I010),DISSYL,ONE,ICORE(I000),1)
C
C     SECOND TERM
C
C     AA AND BB SPINCASE
C
         LISTT=46
         LISTL=133+ISPIN
C
         IRREP=DIRPRD(IRREPO(ISPIN),IRREPO(3-ISPIN))
C
         DISSYL=FSDPDIA(1,ISYTYP(1,LISTL))
         NUMSYL=IRPDPD(1,ISYTYP(2,LISTL))
         NUMSYT=FSDPDAA(IRREP,ISYTYP(2,LISTT))
         IF(ISPIN.EQ.1) THEN
            DISSYT=FSDPDAI(IRREP,ISYTYP(1,LISTT))
            STRING='AIAA'
         ELSE
            DISSYT=FSDPDIA(IRREP,ISYTYP(1,LISTT))
            STRING='IAAA'
         ENDIF
         IF(NSIZTAR.NE.NUMSYL.OR.DISSYL.NE.DISSYT) THEN
            WRITE(6,*)'@OSL21II1-E FATAL ERROR: NSIZTAR.NE.NUMSYL',
     $           NSIZTAR,NUMSYL,' OR DISSYL.NE.DISSYT',DISSYL,DISSYT
            CALL ERREX
         ENDIF
C
C     I000: L1(CONT)  I010: L2   I020: T2
C
         I020=I010+IINTFP*NUMSYL*DISSYL
         I030=I020+IINTFP*NUMSYT*DISSYT
         IF(I030.GT.MAXCOR) CALL INSMEM('OSL1II1',I030,MAXCOR)
C
         CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTT,STRING)
         CALL FSGET(ICORE(I010),1,NUMSYL,1,1,LISTL,'IANN')
C
         CALL XGEMM('T','N',1,NUMSYL,DISSYL,ONEM,ICORE(I020),DISSYT,
     $        ICORE(I010),DISSYL,ONE,ICORE(I000),1)
C
C     AB SPINCASE
C
         LISTT=46
         LISTL=135+ISPIN
C
         IRREP=DIRPRD(IRREPO(ISPIN),IRREPO(3-ISPIN))
C
         DISSYL=FSDPDIA(1,ISYTYP(1,LISTL))
         NUMSYL=IRPDPD(1,ISYTYP(2,LISTL))
         NUMSYT=FSDPDAA(IRREP,ISYTYP(2,LISTT))
         IF(ISPIN.EQ.1) THEN
            DISSYT=FSDPDIA(IRREP,ISYTYP(1,LISTT))
            STRING='IAAA'
         ELSE
            DISSYT=FSDPDAI(IRREP,ISYTYP(1,LISTT))
            STRING='AIAA'
         ENDIF
         IF(NSIZTAR.NE.NUMSYL.OR.DISSYL.NE.DISSYT) THEN
            WRITE(6,*)'@OSL21II1-E FATAL ERROR: NSIZTAR.NE.NUMSYL',
     $           NSIZTAR,NUMSYL,' OR DISSYL.NE.DISSYT',DISSYL,DISSYT
            CALL ERREX
         ENDIF
C
C     I000: L2(CONT)  I010: L2   I020:  T2
C
         I020=I010+IINTFP*NUMSYL*DISSYL
         I030=I020+IINTFP*NUMSYT*DISSYT
         IF(I030.GT.MAXCOR) CALL INSMEM('OSL1II1',I030,MAXCOR)
C
         CALL FSGET(ICORE(I020),1,NUMSYT,1,IRREP,LISTT,STRING)
         CALL FSGET(ICORE(I010),1,NUMSYL,1,1,LISTL,'IANN')
C
         CALL XGEMM('T','N',1,NUMSYL,DISSYL,ONE,ICORE(I020),DISSYT,
     $        ICORE(I010),DISSYL,ONE,ICORE(I000),1)
C
C     THIRD TERM
C
C     AA AND BB SPINCASE
C
         LISTL=133+ISPIN
C
         DISSYL=FSDPDII(1,ISYTYP(1,LISTL))
         NUMSYL=IRPDPD(1,ISYTYP(2,LISTL))
         NSIZT=NTII(3-ISPIN)
C
         IF(NSIZTAR.NE.NUMSYL.OR.DISSYL.NE.NSIZT) THEN
            WRITE(6,*)'@OSL21II1-E FATAL ERROR: NSIZTAR.NE.NUMSYL',
     $           NSIZTAR,NUMSYL,' OR DISSYL.NE.NSIZT',DISSYL,NSIZT
            CALL ERREX
         ENDIF
C
C     I0(1):  K1A   I0(2)   K1B   I000: L1(CONT)  I010: L2
C
         I020=I010+IINTFP*NUMSYL*DISSYL
C
         CALL FSGET(ICORE(I010),1,NUMSYL,1,1,LISTL,'IINN')
C
         CALL XGEMM('N','N',1,NUMSYL,DISSYL,ONE,ICORE(I0(3-ISPIN)),1,
     $        ICORE(I010),DISSYL,ONE,ICORE(I000),1)
C
C     AB SPINCASE
C
         LISTL=135+ISPIN
C
         DISSYL=FSDPDII(1,ISYTYP(1,LISTL))
         NUMSYL=IRPDPD(1,ISYTYP(2,LISTL))
         NSIZT=NTII(ISPIN)
C
         IF(NSIZTAR.NE.NUMSYL.OR.DISSYL.NE.NSIZT) THEN
            WRITE(6,*)'@OSL21II1-E FATAL ERROR: NSIZTAR.NE.NUMSYL',
     $           NSIZTAR,NUMSYL,' OR DISSYL.NE.NSIZT',DISSYL,NSIZT
            CALL ERREX
         ENDIF
C
C     I0(1):  K1A   I0(2):  K1B   I000: L2(CONT)  I010: L2
C
         I020=I010+IINTFP*NUMSYL*DISSYL
C
         CALL FSGET(ICORE(I010),1,NUMSYL,1,1,LISTL,'IINN')
C
         CALL XGEMM('N','N',1,NUMSYL,DISSYL,ONEM,ICORE(I0(ISPIN)),1,
     $        ICORE(I010),DISSYL,ONE,ICORE(I000),1)
C
C     SCALE BY W
C
C     I000: L1(CONT)    I010: L1(TARGET)
C
         CALL GETLST(ICORE(I010),1,1,1,ISPIN+2,90)
         CALL SAXPY(NSIZTAR,W,ICORE(I000),1,ICORE(I010),1)
         CALL PUTLST(ICORE(I010),1,1,1,ISPIN+2,90)
C
 1000 CONTINUE
      RETURN
      END
