      SUBROUTINE ROHFENG(ICORE,MAXCOR,ET1F,ETAU,NLIST2,NLIST1,IORDR,
     &                   IUHF)
C
C  DRIVER FOR THE CALCULATION OF THE CORRELATION ENERGY FOR A GIVEN SET
C  OF AMPLITUDES WHICH IS USED IN ROHF PERTURBATION THEORY CALCULATIONS
C 
C  ARGUMENTS :  ICORE ..... ICORE ARRAY
C               MAXCOR .... DIMENSION OF ICORE
C               ET1F ......
C               ETAU ......   
C               NLIST2 .... OFFSET OF T2 LIST ON MOINTS (WITH RESPECT TO
C                            TYPE)
C               NLIST1 .... OFFSET OF T1 LISTS ON MOINTS (WITH RESPECT TO
C                            SPIN TYPE) FOR F-T1 PIECE
C               ECORR ..... RETURNS THE CORRELATION ENERGY FOR ALL SPIN CASES
C               IORDR .....
C               IUHF .....  IUHF FLAG
C
CEND
      IMPLICIT INTEGER (A-Z)
      LOGICAL NONHF,dotau
      LOGICAL MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,UCC
      CHARACTER*2 SPCASE(3)
      DOUBLE PRECISION E,ETOT,FACTOR,ECORR(3),ESPIN,ET2,ETOTT2,
     &                 ESING,SDOT,ET1F,etau,ESCF
C
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0T(2),I0F(2)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/FLAGS/IFLAGS(100)
      COMMON/SWITCH/MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &              QCISD,UCC
      COMMON/NHFREF/NONHF
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      EQUIVALENCE (IFLAGS(2),METHOD)
C
      DATA SPCASE /'AA','BB','AB'/
C
      MXCOR=MAXCOR
C
C ALLOCATE MEMORY FOR T1 AMPLITUDES
C
      I0T(1)=MXCOR+1-NT(1)*IINTFP
      MXCOR=MXCOR-NT(1)*IINTFP
      CALL GETLST(ICORE(I0T(1)),1,1,1,1+NLIST1,90)
      IF(IUHF.EQ.0) THEN
       I0T(2)=I0T(1)
      ELSE
       I0T(2)=I0T(1)-NT(2)*IINTFP
       MXCOR=MXCOR-NT(2)*IINTFP
       CALL GETLST(ICORE(I0T(2)),1,1,1,2+NLIST1,90)
      ENDIF
C
C   ALLOCATE MEMORY FOR f(a,I)
C
      I0F(1)=I0T(2)-NT(1)*IINTFP
      MXCOR=MXCOR-NT(1)*IINTFP
      CALL GETLST(ICORE(I0F(1)),1,1,1,3,93)
      IF(IUHF.EQ.0) THEN  
       I0F(2)=I0F(1)
      ELSE
       I0F(2)=I0F(1)-NT(2)*IINTFP
       MXCOR=MXCOR-NT(2)*IINTFP
       CALL GETLST(ICORE(I0F(2)),1,1,1,4,93)
      ENDIF
C
      ET1F=0.0D0
      ET2W=0.0D0
      ET12W=0.0D0
      ETOT=0.D0
      ETAU=0.D0
      ETOTT2=0.D0
      FACTOR=1.D0
      IF(IUHF.EQ.0)FACTOR=2.D0
      DO 10 ISPIN=1,IUHF+1
       LISTT=43+ISPIN
       ESPIN=0.D0
C
C  COMPUTE THE F-T1 PIECE
C
       ESING=SDOT(NT(ISPIN),ICORE(I0T(ISPIN)),1,ICORE(I0F(ISPIN)),1)
       ESPIN=ESPIN+ESING
       ETOT=ETOT+FACTOR*ESING
       ET1F=ET1F+FACTOR*ESING
C
C  COMPUTE THE T2-W PIECE
C
       DOTAU=.FALSE.
       DO 100 IRREP=1,NIRREP
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
        IF(MIN(NUMSYT,DISSYT).NE.0) THEN
        I001=1
        I002=I001+IINTFP*NUMSYT*DISSYT
        I003=I002+IINTFP*NUMSYT*DISSYT
        I004=I003+NUMSYT
        IF(IORDR.EQ.3) THEN
          CALL GETLST(ICORE(I0T(ISPIN)),1,1,1,ISPIN,90)
          DOTAU=.TRUE.
        ELSE
          CALL IZERO(ICORE(I0T(ISPIN)),NT(ISPIN)*IINTFP)
        ENDIF
        IF(I004.LT.MXCOR) THEN
         CALL TENER(NLIST2,ET2,E,NUMSYT,DISSYT,ICORE(I001),
     &             ICORE(I002),ICORE(I0T(ISPIN)),ICORE(I0T(ISPIN)),
     &             ISPIN,DOTAU,IRREP,POP(1,ISPIN),POP(1,ISPIN),
     &             VRT(1,ISPIN),VRT(1,ISPIN),ICORE(I003))
        ELSE
         CALL INSMEM('ROHFENG',I004,MXCOR)
        ENDIF
        ETOTT2=ETOTT2+FACTOR*ET2
        ETOT=ETOT+FACTOR*E
        ETAU=ETAU+FACTOR*E
        ESPIN=ESPIN+E
        ENDIF
100    CONTINUE
       ECORR(ISPIN)=ESPIN
10    CONTINUE
C
C  THE T2(Ij,Ab) <Ij//Ab> CONTRIBUTION TO THE ENERGY (SPIN CASE AB)
C
      DOTAU=.FALSE.
      ESPIN=0.D0
      DO 200 IRREP=1,NIRREP
       DISSYT=IRPDPD(IRREP,ISYTYP(1,46))
       NUMSYT=IRPDPD(IRREP,ISYTYP(2,46))
       IF(MIN(NUMSYT,DISSYT).NE.0) THEN
        I001=1
        I002=I001+IINTFP*NUMSYT*DISSYT
        I003=I002+IINTFP*NUMSYT*DISSYT
        I004=I003+NUMSYT
        IF(IORDR.EQ.3) THEN
         DOTAU=.TRUE.
        ELSE
          CALL IZERO(ICORE(I0T(1)),NT(1))
          CALL IZERO(ICORE(I0T(2)),NT(2))
        ENDIF
        IF(I004.LT.MXCOR) THEN
         CALL TENER(NLIST2,ET2,E,NUMSYT,DISSYT,ICORE(I001),
     &              ICORE(I002),ICORE(I0T(1)),ICORE(I0T(2)),3,DOTAU,
     &              IRREP,POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),
     &              ICORE(I003))
        ELSE
         CALL INSMEM('ROHFENG',I004,MXCOR)
        ENDIF
        ETOTT2=ETOTT2+ET2
        ETOT=ETOT+E
        ETAU=ETAU+E
        ESPIN=ESPIN+E
       ENDIF
200   CONTINUE
      ECORR(3)=ESPIN
      WRITE(6,81)ETOT
81    FORMAT(T3,' The total correlation energy is ',F15.12,' a.u.')

C Write the total energy to JOBARC. Needs in ROHF-EOM-MBPT(2) (rarley
C done) calcs. Ajith Perera, 05/2018.

      CALL GETREC(20,'JOBARC','SCFENEG ',IINTFP,ESCF)
      CALL PUTREC(1,'JOBARC','TOTENERG',IINTFP,ETOT+ESCF)
      Write(6,*)
      Write(6,82) ETOT+ESCF
82    FORMAT(T3,' The total ROHF-MBPT(2) energy is ',F20.12,' a.u.')

      RETURN
      END
