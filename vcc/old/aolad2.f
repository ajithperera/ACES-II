      SUBROUTINE AOLAD2(ICORE,MAXCOR,IUHF,TAU,IRREPX,LSTAO,LSTAOINC)
C
C DRIVER FOR AO-BASED PARTICLE-PARTICLE LADDER CONTRACTION.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION X,SNRM2,SDOT,ABLAD,ZILCH,ONE
      LOGICAL TAU,INCORE
      CHARACTER*2 SPLAB(3)
      CHARACTER*80 FNAME
      DIMENSION ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/AOSYM/IAOPOP(8),IOFFAO(8),IOFFV(8,2),IOFFO(8,2),
     &             IRPDPDAO(8),IRPDPDAOS(8),ISTART(8,8),ISTARTMO(8,3)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/INFO/NOCCO(2),NVRTO(2)
C
      DATA ZILCH,ONE /0.0D0,1.0D0/
      DATA SPLAB /'AA','BB','AB'/
C
      NNM1O2(I)=(I*(I-1))/2
C
      IONE=1
      LUINT=10
      NMO=NOCCO(1)+NVRTO(1)
      CALL GETREC(20,'JOBARC','NBASTOT ',IONE,NAO)
      CALL GETAOINF(IUHF,IRREPX)
      ILNBUF=600
C
C CALCULATE TOTAL NUMBER OF DISTRIBUTIONS FOR T2 VECTOR
C
      NSIZET=0
      DO 1 ISPIN=3,3-2*IUHF,-1
       DO 2 IRREPIJ=1,NIRREP
        IRREPAB=DIRPRD(IRREPIJ,IRREPX)
        NSIZET=NSIZET+IRPDPD(IRREPIJ,ISYTYP(2,43+ISPIN))
     &               *IRPDPDAO(IRREPAB)
2      CONTINUE
1     CONTINUE
C
      I000=1
C      I010=I000+ISIZT2MIX*IINTFP
C      I020=I010+ISIZT2MIX*IINTFP
      I010=I000+MAX(NT(1),NT(2),ILNBUF,NAO*NMO)*IINTFP
      I020=I010+MAX(NT(1),NT(2),ILNBUF,NAO*NMO*IINTFP)
      I030=I020+ILNBUF*8
      I040=I030+ILNBUF*8
      I050=I040+ILNBUF*8
      I060=I050+ILNBUF*8
      I070=I060+ILNBUF*8
      I080=I070+ILNBUF*8
      I090=I080+ILNBUF*IINTFP*8
      I100=I090+ILNBUF*8
      I110=I100+ILNBUF*8
      I120=I110+ILNBUF*8
      I130=I120+MAX(ILNBUF*8,NAO)
      I140=I130+NAO*NAO
      IF(MOD(I140,2).EQ.0) I140=I140+1
C
      J=1
      IOFF=I120
      DO 3 IRREP=1,NIRREP
       DO 4 I=1,IAOPOP(IRREP)
        ICORE(IOFF)=IRREP
        IOFF=IOFF+1
4      CONTINUE
3     CONTINUE
      CALL AOSYMVEC(ICORE(I130),ICORE(I120),NAO)
C
C SEE IF THERE IS SUFFICIENT CORE TO HOLD COMPLETE T2 AND Z 
C VECTORS IN MEMORY.
C
      MXCOR=MAXCOR-I140+1
      IF(MXCOR/IINTFP.GE.NSIZET*2)THEN
       INCORE=.TRUE.
       NSIZE=NSIZET
       I150=I140+NSIZET*IINTFP
       I160=I150+NSIZET*IINTFP
       IOFF=I140
       DO 5 ISPIN=3,3-2*IUHF,-1
        DO 6 IRREPIJ=1,NIRREP
         IRREPAB=DIRPRD(IRREPIJ,IRREPX)
         NUMDIS=IRPDPD(IRREPIJ,ISYTYP(2,43+ISPIN))
         NDSSIZ=IRPDPDAO(IRREPAB)
         CALL GETLST(ICORE(I150),1,NUMDIS,1,IRREPIJ,LSTAO+ISPIN)
         CALL TRANSP(ICORE(I150),ICORE(IOFF),NUMDIS,NDSSIZ)
         IOFF=IOFF+NUMDIS*NDSSIZ*IINTFP
6       CONTINUE
5      CONTINUE 
      ELSE
       write(6,*)' multiple passes not coded '
       call errex
      ENDIF
      CALL GFNAME('IIII    ',FNAME,ILENGTH)
      OPEN(UNIT=LUINT,FILE=FNAME(1:ILENGTH),
     &     FORM='UNFORMATTED',STATUS='OLD')
      CALL ZERO(ICORE(I150),NSIZE)
      CALL RDAOIJKL2(ICORE(I140),ICORE(I150),ICORE(I000),ICORE(I010),
     &               ICORE(I020),ICORE(I030),ICORE(I040),ICORE(I050),
     &               ICORE(I060),ICORE(I070),ICORE(I080),ICORE(I090),
     &               ICORE(I100),ICORE(I110),ICORE(I120),
     &               ICORE(I130),ILNBUF,LUINT,IUHF,NAO,
     &               ISIZT2MIX,IRREPX)
      CLOSE(UNIT=LUINT,STATUS='KEEP')
      IF(NIRREP.GT.1)THEN
       CALL GFNAME('IJIJ    ',FNAME,ILENGTH)
       OPEN(UNIT=LUINT,FILE=FNAME(1:ILENGTH),
     &      FORM='UNFORMATTED',STATUS='OLD')
       CALL RDAOIJKL2(ICORE(I140),ICORE(I150),ICORE(I000),ICORE(I010),
     &               ICORE(I020),ICORE(I030),ICORE(I040),ICORE(I050),
     &               ICORE(I060),ICORE(I070),ICORE(I080),ICORE(I090),
     &               ICORE(I100),ICORE(I110),ICORE(I120),
     &               ICORE(I130),ILNBUF,LUINT,IUHF,NAO,
     &               ISIZT2MIX,IRREPX)
       CLOSE(UNIT=LUINT,STATUS='KEEP')
       CALL GFNAME('IIJJ    ',FNAME,ILENGTH)
       OPEN(UNIT=LUINT,FILE=FNAME(1:ILENGTH),
     &      FORM='UNFORMATTED',STATUS='OLD')
       CALL RDAOIJKL2(ICORE(I140),ICORE(I150),ICORE(I000),ICORE(I010),
     &               ICORE(I020),ICORE(I030),ICORE(I040),ICORE(I050),
     &               ICORE(I060),ICORE(I070),ICORE(I080),ICORE(I090),
     &               ICORE(I100),ICORE(I110),ICORE(I120),
     &               ICORE(I130),ILNBUF,LUINT,IUHF,NAO,
     &               ISIZT2MIX,IRREPX)
       CLOSE(UNIT=LUINT,STATUS='KEEP')
       IF(NIRREP.GT.2)THEN
        CALL GFNAME('IJKL    ',FNAME,ILENGTH)
        OPEN(UNIT=LUINT,FILE=FNAME(1:ILENGTH),
     &       FORM='UNFORMATTED',STATUS='OLD')
        CALL RDAOIJKL2(ICORE(I140),ICORE(I150),ICORE(I000),ICORE(I010),
     &                ICORE(I020),ICORE(I030),ICORE(I040),ICORE(I050),
     &                ICORE(I060),ICORE(I070),ICORE(I080),ICORE(I090),
     &                ICORE(I100),ICORE(I110),ICORE(I120),
     &                ICORE(I130),ILNBUF,LUINT,IUHF,NAO,
     &                ISIZT2MIX,IRREPX)
        CLOSE(UNIT=LUINT,STATUS='KEEP')
       ENDIF
      ENDIF
C
      IF(INCORE)THEN
       IOFF=I150
       DO 7 ISPIN=3,3-2*IUHF,-1
        DO 8 IRREPIJ=1,NIRREP
         IRREPAB=DIRPRD(IRREPIJ,IRREPX)
         NUMDIS=IRPDPD(IRREPIJ,ISYTYP(2,43+ISPIN))
         NDSSIZ=IRPDPDAO(IRREPAB)
         IF(IUHF.EQ.0) THEN
          ITMP1=I000
          ITMP2=ITMP1+IINTFP*MAX(NDSSIZ,NUMDIS)
          ITMP3=ITMP2+IINTFP*MAX(NDSSIZ,NUMDIS)
          ITMP4=ITMP3+IINTFP*MAX(NDSSIZ,NUMDIS)
          IF(ITMP4.GT.I140) CALL ERREX
          CALL SYMRHF3(IRREPAB,IRREPIJ,POP(1,1),IAOPOP,NUMDIS,
     &                 ICORE(IOFF),ICORE(ITMP1),ICORE(ITMP2),
     &                 ICORE(ITMP3))
         ENDIF
         CALL TRANSP(ICORE(IOFF),ICORE(I140),NDSSIZ,NUMDIS)
         CALL PUTLST(ICORE(I140),1,NUMDIS,1,IRREPIJ,LSTAOINC+ISPIN)
         IOFF=IOFF+NUMDIS*NDSSIZ*IINTFP
8       CONTINUE
7      CONTINUE 
      ENDIF
C
      RETURN
      END
