      SUBROUTINE GENINT(ICORE,MAXCOR,IUHF,INTPCK)
C
C DRIVER FOR INTERMEDIATE FORMATION.  
C
C   INTPCK = 0  , DUMP PACKED INTEGRALS ONLY FOR W INTERMEDIATES (NO F).
C   INTPCK = 1  , DUMP ONLY QUADRATIC PART OF W INTERMEDIATES AND F.
C   INTPCK = 2  , DUMP FULL W AND F INTERMEDIATES.
C   INTPCK = 3  , DUMP FIRST ORDER W AND F ONLY.
C
CEND
C
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION TCPU,TSYS
      DOUBLE PRECISION C1,C2,C3,C4,FACT
C
      DIMENSION ICORE(MAXCOR)
      LOGICAL MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &                QCISD,LAMBDA,NONHF,ROHF4,ITRFLG,UCC
      EQUIVALENCE (METHOD,IFLAGS(2))
C
      COMMON/SWITCH/ MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &                QCISD,UCC
      COMMON/NHFREF/NONHF
      COMMON/ROHF/ROHF4,ITRFLG
      COMMON/FLAGS/IFLAGS(100)
      COMMON/SYM/POP(8,2),VRT(8,2),NT1AA,NT1BB,NF1AA,NF1BB,
     &           NF2AA,NF2BB
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      EQUIVALENCE(METHOD,IFLAGS(2))
C
C W INTERMEDIATES. SET COEFFICIENTS BASED ON CALCULATION TYPE.
C
      IF(IFLAGS(1).GE.10)THEN
       WRITE(6,100)
100    FORMAT(T3,'@GENINT-I, Calculating intermediates.')
       CALL TIMER(1)
      ENDIF
      IF(INTPCK.EQ.2)THEN
       C1=1.0
       C2=0.0
       C3=0.0
       C4=-0.5
      ELSEIF(INTPCK.EQ.1)THEN
       C1=0.0
       C2=0.0
       C3=0.0
       C4=-0.5 
      ELSEIF(INTPCK.EQ.0.OR.INTPCK.EQ.3)THEN
       C1=1.0
       C2=0.0
       C3=0.0
       C4=0.0
      ENDIF
      FACT=1.D0
      IF(UCC) THEN
        FACT=0.5
        C4=C4*FACT
      ENDIF
C
      IF(METHOD.GT.9.AND.SING1.AND..NOT.QCISD.AND.INTPCK.NE.3)C3=1.0
C
C HOLE-HOLE LADDER INTERMEDIATE.
C
      CALL QUAD1(ICORE,MAXCOR,INTPCK,IUHF,FACT)
C
C RING TYPE W INTERMEDIATES.
C
      DO 333 ILIST=54,59,2-IUHF
       CALL ZERSYM(ICORE,ILIST) 
333   CONTINUE
       INCRF=0
      IF((METHOD.GT.9.AND.SING1.AND.(.NOT.QCISD)).OR.
     &   (ROHF4.AND.INTPCK.NE.0)) THEN
       CALL ZERLST(ICORE,NF2AA,1,1,1,92)
       IF(IUHF.NE.0)CALL ZERLST(ICORE,NF2BB,1,1,2,92)
       LAMBDA=.FALSE.
       CALL T1RING(ICORE,MAXCOR,IUHF,LAMBDA)
       INCRF=1
      ENDIF
      CALL DWMBEJ(ICORE,MAXCOR,'ABAB',IUHF,C1,C2,C3,C4)
      CALL DWMBEJ(ICORE,MAXCOR,'ABBA',IUHF,C1,C2,C3,C4)
      IF(IUHF.EQ.1)THEN
       CALL DWMBEJ(ICORE,MAXCOR,'AAAA',IUHF,C1,C2,C3,C4)
       CALL DWMBEJ(ICORE,MAXCOR,'BBBB',IUHF,C1,C2,C3,C4)
       CALL DWMBEJ(ICORE,MAXCOR,'BABA',IUHF,C1,C2,C3,C4)
       CALL DWMBEJ(ICORE,MAXCOR,'BAAB',IUHF,C1,C2,C3,C4)
      ENDIF
      IF(IFLAGS(1).GE.10)THEN
       CALL TIMER(1)
       WRITE(6,101)TIMENEW
101    FORMAT(T3,'@GENINT-I, W intermediates required ',F9.3,
     &           ' seconds.')
      ENDIF
      IF(ROHF4.AND.INTPCK.EQ.0) RETURN
C
C  DEAL HERE WITH LCC CASES
C
      IF(INTPCK.EQ.3.OR.ROHF4) THEN
       IF(NONHF)THEN
        CALL ZERLST(ICORE,NF1AA,1,1,1,91)
        CALL ZERLST(ICORE,NT1AA,1,1,1,93)
        IF(IUHF.NE.0)THEN
         CALL ZERLST(ICORE,NF1BB,1,1,2,91)
         CALL ZERLST(ICORE,NT1BB,1,1,2,93)
        ENDIF
        IF(ROHF4) THEN
          CALL NHFFINT(ICORE,MAXCOR,IUHF,.TRUE.)
        ELSE
          CALL NHFFINT(ICORE,MAXCOR,IUHF,.FALSE.)
        ENDIF
        IF(.NOT.SING1)THEN
         CALL ZERLST(ICORE,NT1AA,1,1,1,90)
         CALL ZERLST(ICORE,NT1BB,1,1,2,90)
        ENDIF
        IF(.NOT.ROHF4)RETURN
       ELSEIF(SING1)THEN
        CALL ZERLST(ICORE,NF1AA,1,1,1,91)
        CALL ZERLST(ICORE,NF2AA,1,1,1,92)
        CALL ZERLST(ICORE,NT1AA,1,1,1,93)
        IF(IUHF.NE.0)THEN
         CALL ZERLST(ICORE,NF1BB,1,1,2,91)
         CALL ZERLST(ICORE,NF2BB,1,1,2,92)
         CALL ZERLST(ICORE,NT1BB,1,1,2,93)
        ENDIF
       ENDIF
       IF(.NOT.ROHF4)RETURN
      ENDIF
C
C F(AE), F(MI) AND F(ME) INTERMEDIATES.
C
      IF(INTPCK.EQ.0)RETURN
      IF(IFLAGS(1).GE.10)CALL TIMER(1)
C
      IF(ROHF4) THEN
        NINCRF=INCRF
      ELSE
        NINCRF=0
      ENDIF
C
      CALL QUAD2(ICORE,MAXCOR,IUHF,NINCRF,FACT)
      CALL QUAD3(ICORE,MAXCOR,IUHF,INCRF,FACT)
      IF((METHOD.GE.9.AND.SING1).OR.ROHF4)THEN
       CALL MAKFME(ICORE,MAXCOR,IUHF,1)
       IF(IUHF.NE.0)CALL MAKFME(ICORE,MAXCOR,IUHF,2)
      ENDIF
      IF(NONHF.AND..NOT.ROHF4) THEN
        CALL NHFFINT(ICORE,MAXCOR,IUHF,SING1)
      ENDIF
      IF(IFLAGS(1).GE.10)THEN
       CALL TIMER(1)
       WRITE(6,102)TIMENEW
102    FORMAT(T3,'@GENINT-I, F intermediates required ',F9.3,
     &           ' seconds.')
      ENDIF
C
C FOR CCSD METHOD THESE INTERMEDIATES HAVE TO BE MODIFIED BY SOME TERMS
C INCLUDING SINGLE EXCITATIONS
C CALCULATE HERE ALSO THE CORRESPONDING CONTRIBUTION TO THE PARTICLE
C PARTICLE LADDER BUT IN A DIFFERENt WAY TO AVOID MEMORY PROBLEMS AND
C STORING A PARTICLE PARTICLE LADDER INTERMEDIATE ON DISK 
C
      IF((METHOD.GT.9.AND.SING1.AND.(.NOT.QCISD)).OR.ROHF4) THEN
       CALL T1INW2(ICORE,MAXCOR,IUHF)
       CALL T1INW1(ICORE,MAXCOR,IUHF)
      ENDIF
      IF(IFLAGS(1).GE.10)THEN
       CALL TIMER(1)
       WRITE(6,103)TIMENEW
103    FORMAT(T3,'@GENINT-I, additional terms for CCSD required ',F9.3,
     &           ' seconds.')
      ENDIF
      RETURN
      END
