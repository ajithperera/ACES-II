      SUBROUTINE T1INT2B(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE TERM
C
C  SUM E ( <AB||EJ> T(I,E) + <AB||IE> T(J,E)  
C
C USING SYMMETRY ADAPTED INTEGRALS AND AMPLITUDES
C 
C
C IN RHF :
C
C  SUM e <Ab||Ie> T(j,e) + TRANSPOSITION               
C
C IN UHF
C
C  SUM E <AB||EJ> T(I,E) - SUM E <AB||IE> T(J,E)
C
C  SUM e <ab||ej> T(i,e) + SUM e <ab||ie> T(j,e)
C
C  SUM e <Ab|Ie> T(j,e) + SUM E <Ab|Ej> T(I,E)
C
C
C THERE IS AN IN CORE AND OUT CORE ALGORITHMN FOR
C DEALING WITh THE <AB||CI> INTEGRALS
C
CEND
C
C CODED JG JUNE/90
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYWA,DISSYWB,DISSYZ,POP,VRT,DISSYW
      LOGICAL ROHF4,ITRFLG
      DIMENSION ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWO
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/ROHF/ROHF4,ITRFLG
C
      MXCOR=MAXCOR
      I0TA=MXCOR+1-NT(1)*IINTFP
      MXCOR=MXCOR-NT(1)*IINTFP
      IF(IUHF.EQ.0) THEN
       I0TB=I0TA
      ELSE
       I0TB=I0TA-NT(2)*IINTFP
       MXCOR=MXCOR-NT(2)*IINTFP
      ENDIF
      IF(ROHF4.AND..NOT.ITRFLG) THEN
        CALL GETLST(ICORE(I0TA),1,1,1,9,90)
        IF(IUHF.EQ.1) THEN
         CALL GETLST(ICORE(I0TB),1,1,1,10,90)
        ENDIF
      ELSE
        CALL GETLST(ICORE(I0TA),1,1,1,1,90)
        IF(IUHF.EQ.1) THEN
         CALL GETLST(ICORE(I0TB),1,1,1,2,90)
        ENDIF
      ENDIF
C
C     AA AND BB SPIN CASES
C
      IF(IUHF.EQ.1) THEN
C
       DO 100 ISPIN=1,2
C
        IF(ISPIN.EQ.1) THEN
         I000=I0TA
        ELSE
         I000=I0TB
        ENDIF
        NOCC=NOCCO(ISPIN)
        NVRT=NVRTO(ISPIN)
        LISTZ=ISPIN+60
        LISTW=ISPIN+26
C
        DO 50 IRREP=1,NIRREP 
C
C       RETRIEVE T2 AMPLITUDES AND CALCLUATE NEW ONES
C
         NOCCSQ=0 
         DO 45 IRREPJ=1,NIRREP
         IRREPI=DIRPRD(IRREPJ,IRREP)
         NOCCSQ=NOCCSQ+POP(IRREPJ,ISPIN)*POP(IRREPI,ISPIN)
45       CONTINUE
         DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
         DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
         NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
         NUMSYW=IRPDPD(IRREP,ISYTYP(2,LISTW))
         I001=1
         I002=I001+IINTFP*NOCCSQ*DISSYZ
         I003=I002+3*IINTFP*MAX(DISSYW,DISSYZ,NUMSYZ,NUMSYW)
         IF(MIN(NUMSYW,NUMSYZ,DISSYW,DISSYZ).NE.0) THEN
          MAXSIZE=(MXCOR-I003)/IINTFP
          IF(MAXSIZE.GT.NUMSYZ*DISSYZ) THEN
C
C    IN CORE VERSION
C
           CALL T1T2AA2(ICORE(I001),ICORE(I003),ICORE(I003),MAXSIZE,
     &                 ICORE(I000),POP(1,ISPIN),VRT(1,ISPIN),DISSYZ,
     &                 DISSYW,NUMSYZ,NUMSYW,NOCCSQ,LISTZ,LISTW,IRREP,
     &                 ICORE(I002))
          ELSE
           STOP 'T1T2AA2'
          ENDIF
         ENDIF
50      CONTINUE
100    CONTINUE
      ENDIF
C
C      AB SPIN CASE
C
      LISTZ=63
      LISTWA=30
      LISTWB=29
C
C   LOOP OVER IRREPS
C
      DO 200 IRREP=1,NIRREP
C
C   RETRIEVE T2 AMPLITUDES AND CALCULATE Z-AMPLITUDES
C
       DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
       DISSYWA=IRPDPD(IRREP,ISYTYP(1,LISTWA))
       NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
       NUMSYWA=IRPDPD(IRREP,ISYTYP(2,LISTWA))
       IF(IUHF.EQ.0) THEN
        DISSYWB=0
        NUMSYWB=0
       ELSE 
        DISSYWB=IRPDPD(IRREP,ISYTYP(1,LISTWB))
        NUMSYWB=IRPDPD(IRREP,ISYTYP(2,LISTWB))
       ENDIF
C
C    HOLD Z-VECTOR FOR RESULTS IN CORE
C
       I001=1
       I002=I001+IINTFP*NUMSYZ*DISSYZ
       I003=I002+3*IINTFP*MAX(NUMSYWA,NUMSYWB,NUMSYZ,DISSYZ,
     &                      DISSYWA,DISSYWB)
C
C    FOR THE INTEGRALS AN IN-CORE VERSION IS USUSALLY NOT POSSIBLE
C    TRY TO ALLOCATE AS MUCH AS POSSIBLE
C
       IF(MIN(NUMSYZ,DISSYZ).NE.0) THEN
        MAXSIZE=(MXCOR-I003)/IINTFP
        IF(MAXSIZE.GT.NUMSYZ*DISSYZ) THEN
C
C       IN CORE ALGORITHM AND PARTIAL OUT CORE ALGORITHM
C
         CALL T1T2AB2(ICORE(I001),ICORE(I003),ICORE(I003),MAXSIZE,
     &                ICORE(I0TA),ICORE(I0TB),POP(1,1),POP(1,2),
     &                VRT(1,1),VRT(1,2),DISSYZ,DISSYWA,DISSYWB,
     &                NUMSYZ,NUMSYWA,NUMSYWB,NT(1),NT(2),LISTZ,LISTWA,
     &                LISTWB,IRREP,IUHF,ICORE(I002))
        ELSE
C
C       OUT CORE ALGORITHM
C
         STOP 'T1T2AB2'
        ENDIF
       ENDIF
200   CONTINUE
      RETURN
      END
