      

      SUBROUTINE OSINIC(ICORE,MAXCOR,IUHF,I0)
C
C  THIS ROUTINE INITIALIZE THINGS FOR OPENSHELL SINGLET  CC
C
      IMPLICIT REAL*8 (A-H,O-Z)
#include "maxbasfn.par"
      DIMENSION ICORE(*)
      INTEGER DISSYT,DIRPRD
      DIMENSION IACTIVE(MAXBASFN,2)
      DIMENSION IACTO(4),IDO(22),NACTIVE(2)
      DIMENSION NOCCA(8),NOCCB(8)
      INTEGER IRREPOA, IRREPVB, IRREPOB, IRREPVA
      COMMON /INFO/ NOCCO(2),NVRTO(2)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      INTEGER POP,VRT
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
C
      INTEGER POPA,POPI,VRTA,VRTI
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      INTEGER FSDPDAN,FSDPDNA,FSDPDAA,FSDPDIN,FSDPDNI,FSDPDII,FSDPDAI,
     $   FSDPDIA
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
C
      COMMON /ACTIRR/ IRREPOA,IRREPOB,IRREPVA,IRREPVB
C
      COMMON /FLAGS/ IFLAGS(100)
      DATA ZILCH,FACTOR/0.D0,1.D10/
C
      NBAS=NOCCO(1)+NVRTO(1)
      WRITE(6,*) '  Openshell singlet state will be calculated.'
C
C     FIGURE OUT ACTIVE ORBITALS
C
      CALL GETREC(20,'JOBARC','OCCUPYA ',NIRREP,NOCCA)
      CALL GETREC(20,'JOBARC','OCCUPYB ',NIRREP,NOCCB)
      ICOUNT=0
      DO 1 IRREP=1,NIRREP
         IDIF=NOCCA(IRREP)-NOCCB(IRREP)
         IF(IDIF.EQ.1) THEN
            IREPOA=IRREP
            IREPVB=IRREP
            ICOUNT=ICOUNT+1
         ELSE IF (IDIF.EQ.-1) THEN
            IREPOB=IRREP
            IREPVA=IRREP
            ICOUNT=ICOUNT+1
         ELSE IF (IDIF.NE.0) THEN
            ICOUNT=99
         ENDIF
 1    CONTINUE
      IF(ICOUNT.EQ.0) THEN
         CALL OSSYMFIG(IRREPOS)
         IF(IRREPOS.LE.0.OR.IRREPOS.GT.NIRREP) THEN
            WRITE(6,*)'@OSINIC-E FATAL ERROR, ILLEGAL ACTIVE ORBITAL',
     $         ' SYMMETRY',IRREPOS
         ENDIF
         IREPOA=IRREPOS
         IREPOB=IRREPOS
         IREPVA=IRREPOS
         IREPVB=IRREPOS
      ELSE IF(ICOUNT.NE.2) THEN
 5       FORMAT('@OSINIC-E FATAL ERROR, ',/,
     $      'OCCUPATION VECTORS ARE NOT PROPER FOR OPENSHELL SINGLET',
     $      ' CALCULATIONS',/,'OCCUPYA,OCCUPYB',/,(8I4))
         CALL ERREX
      ENDIF
      IOFFA=0
      IOFFB=0
      DO 2 IRREP=1,NIRREP
         IOFFA=IOFFA+POP(IRREP,1)
         IF(IRREP.EQ.IREPOA) IACTO(1)=IOFFA
         IOFFB=IOFFB+POP(IRREP,2)
         IF(IRREP.EQ.IREPOB) IACTO(3)=IOFFB
 2    CONTINUE
      DO 3 IRREP=1,NIRREP
         IF(IRREP.EQ.IREPVA) IACTO(2)=IOFFA+1
         IOFFA=IOFFA+VRT(IRREP,1)
         IF(IRREP.EQ.IREPVB) IACTO(4)=IOFFB+1
         IOFFB=IOFFB+VRT(IRREP,2)
 3    CONTINUE
      WRITE(6,"(a,4I4)") '  The active orbitals are:', IACTO
      WRITE(6,"(a,4I4)") '  Their symmetry         :', 
     $   IREPOA,IREPVA,IREPOB,IREPVB
C
      DO 10 I=1,22
       IDO(I)=1
10    CONTINUE
      NACTIVE(1)=2
      NACTIVE(2)=2
      IACTIVE(1,1)=IACTO(1)
      IACTIVE(2,1)=IACTO(2)
      IACTIVE(1,2)=IACTO(3)
      IACTIVE(2,2)=IACTO(4)

C      
      CALL FSIODRV(ICORE,MAXCOR,IUHF,IDO,IACTIVE,NACTIVE,NBAS,I0,1)
C
C     GET FIRST THE SYMMETRY OF THE ACTIVE ORBITALS
C
      IRREPOA=0
      IRREPOB=0
      IRREPVA=0
      IRREPVB=0
      DO 100 IRREP=1,NIRREP
         IF(POPA(IRREP,1).NE.0) IRREPOA=IRREP
         IF(POPA(IRREP,2).NE.0) IRREPOB=IRREP
         IF(VRTA(IRREP,1).NE.0) IRREPVA=IRREP
         IF(VRTA(IRREP,2).NE.0) IRREPVB=IRREP
 100  CONTINUE
      IF((IRREPOA*IRREPOB*IRREPVA*IRREPVB.EQ.0).OR.(IRREPOA.NE.IRREPVB)
     $   .OR.(IRREPOB.NE.IRREPVA)) THEN
         WRITE(6,*)'@OSINIC-E FATAL ERROR, ',
     $      'IRREPOA,IRREPOB,IRREPVA,IRREPVB',
     $      IRREPOA,IRREPOB,IRREPVA,IRREPVB
         CALL ERREX
      ENDIF
C
C     BLOW DENOMINATOR FOR AMPLITUDES TO BE EXCLUDED
C
c Nevin added to dimension core in actdnmbl
      maxcor=maxcor-mod(maxcor,2)
c     idimcore=maxcor/2 
cjdw 10/24/95. how about this ?
      idimcore=maxcor/iintfp

      CALL ACTDNMBL(ICORE(I0),idimcore,MAXCOR,3,'AAAA',FACTOR)
C
C     ZERO OUT ACTIV-ACTIV EXCITATION ON T2 LISTS
C
      LISTT2=46
      DO 1000 IRREP=1,NIRREP
         DISSYT=FSDPDAA(IRREP,ISYTYP(1,LISTT2))
         NUMSYT=FSDPDAA(IRREP,ISYTYP(2,LISTT2))
         IF(NUMSYT*DISSYT.GT.0) THEN
            IF(NUMSYT*DISSYT.NE.1) THEN
               WRITE(6,*)'@OSINIC-E FATAL ERROR NUMSYT*DISSYT.NE.1',
     $            NUMSYT,DISSYT
               CALL ERREX
            ENDIF
            CALL FSPUT(ZILCH,1,NUMSYT,1,IRREP,LISTT2,'AAAA')
         ENDIF
 1000 CONTINUE
      
C
      RETURN
      END
