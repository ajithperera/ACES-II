

      SUBROUTINE FEACONT1(ICORE,MAXCOR,IUHF)
C
C     USED for PCCSD MODIFICATIONS
c
C THIS ROUTINE CALCULATES THE TERM
C
C
C FOR CCSD AND QCISD IN ADDITION THE TERMS
C
C SUM T(I,E) F(EA)
C
C SUM T(i,e) F(ea)
C
C ARE CALCULATED
C
CEND
C
C
C CODED JG JUNE/90 JULY/90 (FEACONT ) Modified to FEACONT1 by MN, October 2010
C
cmngamma
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINCC,CICALC,ROHF4,ITRFLG
      INTEGER DIRPRD,DISSYT,DISSYZ,POP,VRT
      LOGICAL MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,QCISD,UCC
      LOGICAL AOBASIS,AOLOG
      DIMENSION ICORE(MAXCOR)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWO
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,
     &             NF1AA,NF1BB,NF2AA,NF2BB
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /LINEAR/ LINCC,CICALC
      COMMON /SWITCH/ MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &                QCISD,UCC
      COMMON /ROHF/ ROHF4,ITRFLG
      COMMON /AOLOG/ AOLOG
C
      EQUIVALENCE(IFLAGS(2),METHOD)
C
      DATA ONE,ONEM,HALFM /1.0D0,-1.0D0,-0.5D0/
C
      AOBASIS=.FALSE.
C
C    CALCULATE SIZE OF F(A,E) ARRAY
C    AND GET THESE ARRAYS
C
      NFAA=NF2AA
      NFBB=NF2BB
      I0AA=MAXCOR+1-NFAA*IINTFP
      MXCOR=MAXCOR-NFAA*IINTFP
      IF(IUHF.EQ.0) THEN
       I0BB=I0AA
      ELSE
       I0BB=I0AA-NFBB*IINTFP
       MXCOR=MXCOR-NFBB*IINTFP
      ENDIF
      CALL GETLST(ICORE(I0AA),1,1,1,1,92)
      IF(IUHF.EQ.1) THEN
        CALL GETLST(ICORE(I0BB),1,1,1,2,92)
      ENDIF
C
       I0TA=I0BB-NTAA*IINTFP
       I0ZA=I0TA-NTAA*IINTFP
       MXCOR=MXCOR-2*NTAA*IINTFP
       CALL GETLST(ICORE(I0TA),1,1,1,1,90)
       CALL GETLST(ICORE(I0ZA),1,1,1,3,90)
       IF(IUHF.EQ.0) THEN
        I0TB=I0TA
        I0ZB=I0ZA
       ELSE
        I0TB=I0ZA-NTBB*IINTFP
        I0ZB=I0TB-NTBB*IINTFP
        MXCOR=MXCOR-2*NTBB*IINTFP
        CALL GETLST(ICORE(I0TB),1,1,1,2,90)
        CALL GETLST(ICORE(I0ZB),1,1,1,4,90)
       ENDIF
c
       DO 300 ISPIN=1,IUHF+1
C
        IF(ISPIN.EQ.1) THEN
         IOFFF=I0AA
         IF (AOBASIS) IOFFF=I0CA
         IOFFT=I0TA
         IOFFZ=I0ZA
         I0Z=I0ZA
        ELSE
         IOFFF=I0BB
         IF (AOBASIS) IOFFF=I0CB
         IOFFT=I0TB
         IOFFZ=I0ZB
         I0Z=I0ZB
        ENDIF
C
       I0TA=I0BB-NTAA*IINTFP
       I0ZA=I0TA-NTAA*IINTFP
       MXCOR=MXCOR-2*NTAA*IINTFP
       CALL GETLST(ICORE(I0TA),1,1,1,1,90)
       CALL GETLST(ICORE(I0ZA),1,1,1,3,90)
       IF(IUHF.EQ.0) THEN
        I0TB=I0TA
        I0ZB=I0ZA
       ELSE
        I0TB=I0ZA-NTBB*IINTFP
        I0ZB=I0TB-NTBB*IINTFP
        MXCOR=MXCOR-2*NTBB*IINTFP
        CALL GETLST(ICORE(I0TB),1,1,1,2,90)
        CALL GETLST(ICORE(I0ZB),1,1,1,4,90)
       ENDIF
c
        DO 250 IRREP=1,NIRREP
C
         NOCC=POP(IRREP,ISPIN)
         NVRT=VRT(IRREP,ISPIN)
         if (nocc * nvrt .gt. 0)
     $        CALL XGEMM('T','N',NVRT,NOCC,NVRT,ONE,ICORE(IOFFF),
     &              NVRT,ICORE(IOFFT),NVRT,ONE,ICORE(IOFFZ),
     &              NVRT)
         IOFFF=IOFFF+NVRT*NVRT*IINTFP
         IOFFT=IOFFT+NVRT*NOCC*IINTFP
         IOFFZ=IOFFZ+NVRT*NOCC*IINTFP
250     CONTINUE
        CALL PUTLST(ICORE(I0Z),1,1,1,ISPIN+2,90)
300    CONTINUE
C

      RETURN
      END
