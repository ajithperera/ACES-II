
      SUBROUTINE FEAAB1(T2,Z2,T,Z,FEAAA,FEABB,POP1,POP2,VRT1,VRT2,
     &                  DISSYT,DISSYZ,NUMSYT,NUMSYZ,NFSIZA,NFSIZB,
     &                  LISTT,LISTZ,IRREP,IUHF,TMP)
       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
       INTEGER DISSYT,DISSYZ,DIRPRD,POP1,POP2,VRT1,VRT2
       DIMENSION T2(DISSYT,NUMSYT),Z2(DISSYZ,NUMSYZ),FEAAA(NFSIZA),
     &           FEABB(NFSIZB),T(NUMSYT,DISSYT),Z(NUMSYZ,DISSYZ)
       DIMENSION TMP(1),POP1(8),POP2(8),VRT1(8),VRT2(8)
C
       COMMON/SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
C
       DATA AZERO,ONE,ONEM /0.0D0,1.0D0,-1.0D0/
C
C   GET T2 AND Z2 AMPLITUDES
C
       CALL GETLST(T2,1,NUMSYT,2,IRREP,LISTT)
       CALL TRANSP(T2,T,NUMSYT,DISSYT)
       CALL ZERO(Z,NUMSYZ*DISSYZ)
C
C      PERFORM MULTIPLICATION
C
       JOFF=1
       IOFF=1
       DO 90 IRREPJ=1,NIRREP
C
        NVRTJ=VRT2(IRREPJ)
C
        IF(NVRTJ.EQ.0) GO TO 90
C
        IRREPI=DIRPRD(IRREPJ,IRREP)
C
        NVRTI=VRT1(IRREPI)
C
        IF(NVRTI.EQ.0) GO TO 80
C 
        CALL XGEMM('N','N',NUMSYT*NVRTI,NVRTJ,NVRTJ,ONE,T(1,JOFF),
     &             NVRTI*NUMSYT,FEABB(IOFF),NVRTJ,
     &             AZERO,Z(1,JOFF),NVRTI*NUMSYZ)
C
        JOFF=JOFF+NVRTJ*NVRTI
C
80      CONTINUE
        IOFF=IOFF+NVRTJ*NVRTJ
90      CONTINUE
C
        IF(IUHF.EQ.0) THEN
         CALL TRANSP(Z,Z2,DISSYZ,NUMSYZ)
         CALL GETLST(T2,1,NUMSYZ,1,IRREP,LISTZ)
         CALL SYMRHF(IRREP,VRT1,POP1,DISSYZ,Z2,TMP,TMP(1+DISSYZ),
     &               TMP(1+2*DISSYZ))
         CALL VADD(Z2,Z2,T2,NUMSYZ*DISSYZ,ONE)
         CALL PUTLST(Z2,1,NUMSYZ,1,IRREP,LISTZ)
       ELSE
        CALL SYMTR1(IRREP,VRT1,VRT2,NUMSYT,T,TMP,TMP(1+NUMSYT),
     &              TMP(1+2*NUMSYT))
        CALL SYMTR1(IRREP,VRT1,VRT2,NUMSYZ,Z,TMP,TMP(1+NUMSYZ),
     &              TMP(1+2*NUMSYZ))
C
C      PERFORM SECOND MULTIPLICATION
C
        JOFF=1 
        IOFF=1
        DO 190 IRREPI=1,NIRREP
C
         NVRTI=VRT1(IRREPI)
C
         IF(NVRTI.EQ.0) GO TO 190
C
         IRREPJ=DIRPRD(IRREPI,IRREP)
C
         NVRTJ=VRT2(IRREPJ)
C
         IF(NVRTJ.EQ.0) GO TO 180
C
         CALL XGEMM('N','N',NUMSYT*NVRTJ,NVRTI,NVRTI,ONE,T(1,JOFF),
     &              NVRTJ*NUMSYT,FEAAA(IOFF),NVRTI,
     &              ONE,Z(1,JOFF),NVRTJ*NUMSYZ)
C
         JOFF=JOFF+NVRTJ*NVRTI
180      CONTINUE
        IOFF=IOFF+NVRTI*NVRTI
190     CONTINUE
        CALL SYMTRA(IRREP,VRT2,VRT1,NUMSYZ,Z,Z2)
        CALL TRANSP(Z2,Z,DISSYZ,NUMSYZ)
        CALL GETLST(T,1,NUMSYZ,1,IRREP,LISTZ)
        CALL VADD(Z,Z,T,NUMSYZ*DISSYZ,ONE)
        CALL PUTLST(Z,1,NUMSYZ,1,IRREP,LISTZ)
      ENDIF
      RETURN
      END
