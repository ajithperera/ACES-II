

      SUBROUTINE T1T2F(ICORE,MAXCOR,IUHF,IOFFT,Z)
C
C THIS ROUTINE COMPUTES THE CONTRACTION:
C
C      SUM   F(B,J) T(A,I) T2(AB,IJ)
C     ABIJ
C
C
C   FOR SPIN CASE AA AND BB OF F(B,J)
C
C SPIN CASE AA:
C
C     SUM F(B,J) [SUM T(A,I) T(AB,IJ) +  SUM T(a,i) T(aB,iJ)]
C      BJ          AI                     ai
C
C SPIN CASE BB:
C
C     SUM F(b,j) [SUM T(a,i) T(ab,ij) +  SUM T(A,I) T(Ab,Ij)
C      bj          ai                     AI
C
C  THIS ROUTINE IS ACTUALLY CALLED TWO TIMES : THE FIRST IS FOR
C    THE T1[2]T1[1] PASS, AND THE SECOND IS FOR THE T1[1]T2[2].  THE
C    SECOND-ORDER T2 AMPLITUDES HAVE TO BE RESORTED BETWEEN CALLS.
C
CJDW 3/23/98. Modifications made for RHF.
C   
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,Z,SDOT
      LOGICAL LAMBDA,bRedundant
      INTEGER T2LEN,IRREPX,IRPIJ,IRPAB,IOFF
      DIMENSION ICORE(MAXCOR),IOFFTAR(2),IOFFT1(2),IOFFF(2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /FLAGS2/ IFLAGS2(500)
      DATA ONE  /1.0/   
      DATA ONEM /-1.0/
      DATA ZILCH /0.0/
      bRedundant = IFLAGS2(155).EQ.0
      I000=1
      I010=I000+NT(1)*IINTFP
      I020=I010+NT(2)*IINTFP
      I030=I020+NT(1)*IINTFP
      I040=I030+NT(2)*IINTFP
      I050=I040+NT(1)*IINTFP
      I060=I050+NT(2)*IINTFP
      IOFFTAR(1)=I000
      IOFFTAR(2)=I010
      IOFFT1(1)=I020
      IOFFT1(2)=I030
      IOFFF(1)=I040
      IOFFF(2)=I050
      CALL GETLST(ICORE(I020),1,1,1,IOFFT+1,90)
      IF(IUHF.EQ.0)THEN
       CALL GETLST(ICORE(I030),1,1,1,IOFFT+1,90)
      ELSE
       CALL GETLST(ICORE(I030),1,1,1,IOFFT+2,90)
      ENDIF
      CALL GETLST(ICORE(I040),1,1,1,3,93)
      IF(IUHF.EQ.0)THEN
       CALL GETLST(ICORE(I050),1,1,1,3,93)
      ELSE
       CALL GETLST(ICORE(I050),1,1,1,4,93)
      ENDIF
      Z=ZILCH

      IF(IUHF.NE.0)THEN

      DO 10 ISPIN=1,2
       T2LIST1=33+ISPIN
       T2LIST2=35+ISPIN
       NT2DIS=IRPDPD(1,ISYTYP(2,T2LIST1))
       NT2DSZ=IRPDPD(1,ISYTYP(1,T2LIST1))
       I070=I060+NT2DIS*NT2DSZ*IINTFP
       IF(bRedundant) THEN
         CALL GETLST(ICORE(I060),1,NT2DIS,1,1,T2LIST1)
       ELSE
         CALL GETLST_NR(ICORE(I060),ICORE(I070),MAXCOR-I070,
     &                 T2LIST1, 1)
       ENDIF  
       CALL XGEMM('N','N',1,NT2DIS,NT2DSZ,ONEM,ICORE(IOFFT1(ISPIN)),
     &            1,ICORE(I060),NT2DSZ,ZILCH,ICORE(IOFFTAR(ISPIN)),1)
       NT2DIS=IRPDPD(1,ISYTYP(2,T2LIST2))
       NT2DSZ=IRPDPD(1,ISYTYP(1,T2LIST2))
       I070=I060+NT2DIS*NT2DSZ*IINTFP
       IF(bRedundant) THEN
         CALL GETLST(ICORE(I060),1,NT2DIS,1,1,T2LIST2)
       ELSE
         CALL GETLST_NR(ICORE(I060),ICORE(I070),MAXCOR-I070,
     &                 T2LIST2, 1)
       ENDIF
       CALL XGEMM('N','N',1,NT2DIS,NT2DSZ,ONE,ICORE(IOFFT1(3-ISPIN)),
     &           1,ICORE(I060),NT2DSZ,ONE,ICORE(IOFFTAR(ISPIN)),1)
       Z=Z+SDOT(NT2DIS,ICORE(IOFFF(ISPIN)),1,ICORE(IOFFTAR(ISPIN)),1)
10    CONTINUE

      ELSE
C
C     Calculate total length of T2 vector.
C
       T2LEN=0
       IRREPX=1
       DO 20 IRPIJ=1,NIRREP
       IRPAB=DIRPRD(IRREPX,IRPIJ)
       NT2DSZ=IRPDPD(IRPAB,13)
       NT2DIS=IRPDPD(IRPIJ,14)
       T2LEN=T2LEN+NT2DSZ*NT2DIS
   20  CONTINUE
C
       I070=I060+IINTFP*T2LEN
       I080=I070+IINTFP*T2LEN
       IF(I080.GE.MAXCOR)THEN
        CALL INSMEM('T1T2F',I080,MAXCOR)
       ENDIF
C
C     Pick up everything from T2LIST2. Order is (AI,bj).
C
       T2LIST2=37
       IF(bRedundant) THEN
         CALL GETALL(ICORE(I070),T2LEN,1,T2LIST2)
       ELSE
         CALL GETLST_NR(ICORE(I070),ICORE(I080),MAXCOR-I080,
     &                 T2LIST2, 1)
       ENDIF
C
C     Reorder to (Ab,Ij).
C
       CALL SSTGEN(ICORE(I070),ICORE(I060),T2LEN,VRT,POP,VRT,POP,
     &             ICORE(I080),IRREPX,'1324')
C
       IOFF=0
       DO 30 IRPIJ=1,NIRREP
       IRPAB=DIRPRD(IRREPX,IRPIJ)
       NT2DSZ=IRPDPD(IRPAB,13)
       NT2DIS=IRPDPD(IRPIJ,14)
       I090=I080+IINTFP*MAX(NT2DSZ,NT2DIS)
       I100=I090+IINTFP*MAX(NT2DSZ,NT2DIS)
       I110=I100+IINTFP*MAX(NT2DSZ,NT2DIS)
       IF(I110.GE.MAXCOR)THEN
        CALL INSMEM('T1T2F',I110,MAXCOR)
       ENDIF
c YAU : old
c      CALL ICOPY(IINTFP*NT2DSZ*NT2DIS,ICORE(I060+IOFF),1,ICORE(I070),1)
c YAU : new
       CALL DCOPY(NT2DSZ*NT2DIS,ICORE(I060+IOFF),1,ICORE(I070),1)
c YAU : end
       CALL SYMTR1(IRPIJ,POP,POP,IRPDPD(IRPAB,13),ICORE(I070),
     &             ICORE(I080),ICORE(I090),ICORE(I100))
       CALL  SAXPY(NT2DSZ*NT2DIS,-1.0D+00,ICORE(I070),1,
     &                                    ICORE(I060+IOFF),1)
       IOFF=IOFF+IINTFP*NT2DSZ*NT2DIS
   30  CONTINUE
C
C      I060 contains T2(AB,IJ). Now reorder to (AI,BJ), put in I070.
C
       CALL SSTGEN(ICORE(I060),ICORE(I070),T2LEN,VRT,VRT,POP,POP,
     &             ICORE(I080),IRREPX,'1324')
C
       NT2DIS=IRPDPD(1,ISYTYP(2,T2LIST2))
       NT2DSZ=IRPDPD(1,ISYTYP(1,T2LIST2))
       IF(bRedundant) THEN
         CALL GETLST(ICORE(I060),1,NT2DIS,1,1,T2LIST2)
       ELSE
         CALL GETLST_NR(ICORE(I060),ICORE(I080),MAXCOR-I080,
     &                 T2LIST2, 1)
       ENDIF
       ISPIN=1
       CALL SAXPY(NT2DSZ*NT2DIS,1.0D+00,ICORE(I070),1,ICORE(I060),1)
       CALL XGEMM('N','N',1,NT2DIS,NT2DSZ,ONE,ICORE(IOFFT1(3-ISPIN)),
     &           1,ICORE(I060),NT2DSZ,ZILCH,ICORE(IOFFTAR(ISPIN)),1)
       Z=Z+SDOT(NT2DIS,ICORE(IOFFF(ISPIN)),1,ICORE(IOFFTAR(ISPIN)),1)
       Z=Z+Z
      ENDIF
      RETURN
      END
