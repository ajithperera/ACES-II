

      SUBROUTINE T1INW1(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE TERM
C
C -  P(AB)  SUM M T(B,M) [ 1/2 SUM E,F T(EF,IJ) <AM||EF>]
C
C  USING SYMMETRY ADAPTED INTEGRALS AND AMPLITUDES
C 
C
C IN RHF :
C
C -  SUM m T(b,m) [ SUM E,f T(Ef,Ij) <Am|Ef>] + TRANSPOSE
C
C IN UHF
C
C -  SUM M T(B,M) [SUM E<F T(EF,IJ) <AM||EF> ] + ANTISYMMETRIZATION IN A,B
C
C -  SUM m T(b,m) [SUM e<f T(ef,ij) <am||ef> ] + ANTISYMMETRIZATION IN a,b
C
C -  SUM m T(b,m) [SUM E,f T(Ef,Ij) <Am|Ef>] 
C
C -  SUM M T(B,M) [SUM E,f T(Ef,Ij) <Mb|Ef>]
C
C
C  THERE IS AN IN CORE AND OUT CORE ALGORITHMN FOR
C  DEALING WITH THE <AB||CI> INTEGRALS
C
CEND
C
C CODED JG JUNE/90
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYWA,DISSYWB,DISSYZ,POP,VRT,DISSYW
      DIMENSION ICORE(MAXCOR)
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWO
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
C
      MXCOR=MAXCOR
      I0TA=MXCOR+1-NT(1)*IINTFP
      MXCOR=MXCOR-NT(1)*IINTFP
      IF(IUHF.EQ.0) THEN
       I0TB=I0TA
      ELSE
       I0TB=I0TA-NT(2)*IINTFP
       MXCOR=MXCOR-NT(2)*IINTFP
      ENDIF
      CALL GETLST(ICORE(I0TA),1,1,1,1,90)
      IF(IUHF.EQ.1) THEN
       CALL GETLST(ICORE(I0TB),1,1,1,2,90)
      ENDIF
C
C     AA AND BB SPIN CASES
C
      IF(IUHF.EQ.1) THEN
C
       DO 100 ISPIN=1,2
C
        IF(ISPIN.EQ.1) THEN
         I000=I0TA
        ELSE
         I000=I0TB
        ENDIF
        NOCC=NOCCO(ISPIN)
        NVRT=NVRTO(ISPIN)
        LISTZ=ISPIN+60
        LISTW=ISPIN+26
        LISTT=ISPIN+43
C
        DO 50 IRREP=1,NIRREP 
C
         NVRTSQ=0
         DO 45 IRREPJ=1,NIRREP
          IRREPI=DIRPRD(IRREP,IRREPJ)
          NVRTSQ=NVRTSQ+VRT(IRREPJ,ISPIN)*VRT(IRREPI,ISPIN)
45       CONTINUE
C
C RETRIEVE T2 AMPLITUDES AND CALCLUATE NEW ONES
C
         DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
         DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
         NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
         NUMSYW=IRPDPD(IRREP,ISYTYP(2,LISTW))
         I001=1
         I002=I001+IINTFP*MAX(NUMSYZ*DISSYZ,NUMSYW*NUMSYZ)
         I003=I002+IINTFP*MAX(NUMSYZ*DISSYZ,NUMSYW*NUMSYZ)
         I004=I003+3*IINTFP*MAX(NUMSYW,NUMSYZ,DISSYZ,DISSYW)
C
C  FOR THE INTEGRALS AN IN-CORE VERSION IS USUSALLY NOT POSSIBLE
C  TRY TO ALLOCATE AS MUCH AS POSSIBLE
C
         IF(MIN(NUMSYZ,DISSYZ).NE.0) THEN
          MAXSIZE=(MXCOR-I004)/IINTFP
          IF(MAXSIZE.GT.DISSYW) THEN
C 
C
C IN CORE VERSION
C
           CALL T1W1AA(ICORE(I001),ICORE(I001),ICORE(I002),
     &                 ICORE(I002),ICORE(I004),MAXSIZE,
     &                 ICORE(I000),POP(1,ISPIN),VRT(1,ISPIN),
     &                 DISSYZ,DISSYW,NUMSYZ,NUMSYW,NVRTSQ,
     &                 NT(ISPIN),LISTT,LISTZ,LISTW,IRREP,IUHF,ISPIN,
     &                 ICORE(I003))
          ELSE
           CALL INSMEM('T1INW1',DISSYW,MAXSIZE)
          ENDIF
         ENDIF
50      CONTINUE
100    CONTINUE
      ENDIF
C
C AB SPIN CASE
C
      LISTZ=63
      LISTWA=30
      LISTWB=29
      LISTT=46
C
C   LOOP OVER IRREPS
C
      DO 200 IRREP=1,NIRREP
C
C RETRIEVE T2 AMPLITUDES AND CALCULATE Z-AMPLITUDES
C
       DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
       DISSYWA=IRPDPD(IRREP,ISYTYP(1,LISTWA))
       NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
       NUMSYWA=IRPDPD(IRREP,ISYTYP(2,LISTWA))
       IF(IUHF.EQ.0) THEN
        DISSYWB=0
        NUMSYWB=0
       ELSE 
        DISSYWB=IRPDPD(IRREP,ISYTYP(1,LISTWB))
        NUMSYWB=IRPDPD(IRREP,ISYTYP(2,LISTWB))
       ENDIF
C
C HOLD Z-VECTOR AND T2-AMPLITUDES IN CORE FOR RESULTS IN CORE
C
       I001=1
       I002=I001+IINTFP*MAX(NUMSYZ*DISSYZ,NUMSYWA*NUMSYZ,NUMSYWB*NUMSYZ)
       I003=I002+IINTFP*MAX(NUMSYZ*DISSYZ,NUMSYWA*NUMSYZ,NUMSYWB*NUMSYZ)
       I004=I003+3*IINTFP*MAX(NUMSYWA,NUMSYWB,NUMSYZ,DISSYZ,
     &                      DISSYWA,DISSYWB)
C
C FOR THE INTEGRALS AN IN-CORE VERSION IS USUSALLY NOT POSSIBLE
C TRY TO ALLOCATE AS MUCH AS POSSIBLE
C
       IF(MIN(NUMSYZ,DISSYZ).NE.0) THEN
        MAXSIZE=(MXCOR-I004)/IINTFP
        IF(MAXSIZE.GT.MAX(DISSYWA,DISSYWB)) THEN
C
C IN CORE ALGORITHM AND PARTIAL OUT CORE ALGORITHM
C
         CALL T1W1AB(ICORE(I001),ICORE(I001),ICORE(I002),
     &               ICORE(I002),ICORE(I004),MAXSIZE,
     &               ICORE(I0TA),ICORE(I0TB),POP(1,1),POP(1,2),
     &               VRT(1,1),VRT(1,2),
     &               DISSYZ,DISSYWA,DISSYWB,NUMSYZ,NUMSYWA,NUMSYWB,
     &               NT(1),NT(2),LISTT,LISTZ,LISTWA,LISTWB,IRREP,IUHF,
     &               ICORE(I003))
        ELSE
C
C OUT CORE ALGORITHM
C
         CALL INSMEM('T1INW1',MAX(DISSYWA,DISSYWB),MAXSIZE)
        ENDIF
       ENDIF
200   CONTINUE
      RETURN
      END
