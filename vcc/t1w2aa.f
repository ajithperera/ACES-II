      SUBROUTINE T1W2AA(W,Z,T,F,POP,VRT,DISSYZ,DISSYW,NUMSYZ,
     &                 NUMSYW,NOCCSQ,NT,NF,LISTW,LISTZ,IRREP,TMP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DISSYW,DISSYZ,DIRPRD,POP,VRT
      DIMENSION Z(DISSYZ,NOCCSQ),W(DISSYW,NUMSYW),T(NT),F(NF),
     &          POP(8),VRT(8),TMP(1)
C
      COMMON /SYMINF/ NSTART,NIRREP,IRREPBA(255),IRREPB(255),
     &                DIRPRD(8,8)
C
      DATA AZERO,ONE,ONEM /0.0D0,1.0D0,-1.D0/
C
      CALL ZERO(Z,DISSYZ*NOCCSQ)
C
C  GET INTEGRALS <MN|IE> FROM (LISTW1,LISTW2)
C
      IF(MIN(NUMSYW,DISSYW).NE.0) THEN
C
       CALL GETLST(W,1,NUMSYW,2,IRREP,LISTW)
C
C      PERFORM MULTIPLICATION
C
       JOFFW=1
       JOFFZ=1
       IOFF=1
C
       DO 90 IRREPJ=1,NIRREP
C
       NOCCJ=POP(IRREPJ)
       NVRTJ=VRT(IRREPJ)
C
       IRREPI=DIRPRD(IRREPJ,IRREP)
C
       NOCCI=POP(IRREPI)
C
       IF(NVRTJ.EQ.0.OR.NOCCJ.EQ.0.OR.NOCCI.EQ.0) GO TO 80
C
       CALL XGEMM('N','N',DISSYW*NOCCI,NOCCJ,NVRTJ,ONE,W(1,JOFFW),
     &            DISSYW*NOCCI,T(IOFF),NVRTJ,AZERO,Z(1,JOFFZ),
     &            DISSYZ*NOCCI)
80     CONTINUE
       JOFFW=JOFFW+NVRTJ*NOCCI
       JOFFZ=JOFFZ+NOCCJ*NOCCI
       IOFF=IOFF+NOCCJ*NVRTJ
90    CONTINUE
      CALL MTRAC1(F,Z,DISSYZ,POP,IRREP)
      CALL ASSYM(IRREP,POP,DISSYZ,DISSYZ,W,Z)
      CALL GETLST(Z,1,NUMSYZ,1,IRREP,LISTZ)
      CALL VADD(Z,Z,W,NUMSYZ*DISSYZ,ONE)
      CALL PUTLST(Z,1,NUMSYZ,1,IRREP,LISTZ)
      ENDIF
      RETURN
      END 
