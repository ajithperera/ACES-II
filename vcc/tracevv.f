      SUBROUTINE TRACEVV(TYPE,IRREPIN,POP,VRT,NSIZ,W,Z)
C
C THIS ROUTINE ACCEPTS A SYMMETRY PACKED FOUR-INDEX ARRAY AND FORMS
C  ONE OF THE FOLLOWING SUMS.  THE RETURNED ARRAY (Z) IS ALSO SYMMETRY
C  PACKED. (ALL SUMS BELOW ARE OVER E).
C
C           Z(EB) =  SUM   W(JE-EM)     (TYPE = 'OVVO')
C           Z(EB) =  SUM   W(EJ-ME)     (TYPE = 'VOOV')
C           Z(EB) =  SUM   W(EJ-EM)     (TYPE = 'VOVO')
C           Z(EB) =  SUM   W(JE-ME)     (TYPE = 'OVOV')
C
C
C INPUT: TYPE    (CHARACTER*4)
C        IRREPIN (INTEGER): THE IRREP OF GAMMA(ME) AND GAMMA(EJ).
C        POP (INTEGER [8]): OCCUPATION NUMBERS BY IRREP.
C        VRT (INTEGER [8]): # OF VIRTUAL ORBITALS BY IRREP.
C        NSIZ (INTEGER)   : THE DIMENSION OF W (WHICH IS A SQUARE MATRIX).
C        W (DP ARRAY)     : THE FOUR-INDEX ARRAY TO BE SUMMED OVER.
C
C OUTPUT: Z (DP ARRAY)    : THE SUMS DESCRIBED BY THE EQUATIONS ABOVE.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION Z(1),W(NSIZ,NSIZ)
      CHARACTER*4 TYPE
      DIMENSION IOFFVO(8),IOFFOV(8),IOFFOO(8),POP(8),VRT(8)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      INDX(I,J,N)=I+(J-1)*N
C
C COMPUTE OFFSETS FOR 2 DISTRIBUTION TYPES (OV AND VO) AND
C THE TARGET DISTRIBUTION TYPE (OO).
C
      IOFF1=0
      IOFF2=0
      IOFF3=0
      DO 1000 IRREP=1,NIRREP
       IRREPX=DIRPRD(IRREP,IRREPIN)
       IOFFVO(IRREP)  =IOFF1
       IOFFOV(IRREP)  =IOFF2
       IOFFOO(IRREP)  =IOFF3
       IOFF1=IOFF1+POP(IRREP)*VRT(IRREPX)
       IOFF2=IOFF2+VRT(IRREP)*POP(IRREPX)
       IOFF3=IOFF3+POP(IRREP)*POP(IRREP)
1000  CONTINUE
      CALL ZERO(Z,IOFF3)
C
C PROCEED WITH SUMMATIONS
C
      IF(TYPE.EQ.'OVVO')THEN
       DO 10 IRREPBE=1,NIRREP
        IRREPMJ=DIRPRD(IRREPBE,IRREPIN)
        DO 20 B=1,VRT(IRREPBE)
         E=B
         DO 30 M=1,POP(IRREPMJ)
          DO 40 J=1,POP(IRREPMJ)
           INDEXR=INDX(B,M,VRT(IRREPBE))+IOFFVO(IRREPMJ)
           INDEXL=INDX(J,E,POP(IRREPMJ))+IOFFOV(IRREPBE)
           INDTAR=INDX(J,M,POP(IRREPMJ))+IOFFOO(IRREPMJ)
           Z(INDTAR)=Z(INDTAR)+W(INDEXL,INDEXR)
40        CONTINUE
30       CONTINUE
20      CONTINUE
10     CONTINUE 
      ELSEIF(TYPE.EQ.'VOVO')THEN
       DO 110 IRREPBE=1,NIRREP
        IRREPMJ=DIRPRD(IRREPBE,IRREPIN)
        DO 120 B=1,VRT(IRREPBE)
         E=B
         DO 130 M=1,POP(IRREPMJ)
          DO 140 J=1,POP(IRREPMJ)
           INDEXR=INDX(B,M,VRT(IRREPBE))+IOFFVO(IRREPMJ)
           INDEXL=INDX(E,J,VRT(IRREPBE))+IOFFVO(IRREPMJ)
           INDTAR=INDX(J,M,POP(IRREPMJ))+IOFFOO(IRREPMJ)
           Z(INDTAR)=Z(INDTAR)+W(INDEXL,INDEXR)
140       CONTINUE
130      CONTINUE
120     CONTINUE
110    CONTINUE
      ELSEIF(TYPE.EQ.'OVOV')THEN
       DO 210 IRREPBE=1,NIRREP
        IRREPMJ=DIRPRD(IRREPBE,IRREPIN)
        DO 220 B=1,VRT(IRREPBE)
         E=B
         DO 230 M=1,POP(IRREPMJ)
          DO 240 J=1,POP(IRREPMJ)
           INDEXR=INDX(M,B,POP(IRREPMJ))+IOFFOV(IRREPBE)
           INDEXL=INDX(J,E,VRT(IRREPMJ))+IOFFOV(IRREPBE)
           INDTAR=INDX(J,M,POP(IRREPMJ))+IOFFOO(IRREPMJ)
           Z(INDTAR)=Z(INDTAR)+W(INDEXL,INDEXR)
240       CONTINUE
230      CONTINUE
220     CONTINUE
210    CONTINUE
      ELSEIF(TYPE.EQ.'VOOV')THEN
       DO 310 IRREPBE=1,NIRREP
        IRREPMJ=DIRPRD(IRREPBE,IRREPIN)
        DO 320 B=1,VRT(IRREPBE)
         E=B
         DO 330 M=1,POP(IRREPMJ)
          DO 340 J=1,POP(IRREPMJ)
           INDEXR=INDX(M,B,POP(IRREPMJ))+IOFFOV(IRREPBE)
           INDEXL=INDX(E,J,VRT(IRREPBE))+IOFFVO(IRREPMJ)
           INDTAR=INDX(J,M,POP(IRREPMJ))+IOFFOO(IRREPMJ)
           Z(INDTAR)=Z(INDTAR)+W(INDEXL,INDEXR)
340       CONTINUE
330      CONTINUE
320     CONTINUE
310    CONTINUE
      ENDIF
      RETURN
      END
