      SUBROUTINE MAKFME(ICORE,MAXCOR,IUHF,ISPIN)
C
C THIS ROUTINE DRIVES THE FORMATION OF THE F(ME) INTERMEDIATE, 
C  AND WRITES IT TO DISK ON LIST 93.
C
C         F(me) = f(e;m) + t(f;n) * <mn||ef>
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH
      DIMENSION ICORE(MAXCOR)
      LOGICAL bRedundant
      COMMON /INFO/ NOCA,NOCB,NVRTA,NVRTB
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /FLAGS2/ IFLAGS2(500)
      DATA ONE /1.0/ 
      DATA ONEM /-1.0/
      DATA ZILCH /0.0/

      bRedundant = IFLAGS2(155).EQ.0
C********************************************************************
C
C
C       F(E;M) = f(E;M) + t(F;N) <MN||EF> + t(f,n) <Mn|Ef> 
C
C       F(e;m) = f(e;m) + t(f;n) <mn||ef> + t(F;N) <mN|eF>
C
C********************************************************************
      LISTT1=90
      LISTT2=90
      LISTW1=18+ISPIN
      LISTW2=16+ISPIN
      IF(IUHF.EQ.0)LISTW2=18
      LISTF =93
C
C WE ONLY NEED TO CONSIDER ONE DPD IRREP -- THE TOTALLY SYMMETRIC ONE.
C
      NTOTTAR=IRPDPD(1,8+ISPIN)
      NSIZT1 =IRPDPD(1,8+ISPIN)
      NSIZT2 =IRPDPD(1,11-ISPIN)
C
C I000 HOLDS F TARGET IN EQUATION ABOVE.
C I010 HOLDS FIRST T IN EQUATION ABOVE.
C I020 HOLDS SECOND T IN EQUATION ABOVE.
C I030 HOLDS INDIVIDUAL A1 IRREP OF BLOCKED INTEGRAL LIST.
C
      I000=1
      I010=I000+NTOTTAR*IINTFP
      IF(IUHF.EQ.0)THEN
       I020=I010
      ELSE
       I020=I010+NSIZT1*IINTFP
      ENDIF
      I030=I020+NSIZT2*IINTFP
      CALL GETLST(ICORE(I010),1,1,1,ISPIN,LISTT1)
      IF(IUHF.NE.0)CALL GETLST(ICORE(I020),1,1,1,3-ISPIN,LISTT2)
      NWDSZ1=IRPDPD(1,ISYTYP(1,LISTW1))
      NWDSZ2=IRPDPD(1,ISYTYP(1,LISTW2))
      NWDIS1=IRPDPD(1,ISYTYP(2,LISTW1))
      NWDIS2=IRPDPD(1,ISYTYP(2,LISTW2))
      NSIZF =NSIZT1
      I040=I030+NWDSZ1*NWDIS1*IINTFP
      IF(I040.GT.MAXCOR)CALL INSMEM('MAKFME',I040,MAXCOR)
      IF(bRedundant) THEN
        CALL GETLST(ICORE(I030),1,NWDIS1,2,1,LISTW1)
      ELSE
        CALL GETLST_NR(ICORE(I030),ICORE(I040),MAXCOR-I040,LISTW1,1)
      ENDIF        
      CALL XGEMM('N','N',1,NTOTTAR,NSIZT1,ONE,ICORE(I010),
     &           1,ICORE(I030),NWDSZ1,ZILCH,ICORE(I000),1)
      I040=I030+NWDSZ2*NWDIS2*IINTFP
      IF(I040.GT.MAXCOR)CALL INSMEM('MAKFME',I040,MAXCOR)
      IF(bRedundant) THEN
        CALL GETLST(ICORE(I030),1,NWDIS2,2,1,LISTW2)
      ELSE
        CALL GETLST_NR(ICORE(I030),ICORE(I040),MAXCOR-I040,LISTW2,1)
      ENDIF      
      CALL XGEMM('N','N',1,NTOTTAR,NSIZT2,ONE ,ICORE(I020),
     &           1,ICORE(I030),NWDSZ2,ONE  ,ICORE(I000),1)
c      CALL UPDMOI(1,NTOTTAR,ISPIN,LISTF,0,0)
      CALL PUTLST(ICORE(I000),1,1,1,ISPIN,LISTF)
      RETURN
      END
