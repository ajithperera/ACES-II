      SUBROUTINE T1G5AB(LT,Z,G,MAXDIS,T1A,T1B,POP1,POP2,VRT1,VRT2,
     &                  DISSYLT,DISSYG,NUMSYLT,NUMSYG,
     &                  LISTL,LISTT,LISTG,IRREP,ISPIN,TMP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DISSYLT,DISSYG,DIRPRD,POP1,POP2,VRT1,VRT2
      DOUBLE PRECISION LT(NUMSYLT*DISSYLT)
      DIMENSION Z(NUMSYLT*NUMSYG)
      DIMENSION G(DISSYG*MAXDIS),T1A(*),T1B(*)
      DIMENSION TMP(1),POP1(8),POP2(8),VRT1(8),VRT2(8)
C
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
C
      DATA AZERO,ONE,ONEM,HALFM /0.0D0,1.0D0,-1.0D0,-0.5D0/
C
C  GET LAMBDAS L(Mn,Ce) FROM LISTL AND TRANSPOSE
C  LAMBDA:   C,e : M,n   ---> M,n ; C,e
C
      CALL GETTRN(LT,TMP,DISSYLT,NUMSYLT,1,IRREP,LISTL)
C
C  FOR ISPIN = 2 , TRANSPOSE     M,n ; E,c --> M,n ; c,E
C
      IF(ISPIN.EQ.2) THEN
       CALL SYMTR1(IRREP,VRT2,VRT1,NUMSYLT,LT,TMP,TMP(1+NUMSYLT),
     &             TMP(1+2*NUMSYLT))
      ENDIF
C
      CALL ZERO(Z,NUMSYLT*NUMSYG)
C
C   PERFORM NOW MULTIPLICATION
C
      IOFFT=1
      IOFFL=1
      IOFFZ=1
      DO 100 IRREPJ=1,NIRREP
C
C  GET POPULATIONS FOR E AND I
C
       NOCCJ=POP2(IRREPJ)
       NVRTJ=VRT2(IRREPJ)
C
C  GET IRREPI AND POPULATIOn FOR C
C
       IRREPI=DIRPRD(IRREP,IRREPJ)
C
       NVRTI=VRT1(IRREPI)
C
       IF(MIN(NOCCJ,NVRTJ,NVRTI).NE.0) THEN
C
        CALL XGEMM('N','N',NUMSYLT*NVRTI,NOCCJ,NVRTJ,ONE,LT(IOFFL),
     &             NUMSYLT*NVRTI,T1B(IOFFT),NVRTJ,AZERO,Z(IOFFZ),
     &             NUMSYLT*NVRTI)
       ENDIF 
C
C  UPDATE OFFSETS
C
       IOFFT=IOFFT+NVRTJ*NOCCJ
       IOFFL=IOFFL+NVRTJ*NVRTI*NUMSYLT
       IOFFZ=IOFFZ+NVRTI*NOCCJ*NUMSYLT
C
100   CONTINUE
C
C  SECOND MULTIPLICATION, BUT FOR ISPIN =2 TRANSPOSE FIRST LAST TWO INDICES
C
      IF(ISPIN.EQ.2) THEN
       CALL SYMTR1(IRREP,VRT1,POP2,NUMSYLT,Z,TMP,TMP(1+NUMSYLT),
     &             TMP(1+2*NUMSYLT)) 
      ENDIF
C
C GET NOW T AMPLITUDES AND FORM TAU AMPLITUDES
C
      CALL GETLST(LT,1,NUMSYLT,1,IRREP,LISTT)
C
      IF(ISPIN.EQ.1) THEN
       CALL FTAU(LT,T1A,T1B,DISSYLT,NUMSYLT,POP1,POP2,VRT1,VRT2,IRREP,
     &           3,ONE)
      ELSE
       CALL FTAU(LT,T1B,T1A,DISSYLT,NUMSYLT,POP2,POP1,VRT2,VRT1,IRREP,
     &           3,ONE)
      ENDIF
C
C   PERFORM NOW MULTIPLICATION, BUT FIRST GET G 
C
      IOFFLIST=1
      IOFFZ=1
      NLEFT=NUMSYG
C
1     CONTINUE
C
       NREAD=MIN(NLEFT,MAXDIS)
       NLEFT=NLEFT-NREAD
C
       CALL GETLST(G,IOFFLIST,NREAD,1,IRREP,LISTG)
C
       CALL XGEMM('N','N',DISSYG,NREAD,NUMSYLT,HALFM,LT,DISSYLT,
     &            Z(IOFFZ),NUMSYLT,ONE,G,DISSYG)
C
C  EVERYTHING DONE, SAVE G ON LISTG
C
       CALL PUTLST(G,IOFFLIST,NREAD,1,IRREP,LISTG)
C
       IOFFZ=IOFFZ+NUMSYLT*NREAD
       IOFFLIST=IOFFLIST+NREAD
C
      IF(NLEFT.NE.0) GO TO 1
C
      RETURN
      END
