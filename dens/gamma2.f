       SUBROUTINE GAMMA2(ICORE,MAXCOR,IUHF,LISTOFF)
C
C THIS ROUTINE COMPUTES THE GAMMA INTERMEDIATE 2:
C
C
C  MBPT(3) : G(AB,CD) = 1/8 SUM M,N T[1](MN,AB) T[1](MN,CD)
C
C  MBPT(4) : G(AB,CD) = 1/8 SUM M,N {T[1](MN,AB) + T[2](MN,AB)} T[1](MN,CD)
C
C                      + 1/8 SUM M,N T[1](MN,AB) T[2](MN,CD)
C
C   WHICH GIVES :
C
C       G(AB<CD) = 1/16 P(AB,CD) SUM M,N [2 T2(MN,AB) - T1(MN,AB)] T1(MN,CD)
C
C  CCD :     G(AB,CD) = 1/16 P(AB,CD) SUM M,N T(MN,AB) L(MN,CD)
C
C  QCISD :   G(AB,CD) = 1/16 P(AB,CD) SUM M,N T(MN,AB) L(MN,CD)
C
C  CCSD :  G(AB,CD) = 1/16 P(AB,CD) SUM M,N TAU(MN,AB) L(MN,CD) 
C
C  
C  NOTE THAT IN THIS ROUINE ACTUALLY 4*G(AB,CD) IS CALCULATED
C
C  THE FOLLOWING SPIN CASES HAVE TO BE CONSIDERED :
C
C            G(AB,CD)  T1(MN,AB) T1(MN,CD)
C
C             AAAA        AAAA      AAAA      (UHF ONLY)
C             BBBB        BBBB      BBBB      (UHF ONLY)
C             ABAB        ABAB      ABAB      (RHF AND UHF)
C
C  THIS ROUTINE USES EXPLICITELY SYMMETRY
C
CEND
C
C CODED AUGUST/90  JG
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,POP,VRT
      LOGICAL ISAME,MBPT4,CC,TAU
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC
C
      DIMENSION ICORE(MAXCOR)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF1BB,NF2AA,NF2BB
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      DATA ONE /1.0D+0/
C
      MXCOR=MAXCOR
C
      CC=CCD.OR.CCSD.OR.QCISD
      MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ 
C
C  FOR CCSD TAU AMPLITUDES ARE REQUIRED, ALLOCATE MEMORY 
C
      TAU=.FALSE.
      IF(CCSD) THEN
       TAU=.TRUE.
       I0TA=MXCOR+1-NTAA*IINTFP
       MXCOR=MXCOR-NTAA*IINTFP
       CALL GETLST(ICORE(I0TA),1,1,1,1,90)
       IF(IUHF.EQ.0) THEN
        I0TB=I0TA
       ELSE
        I0TB=I0TA-NTBB*IINTFP
        MXCOR=MXCOR-NTBB*IINTFP
        CALL GETLST(ICORE(I0TB),1,1,1,2,90)
       ENDIF
      ENDIF 
C     
      IF(IUHF.EQ.1) THEN
C
C      AAAA AND BBBB SPIN CASES
C
      DO 1000 ISPIN=1,2   
C
      IF(ISPIN.EQ.1) THEN
       I0T=I0TA
      ELSE
       I0T=I0TB
      ENDIF
C
      LISTG=130+ISPIN+LISTOFF
      IF(MBPT3.OR.UCC) THEN
       LISTT1=43+ISPIN
       LISTT2=43+ISPIN
       ISAME=.TRUE.
       FACT=ONE
      ELSE IF(MBPT4) THEN
       LISTT1=43+ISPIN
       LISTT2=143+ISPIN
       ISAME=.FALSE.
       FACT=ONE
      ELSE IF(CC) THEN
       LISTT1=43+ISPIN
       LISTT2=143+ISPIN
       ISAME=.FALSE.
       FACT=ONE
      ENDIF
C
C LOOP OVER IRREPS.
C
       DO 100 IRREP=1,NIRREP
C
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT1))
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT1))
        I001=1
        IF(ISAME) THEN
         I002=I001
        ELSE
         I002=I001+IINTFP*NUMSYT*DISSYT
        ENDIF
        I003=I002+IINTFP*NUMSYT*DISSYT
c        IF(MIN(NUMSYT,DISSYT).NE.0)THEN
         MAXSIZE=(MXCOR-I003)/IINTFP
         IF(MAXSIZE.GT.DISSYT) THEN
C  
C         IN CORE VERSION
C
          CALL G2ALL(ICORE(I001),ICORE(I002),ICORE(I003),MAXSIZE,
     &               ICORE(I0T),ICORE(I0T),TAU,MBPT4,FACT,ISPIN,ISAME,
     &               DISSYT,NUMSYT,LISTT1,LISTT2,LISTG,IRREP)
         ELSE
C
C         OUT OF CORE VERSION
C
          CALL INSMEM('G2ALL',DISSYT,MAXSIZE)
         ENDIF
c        ENDIF
100    CONTINUE
1000   CONTINUE
      ENDIF
C
C       AB SPIN CASE
C
      LISTG=133+LISTOFF
      IF(MBPT3.OR.UCC) THEN
       LISTT1=46  
       LISTT2=46
       ISAME=.TRUE.
       FACT=ONE
      ELSE IF(MBPT4) THEN
       LISTT1=46
       LISTT2=146
       ISAME=.FALSE.
       FACT=ONE
      ELSE IF(CC) THEN
       LISTT1=46
       LISTT2=146
       ISAME=.FALSE.
       FACT=ONE
      ENDIF
C
C      LOOP OVER IRREPS.
C
       DO 110 IRREP=1,NIRREP
C
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT1))
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT1))
        I001=1
        IF(ISAME) THEN
         I002=I001
        ELSE
         I002=I001+IINTFP*NUMSYT*DISSYT
        ENDIF
        I003=I002+IINTFP*NUMSYT*DISSYT
c        IF(MIN(NUMSYT,DISSYT).NE.0)THEN
         MAXSIZE=(MXCOR-I003)/IINTFP
         IF(MAXSIZE.GT.DISSYT) THEN
C
C         IN CORE VERSION
C
          CALL G2ALL(ICORE(I001),ICORE(I002),ICORE(I003),MAXSIZE,
     &               ICORE(I0TA),ICORE(I0TB),TAU,MBPT4,FACT,3,
     &               ISAME,DISSYT,NUMSYT,LISTT1,LISTT2,LISTG,IRREP)
         ELSE
          CALL INSMEM('G2ALL',DISSYT,MAXSIZE)
         ENDIF
c        ENDIF
110    CONTINUE
C
      TWO=1.D0
      IF(IUHF.EQ.0)
     &   CALL CHECKGAM1(ICORE,133,233,TWO,IUHF,2,VRT)
      IF(IUHF.EQ.1) THEN
       CALL CHECKGAM(ICORE,133,233,TWO)
       CALL CHECKGAM(ICORE,131,231,TWO)
       CALL CHECKGAM(ICORE,132,232,TWO)
      ENDIF
C
      RETURN
      END
