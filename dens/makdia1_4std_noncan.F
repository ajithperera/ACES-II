      SUBROUTINE MAKDIA1_4STD_NONCAN(XIA,ICORE,MAXCOR,IUHF,bRedundant)
C
C   THIS ROUTINE COMPUTES THE OCCUPIED-VIRTUAL BLOCK OF THE
C   RELAXED DENSITY MATRIX. XIA IS PASSED IN AND OVERWRITTEN 
C   BY DIA
C
C   THE Z-VECTOR EQUATION ARE SOLVED ITERATIVELY, FOR RHF AN
C   FULL IN CORE ALGORITHMN SHOULD BE ALWAYS POSSIBLE, FOR UHF
C   HOWEVER, WE IMPLEMENTED BOTH AN INCORE AND OUTCORE VERSION
C
CEND
C
C  CODED JULY AND AUGUST/90  JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL INCORE,DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,
     &        TRIP1,TRIP2,GABCD,RELAXED,TRULY_NONHF,ONLYM,ONLYP
      logical bRedundant
      INTEGER DIRPRD,POP,VRT,POPRHF,VRTRHF,POPDOC,VRTDOC
      DIMENSION XIA(1),ICORE(MAXCOR)
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
c      COMMON/QRHFINF/POPRHF(8),VRTRHF(8),NOSH1(8),NOSH2(8),
c     &               POPDOC(8),VRTDOC(8),NAI,N1I,N2A,
c     &               NUMISCF,NUMASCF
      COMMON/QRHFINF/POPRHF(8),VRTRHF(8),NOSH1(8),NOSH2(8),
     &               POPDOC(8),VRTDOC(8),NAI,N1I,N2A,
c&line mod
     &               NUMISCF,NUMASCF,ISPINP,ISPINM,IQRHF
      COMMON/FLAGS/ IFLAGS(100)
      COMMON/SYMPOP2/IRPDPD(8,22)
      COMMON/SYMPOP/IRP_DM(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYM2/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/DERIV/DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,
     &             TRIP2,GABCD,RELAXED,TRULY_NONHF
      common /dropgeo/ ndrgeo
C
C
      DATA TOL/0.0D+0/

      KMAX=IFLAGS(31)
      CONV=10.0**(-IFLAGS(30))
C
C  ALLOCATE CORE MEMORY FOR THE ORBITAL ENERGIES
C
      MXCOR=MAXCOR

      NORBA=NOCCO(1)+NVRTO(1)
      IEVAA=MXCOR+1-IINTFP*NORBA
      MXCOR=MXCOR-IINTFP*NORBA
      CALL GETREC(20,'JOBARC','SCFEVALA',IINTFP*NORBA,ICORE(IEVAA))

      IF(IUHF.EQ.1) THEN
         NORBB=NOCCO(2)+NVRTO(2)
         IEVBB=IEVAA-IINTFP*NORBB
         MXCOR=MXCOR-IINTFP*NORBB
         CALL GETREC(20,'JOBARC','SCFEVALB',IINTFP*NORBB,ICORE(IEVBB))
      ENDIF

      IF(IUHF.EQ.0) THEN

         NUMSYW=IRPDPD(1,ISYTYP(1,19)) 
         I010=1
         I020=I010+IINTFP*NUMSYW*NUMSYW
         I030=I020+IINTFP*NUMSYW*NUMSYW

         IF(I030.LT.MXCOR) THEN

c When single_store is on, the ICORE array starting from the address
c I030 is used to generate the redundant list. At the end of the ICORE
c array we have orbital energies and we should make sure that we do not
c overwrite them during getlst_nr. This is easily accomplished by simply
c passing the MXCOR (see above), and checking memory requirements
c against it. A. Perera, 03/2005.

          CALL MKARHF1(ICORE(I010),ICORE(I020),ICORE(I030),MXCOR-I030+1,
     &                 bRedundant)
         ELSE
           CALL INSMEM('MKARHF',I030,MXCOR)
         ENDIF 
C
C  SCALE XIA WITH THE ORBITAL ENERGY DENOMINATOR
C
         CALL FORMZ(XIA,ICORE(IEVAA),POP(1,1),VRT(1,1),NOCCO(1))

         I030=I020+IINTFP*MAX(NUMSYW,2*KMAX)
         I040=I030+IINTFP*(KMAX+1)*NUMSYW
         I050=I040+IINTFP*KMAX*KMAX
         I060=I050+IINTFP*(KMAX+1)
         I070=I060+IINTFP*NF1(1)
         I080=I070+IINTFP*NF2(1)

         IF(I080.LT.MXCOR) THEN

           CALL LINEQ_4STD_NONCAN_RHF(ICORE(I010),XIA,ICORE(I020),
     &                  ICORE(I030),
     &                  ICORE(I040),
     &                  ICORE(I050),ICORE(IEVAA),ICORE(I060), 
     &                  ICORE(I070),NF1(1),NF2(2),CONV,NUMSYW,KMAX,
     &                  NOCCO(1))
         ELSE
           CALL INSMEM('MAKDIA1_4STD_NONCAN',I080,MXCOR)
         ENDIF
C
      ELSE IF (IUHF.EQ.1) THEN

C
C  CHECK IF WE ARE RUNNING QRHF, ROHF, OR SIMPLE UHF
C
C
         NUMSYWA=IRPDPD(1,ISYTYP(2,19))
         NUMSYWB=IRPDPD(1,ISYTYP(2,20))

         I010=1
         I020=I010+IINTFP*(NUMSYWA*NUMSYWA+NUMSYWB*NUMSYWB
     &                      +NUMSYWA*NUMSYWB)
         IEND1=I020+IINTFP*MAX(NUMSYWA*NUMSYWA,NUMSYWB*NUMSYWB)
         I030=I020+IINTFP*MAX(NUMSYWA+NUMSYWB,2*KMAX) 
         I040=I030+IINTFP*(KMAX+1)*(NUMSYWA+NUMSYWB)
         I050=I040+IINTFP*KMAX*KMAX
         I060=I050+IINTFP*(KMAX+1)
         I070=I060+IINTFP*(NF1(1)+NF1(2))
         I080=I070+IINTFP*(NF2(1)+NF2(2))
         IEND2=I080+IINTFP*NT(2)
         I090=IEND2
         I100=IEND2
         I110=IEND2
         I120=IEND2
         I130=IEND2

         IF(MAX(IEND1,IEND2).LT.MXCOR) THEN
           INCORE=.TRUE.
           CALL MKAUHF(ICORE(I010),ICORE(I020),icore(I030),
     &                 mxcor-I030+1,bRedundant)
         ELSE
           INCORE=.FALSE.
           write(*,*) ' Sorry, no out-of-core algorithm available'
           CALL ERREX
         ENDIF
C
C
        CALL FORMZ(XIA,ICORE(IEVAA),POP(1,1),VRT(1,1),NOCCO(1))
        CALL FORMZ(XIA(1+NUMSYWA),ICORE(IEVBB),POP(1,2),VRT(1,2),
     &             NOCCO(2))
C
        CALL LINEQ_4STD_NONCAN_UHF(ICORE(I010),XIA,ICORE(I020),
     &                ICORE(I030),
     &                ICORE(I040),ICORE(I050),ICORE(IEVAA),
     &                ICORE(IEVBB),ICORE(I070),ICORE(I060),ICORE(I080),
     &                ICORE(I090),ICORE(I100),ICORE(I110),ICORE(I120),
     &                ICORE(I130),NF2(1)+NF2(2),NF1(1)+NF1(2),NT(2),
     &                CONV,NUMSYWA,NUMSYWB,KMAX,
     &                NOCCO(1),NOCCO(2),INCORE,IUHF)
C
      ENDIF

      RETURN
      END
