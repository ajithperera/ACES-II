      SUBROUTINE XINT9(XIA,DVO,ICORE,MAXCOR,IUHF,bRedundant)
C
C THIS SUBROUTINE CALCULATES THE X(AI) CONTRIBUTION 
C DUE TO THE OCCUPIED-VIRTUAL BLOCK OF THE DENSITY
C MATRIX. THIS TERM IS REQUIRED ONLY IN NON-HF CASES
C
C      X(AI)=  SUM E,M (<IE//AM> + <IM//AE> D(E,M)
C
C (INDEPENDENT OF THE CONSIDERED METHOD)
C
C
C   SPIN CASES :
C
C      X(AI)         D(EM)      <IE//AM>     <IM//AE>
C
C      AA             AA          AAAA         AAAA  
C                     BB          ABAB         ABAB
C
C      BB             AA          BABA         BABA
C                     BB          BBBB         BBBB
C
C THIS ROUTINE USES EXPLICITELY SYMMETRY
C
CEND
C
C CODED   SEPTEMBER/90     JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DIRPRD,POP,VRT 
      logical bRedundant
      DIMENSION XIA(1),DVO(1),ICORE(MAXCOR)
      COMMON /SYM2/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2) 
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON /SHIFT/ ISHIFT 
C
      DATA ONE,TWO,ONEM /1.0D0,2.0D0,-1.0D0/
C
      MXCOR=MAXCOR 
C
      DO 1000 ISPIN=1,IUHF+1
C
       IF(ISPIN.EQ.1) THEN
        IOFFX=1
        IOFFDA=1
        IOFFDB=1+NT(1)*IUHF
       ELSE
        IOFFX=1+NT(1)
        IOFFDA=1+NT(1)
        IOFFDB=1
       ENDIF
C
C  FIRST DO AAAA (BBBB) PART
C
C   THE INTEGRAL LISTS ARE
C   
C   A)     <AE//IM>   LIST : 19 (20) ORDERING     A,I ; E,M
C
C   B)  -  <AM//IE>   LIST : 23 (24) ORDERING     A,I ; E,M
C
C  WE NEED ONLY TO CONSIDER IRREP 1

       LISTW1=18+ISPIN + ISHIFT 
       LISTW2=22+ISPIN + ISHIFT 
C
       NSIZE=IINTFP*NT(ISPIN)*NT(ISPIN)
       IF(MXCOR.LE.NSIZE) CALL ERREX
C
       IF (bRedundant) THEN
          CALL GETLST(ICORE,1,NT(ISPIN),1,1,LISTW1)
       ELSE
          CALL GETLST_NR(ICORE,ICORE(1+NSIZE),MXCOR-NSIZE,
     &                   LISTW1,1)
       END IF
C
       CALL XGEMM('N','N',NT(ISPIN),1,NT(ISPIN),ONE,ICORE,NT(ISPIN),
     &            DVO(IOFFDA),NT(ISPIN),ONE,XIA(IOFFX),NT(ISPIN))
C
       CALL GETLST(ICORE,1,NT(ISPIN),1,1,LISTW2)
C
       CALL XGEMM('N','N',NT(ISPIN),1,NT(ISPIN),ONEM,ICORE,NT(ISPIN),
     &            DVO(IOFFDA),NT(ISPIN),ONE,XIA(IOFFX),NT(ISPIN))
C
C  NOW DO AABB (BBAA) PART
C
C   THE INTEGRAL IST ARE
C
C       2* <Ae//Im>   LIST : 18 (17) ORDERING      A,I ; e,m
C
C   WE NEED ONLY TO CONSIDER IRREP 1
C
       LISTW=19-ISPIN + ISHIFT 
C
       NSIZE=IINTFP*NT(ISPIN)*NT(3-ISPIN)
       IF(MXCOR.LE.NSIZE) CALL ERREX
C
       IF (bRedundant) THEN
          CALL GETLST(ICORE,1,NT(3-ISPIN),1,1,LISTW)
       ELSE
          CALL GETLST_NR(ICORE,ICORE(1+NSIZE),MXCOR-NSIZE,
     &                   LISTW,1)
       END IF
C
       CALL XGEMM('N','N',NT(ISPIN),1,NT(3-ISPIN),TWO,ICORE,NT(ISPIN),
     &            DVO(IOFFDB),NT(3-ISPIN),ONE,XIA(IOFFX),NT(ISPIN))
C
1000  CONTINUE
C
C  ALL DONE
C
      RETURN
      END
