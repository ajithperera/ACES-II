      SUBROUTINE XIA8AA(G,W,XIA,FACT,ISPIN,POP,VRT,DISSYT,NUMSYT,
     &                  DISSYW,NUMSYW,LISTG,LISTW,IRREP,TMP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYT,DISSYW,DIRPRD,POP,VRT
      DIMENSION G(DISSYT,1),W(NUMSYW,1),XIA(1),
     &          POP(8),VRT(8),TMP(1)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      common /dropgeo/ ndrgeo
C
      DATA ONE /1.D0/
C
C      PICK UP THE INTEGRALS REQUIRED
C
      CALL GETLST(G,1,NUMSYW,2,IRREP,LISTW)   
      CALL TRANSP(G,W,NUMSYW,DISSYW)
C
C EXPAND THE VIRT. VIRT. BLOCK SO THAT WE HAVE M<N,E,A
C
      CALL SYMEXP(IRREP,VRT,NUMSYW,W)
C
C  PICK UP THE G AMPLITUDES REQUIRED
C
      if (ndrgeo.eq.0) then
        CALL GETLST(G,1,NUMSYT,1,IRREP,LISTG)
      else  
        CALL GETGO6U(G,TMP,1,NUMSYT,1,IRREP,LISTG,ispin,listg,dissyt)
      endif 
C
C  TRANSPOSE THE LAST TWO INDICES ( M<N,I,E -->  M<N,E,I )
C
      CALL SYMTR1(IRREP,POP,VRT,DISSYT,G,TMP,TMP(1+DISSYT),
     &            TMP(1+2*DISSYT))
C
C  PERFORM MULTIPLICATION 
C
C  JOFFG AND JOFFW OFFSET IN THE RIGHTMOST BLOCKS OF G AND W
C  IOFF OFFSET IN IOV
C
      IOFF=1
      JOFFG=1
      JOFFW=1
      DO 90 IRREPJ=1,NIRREP
C          
C        GET NUMBER OF VIRTUAL AND OCCUPIED ORBITALS FOR IRREPJ     
C
       NOCCJ=POP(IRREPJ)
       NVRTJ=VRT(IRREPJ)
C
C        DETERMINE IRREPI WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREP
C
       IRREPI=DIRPRD(IRREP,IRREPJ)
C
C        GET NUMBER OF VIRTUAL ORBITALS FOR IRREPI
C
       NVRTI=VRT(IRREPI)
C
C        IF NVRTI OR NVRTJ EQUAL ZERO, NOTHING TO COMPUTE
C
       IF(MIN(NVRTI,NVRTJ,NOCCJ).NE.0) THEN
C
          CALL XGEMM('T','N',NVRTJ,NOCCJ,NVRTI*DISSYT,FACT,
     &             W(1,JOFFW),NVRTI*DISSYT,G(1,JOFFG),
     &             NVRTI*DISSYT,ONE,XIA(IOFF),NVRTJ)
       ENDIF
C
C  UPDATE OFFSETS
C
       JOFFG=JOFFG+NOCCJ*NVRTI
       JOFFW=JOFFW+NVRTI*NVRTJ
       IOFF=IOFF+NVRTJ*NOCCJ
90    CONTINUE
C
      RETURN
      END
