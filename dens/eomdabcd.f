
      SUBROUTINE EOMDABCD(ICORE,MAXCOR,IUHF)
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ZILCH,TWO
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0T(2),I0R(2)
C
C CALCULATION OF THE ABCD CONTRIBUTION TO
C THE EOM-CCSD TWO-PARTICLE DENSITY MATRIX
C
C G(AB,CD) = 1/8 R(MN,AB) L(MN,CD) + 1/2 R(M,A) L(MN,CD) T(N,B)
C
C          = 1/8 {R(MN,AB) + R(M,A) T(N,B) - R(M,B) T(N,A)
C
C                 - R(I,F) T(J,E) - T(I,F) R(J,E)} L(KL,EF)
C
C NOTE THAT 4*G(IJ,KL) IS CALCULATED
C
CEND 
C
C CODED JFS SEPTEMBER/93
C
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA ZILCH,ONE,TWO /0.D0,1.D0,2.D0/
C
      IONE=1
      CALL GETREC(20,'JOBARC','STATESYM',IONE,IRREPX)
C
C READ IN T1 AND R1 AMPLITUDES
C
      I0T(1)=1
      I0T(2)=I0T(1)+IRPDPD(1,9)*IINTFP*IUHF
      I0R(1)=I0T(2)+IRPDPD(1,10)*IINTFP
      I0R(2)=I0R(1)+IRPDPD(IRREPX,9)*IINTFP*IUHF
      ISTART=I0R(2)+IRPDPD(IRREPX,10)*IINTFP
C
      CALL GETLST(ICORE(I0T(1)),1,1,1,1,90)
      CALL GETLST(ICORE(I0R(1)),1,1,1,3,490)
      IF(IUHF.EQ.1) THEN
       CALL GETLST(ICORE(I0T(2)),1,1,1,2,90)
       CALL GETLST(ICORE(I0R(2)),1,1,1,4,490)
      ENDIF
C 
C LOOP OVER ALL SPIN CASES
C
      DO 10 ISPIN=3,3-2*IUHF,-1
       LISTR=460+ISPIN
       LISTL=443+ISPIN
       LISTG=230+ISPIN
       LISTT=43+ISPIN
C  
C LOOP OVER SYMMETRY BLOCKS OF TARGET ARRAY
C
       DO 100 IRREP=1,NIRREP
        IRREP2=DIRPRD(IRREP,IRREPX)
        IF(IUHF.EQ.0)THEN
         DISSYG=IRPDPD(IRREP,19)
        ELSE
         DISSYG=IRPDPD(IRREP,ISYTYP(1,LISTG))
        ENDIF
        NUMDSG=IRPDPD(IRREP,ISYTYP(2,LISTG))
        DISSYL=IRPDPD(IRREP,ISYTYP(1,LISTL))
        NUMDSL=IRPDPD(IRREP2,ISYTYP(2,LISTL))
        DISSYR=IRPDPD(IRREP,ISYTYP(1,LISTR))
        NUMDSR=IRPDPD(IRREP2,ISYTYP(2,LISTR))
C
        I000=ISTART
        I010=I000+NUMDSR*DISSYR*IINTFP
        CALL GETLST(ICORE(I000),1,NUMDSR,1,IRREP2,LISTR)
C
C ADD IN R*T TAU-LIKE PIECE
C
        IF(ISPIN.LE.2) THEN
         CALL DTAU(IRREP,IRREP2,1,IRREPX,ICORE(I000),
     &             ICORE(I0T(ISPIN)),ICORE(I0T(ISPIN)),
     &             ICORE(I0R(ISPIN)),ICORE(I0R(ISPIN)),ISPIN,ONE)
        ELSE
         CALL DTAU(IRREP,IRREP2,1,IRREPX,ICORE(I000),
     &             ICORE(I0T(1)),ICORE(I0T(2)),ICORE(I0R(1)),
     &             ICORE(I0R(2)),ISPIN,ONE)
        ENDIF
C
C READ IN L AMPLITUDES AND FORM CONTRACTION
C
        I020=I010+IINTFP*DISSYL*NUMDSL
        CALL GETLST(ICORE(I010),1,NUMDSL,1,IRREP2,LISTL)
C
C DO GENERAL OUT-OF-CORE ALGORITHM
C
        CORLFT=MAXCOR-I020+1
        IF(DISSYG.NE.0)THEN
         NINCOR=CORLFT/(DISSYG*IINTFP)
        ELSE
         NINCOR=DISSYG
        ENDIF
        NLEFT =NUMDSG
        NFIRST=1
        IOFFL=I010
1       NBATCH=MIN(NLEFT,NINCOR)
        CALL XGEMM('N','T',DISSYG,NBATCH,NUMDSR,ONE,ICORE(I000),DISSYR,
     &             ICORE(IOFFL),NBATCH,ZILCH,ICORE(I020),DISSYG)
        CALL PUTLST(ICORE(I020),NFIRST,NBATCH,1,IRREP,LISTG)
        IOFFL=IOFFL+NBATCH*IINTFP
        NLEFT=NLEFT-NBATCH
        NFIRST=NFIRST+NBATCH
        IF(NLEFT.NE.0)GOTO 1
C
100    CONTINUE
C
10    CONTINUE
C
      RETURN
      END
