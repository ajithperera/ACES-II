  
      SUBROUTINE SAVI(AIOOA,AIOOB,AIVVA,AIVVB,
     &                AIOVA,AIOVB,SCR,IUHF)
C
C THIS SUBROUTINE SAVES THE INTERMEDIATE MATRIX I(P,Q) ON THE
C GAMLAM FILE. THIS IS ONLY REQUIRED FOR SECOND DERIVATIVE
C CALCULATIONS>
C
C THE LISTS WRITTEN ARE:
C
C  AIOOA    1,161
C  AIOOB    2,161   UHF AND ROHF ONLY
C  AIVVA    3,161
C  AIVVB    4,161   UHF AND ROHF ONLY
C  AIOVA    5,161  
C  AIOVB    6,161   UHF AND ROHF ONLY
C
CEND
C
C IN THE CURRENT VERSION THE HF CONTRIBUTION HAS TO BE SUBTRACTED
C
C CODED MAY/91 JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL YESNO
      LOGICAL DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,TRIP2,
     &        GABCD,RELAXED,TRULY_NONHF
      INTEGER POP,VRT,DIRPRD
      CHARACTER*80 FNAME
      DIMENSION AIOOA(1),AIOOB(1),AIVVA(1),AIVVB(1),
     &          AIOVA(1),AIOVB(1),SCR(1)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/DERIV/DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,
     &             TRIP2,GABCD,RELAXED,TRULY_NONHF
C
      DATA ONE/1.D0/
C
c      CALL GFNAME('GAMLAM  ',FNAME,ILENGTH)
c      INQUIRE(FILE=FNAME(1:ILENGTH),EXIST=YESNO)
c      IF(YESNO) THEN
       IENTER=0
       IOFF=0
c      ELSE
c       IENTER=1
c       IOFF=-1
c      ENDIF
C
      DO 100 ISPIN=1,IUHF+1
C
       CALL UPDMOI(1,NF1(ISPIN),ISPIN,161,IENTER,IOFF)
       IENTER=0
       IOFF=0
       CALL UPDMOI(1,NF2(ISPIN),2+ISPIN,161,IENTER,IOFF)
       CALL UPDMOI(1,NT(ISPIN),4+ISPIN,161,IENTER,IOFF)
C
100   CONTINUE
C
      IEVAL=1 
      ISCR=IEVAL+NOCCO(1)+NVRTO(1)
      CALL GETREC(20,'JOBARC','SCFEVALA',
     &            IINTFP*(NOCCO(1)+NVRTO(1)),SCR)
      IF(ROHF) THEN
       CALL GETLST(SCR(ISCR),1,1,1,5,91)
       CALL SAXPY(NF1(1),ONE,AIOOA,1,SCR(ISCR),1)
      ELSE
c YAU : old
c      CALL ICOPY(NF1(1)*IINTFP,AIOOA,1,SCR(ISCR),1)
c YAU : new
       CALL DCOPY(NF1(1),AIOOA,1,SCR(ISCR),1)
c YAU : end
      ENDIF
      IOFF1=IEVAL
      IOFF2=ISCR
      DO 20 IRREP=1,NIRREP
      NOCC=POP(IRREP,1)
      CALL SAXPY(NOCC,ONE,SCR(IOFF1),1,SCR(IOFF2),NOCC+1)
      IOFF1=IOFF1+NOCC
      IOFF2=IOFF2+NOCC*NOCC
20    CONTINUE
      CALL PUTLST(SCR(ISCR),1,1,1,1,161)
      CALL PUTLST(AIVVA,1,1,1,3,161)
      CALL PUTLST(AIOVA,1,1,1,5,161)
C
      IF(IUHF.NE.0) THEN
C
       IEVAL=1 
       ISCR=IEVAL+NOCCO(2)+NVRTO(2)
       CALL GETREC(20,'JOBARC','SCFEVALB',
     &             IINTFP*(NOCCO(2)+NVRTO(2)),SCR)
       IF(ROHF) THEN
        CALL GETLST(SCR(ISCR),1,1,1,6,91)
        CALL SAXPY(NF1(2),ONE,AIOOB,1,SCR(ISCR),1)
       ELSE
c YAU : old
c       CALL ICOPY(NF1(2)*IINTFP,AIOOB,1,SCR(ISCR),1)
c YAU : new
        CALL DCOPY(NF1(2),AIOOB,1,SCR(ISCR),1)
c YAU : end
       ENDIF
       IOFF1=IEVAL
       IOFF2=ISCR
       DO 30 IRREP=1,NIRREP
        NOCC=POP(IRREP,2)
        CALL SAXPY(NOCC,ONE,SCR(IOFF1),1,SCR(IOFF2),NOCC+1)
        IOFF1=IOFF1+NOCC
        IOFF2=IOFF2+NOCC*NOCC
30     CONTINUE
       CALL PUTLST(SCR(ISCR),1,1,1,2,161)
       CALL PUTLST(AIVVB,1,1,1,4,161)
       CALL PUTLST(AIOVB,1,1,1,6,161)
C
      ENDIF
C
      RETURN
      END
