      SUBROUTINE IO5AB(G,W,T,AIOOA,AIOOB,FACT,ISPIN,POP1,POP2,VRT1,VRT2,
     &                  DISSYT,NUMSYT,DISSYW,NUMSYW,LISTG,LISTW,IRREP,
     &                  TMP,IUHF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYT,DISSYW,DIRPRD,POP1,POP2,VRT1,VRT2
      DIMENSION G(NUMSYT,1),W(NUMSYW,1),T(DISSYW,1),AIOOA(1),
     &          AIOOB(1),TMP(1),POP1(8),POP2(8),VRT1(8),VRT2(8) 
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      common /dropgeo/ ndrgeo
C
      DATA ONE,ONEM,TWO /1.0D0,-1.D0,2.D0/
C
C      PICK UP FIRST THE INTEGRALS
C      AND TRANSPOSE THEM
C
      CALL GETLST(T,1,NUMSYW,1,IRREP,LISTW)
      CALL TRANSP(T,W,NUMSYW,DISSYW)
C
C
C PCIK UP G AMPLITUDES AND TRANSPOSE THEM
C
      if (ndrgeo.eq.0) then
        CALL GETLST(T,1,NUMSYT,1,IRREP,LISTG)
      else  
       if (iuhf.eq.1 .and. ispin.eq.2) then 
        CALL GETGO6R(T,G,1,NUMSYT,1,IRREP,LISTG,ISPIN,listw,dissyt)
       else 
        CALL GETGO6(T,G,1,NUMSYT,1,IRREP,LISTG,ISPIN,listw,dissyt)
       endif 
      endif 
        CALL TRANSP(T,G,NUMSYT,DISSYT)
C
C  SPIN ADAPTED CODE FOR RHF
C
      IF(IUHF.EQ.0) THEN
       CALL SPINAD1(IRREP,POP1,NUMSYW,W,TMP,TMP(1+NUMSYW))
c       CALL SYMTRA(IRREP,POP1,POP2,NUMSYW,W,G)
c       CALL SSCAL(NUMSYW*DISSYW,TWO,W,1)
c       CALL SAXPY(NUMSYW*DISSYW,ONEM,G,1,W,1)
      ENDIF
C
C  PERFORM MULTIPLICATION
C
C  JOFF OFFSET IN THE RIGHTMOST BLOCK OF G AND W
C  IOFF OFFSET IN AIVV
C
      IOFF=1
      JOFF=1
      DO 90 IRREPI=1,NIRREP
C          
C        GET NUMBER OF OCCUPIED ORBITALS FOR IRREPJ
C
       NOCCI=POP2(IRREPI)
C
C        DETERMINE IRREPI WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREP
C
       IRREPJ=DIRPRD(IRREP,IRREPI)
C
C        GET NUMBER OF OCCUPIED ORBITALS FOR IRREPI
C
       NOCCJ=POP1(IRREPJ)
C
C        IF NOCCJ OR NOCCI EQUAL ZERO, NOTHING TO COMPUTE
C
       IF(MIN(NOCCI,NOCCJ).NE.0) THEN
C
          CALL XGEMM('T','N',NOCCI,NOCCI,NUMSYT*NOCCJ,FACT,
     &               W(1,JOFF),NOCCJ*NUMSYT,G(1,JOFF),
     &               NOCCJ*NUMSYT,ONE,AIOOB(IOFF),NOCCI)
       ENDIF
C
C  UPDATE THE OFFSETS
C
       JOFF=JOFF+NOCCI*NOCCJ
       IOFF=IOFF+NOCCI*NOCCI
90    CONTINUE
C
C
C  TRANSPOSE THE LAST TWO INDICES FOR THE AA CONTRIBUTION
C
        CALL SYMTR1(IRREP,POP1,POP2,NUMSYT,G,TMP,TMP(1+NUMSYT),
     &              TMP(1+2*NUMSYT))
        CALL SYMTR1(IRREP,POP1,POP2,NUMSYW,W,TMP,TMP(1+NUMSYW),
     &              TMP(1+2*NUMSYW))
C
C  PERFORM MULTIPLICATION
C
C  JOFF OFFSET IN THE RIGHTMOST BLOCK OF G AND W
C  IOFF OFFSET IN AIVV
C
      IOFF=1
      JOFF=1
      DO 190 IRREPI=1,NIRREP
C          
C        GET NUMBER OF OCCUPIED ORBITALS FOR IRREPJ
C
       NOCCI=POP1(IRREPI)
C
C        DETERMINE IRREPI WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREP
C
       IRREPJ=DIRPRD(IRREP,IRREPI)
C
C        GET NUMBER OF OCCUPIED ORBITALS FOR IRREPI
C
       NOCCJ=POP2(IRREPJ)
C
C        IF NOCCJ OR NOCCI EQUAL ZERO, NOTHING TO COMPUTE
C
       IF(MIN(NOCCI,NOCCJ).NE.0) THEN
C
          CALL XGEMM('T','N',NOCCI,NOCCI,NUMSYT*NOCCJ,FACT,
     &               W(1,JOFF),NOCCJ*NUMSYT,G(1,JOFF),
     &               NOCCJ*NUMSYT,ONE,AIOOA(IOFF),NOCCI)
       ENDIF
C
C  UPDATE THE OFFSETS
C
       JOFF=JOFF+NOCCI*NOCCJ
       IOFF=IOFF+NOCCI*NOCCI
190    CONTINUE
      RETURN
      END
