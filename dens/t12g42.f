      SUBROUTINE T12G42(W,Z,SCR,MAXCOR,T1A,DISSYW,DISSYZ,
     &                  DISTMP,NUMSYW,
     &                  NUMSYZ,NUMTMP,NOCCSQ,POP,VRT, LISTW,
     &                  LISTZ1,LISTZ2,FACT,IRREP,IUHF,bRedundant)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYW,DISSYZ,DISTMP,DIRPRD,POP,VRT
      logical bRedundant
      DIMENSION W(DISSYW,NUMSYW),Z(DISTMP,NUMSYZ),
     &          T1A(1), POP(8),VRT(8),SCR(MAXCOR)
C     
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      integer         iintln, ifltln, iintfp, ialone, ibitwd
      common /machsp/ iintln, ifltln, iintfp, ialone, ibitwd
C 
      DATA AZERO,ONE,HALF /0.D0,1.D0,0.5D0/
C
      IF(MIN(NUMSYZ,DISSYZ).EQ.0) RETURN

C GET LAMBDAS AND TRANSPOSE LAST TWO INDICES
C
      IF(bRedundant) THEN
       CALL GETLST(Z,1,NUMSYW,2,IRREP,LISTW)
      ELSE
       CALL GETLST_NR(Z,SCR,MAXCOR*IINTFP,LISTW,IRREP)
      ENDIF
C
      CALL SYMTRA(IRREP,VRT,POP,DISSYW,Z,W)
C
C ZERO TARGET ARRAY
C
      CALL ZERO(Z,DISTMP*NOCCSQ)
C
C PERFORM FIRST MULTIPLICATION
C
      IOFFT=1
      IOFFZ=1
      IOFFW=1
      DO 100 IRREPJ=1,NIRREP
       NVRTJ=VRT(IRREPJ)
       NOCCJ=POP(IRREPJ)
       IRREPI=DIRPRD(IRREPJ,IRREP)
       NOCCI=POP(IRREPI) 
       IF(NOCCI.NE.0.AND.NOCCJ.NE.0.AND.NVRTJ.NE.0) THEN
C
        CALL XGEMM('N','N',DISSYW*NOCCI,NOCCJ,NVRTJ,ONE,W(1,IOFFW),
     &             DISSYW*NOCCI,T1A(IOFFT),NVRTJ,AZERO,Z(1,IOFFZ),
     &             DISSYW*NOCCI)
       ENDIF
       IOFFT=IOFFT+NOCCJ*NVRTJ
       IOFFZ=IOFFZ+NOCCJ*NOCCI
       IOFFW=IOFFW+NOCCI*NVRTJ
100   CONTINUE
C
C TRANSPOSE AGAIN LAST TWO INDICES
C
      CALL SYMTRA(IRREP,POP,POP,DISSYW,Z,W)
C
C ZERO TARGET ARRAY
C
      CALL ZERO(Z,NUMSYZ*DISSYZ)
C
C PERFORM SECOND MULTIPLICATION
C
      IOFFT=1
      IOFFW=1
      IOFFZ=1
      DO 200 IRREPJ=1,NIRREP
       NVRTJ=VRT(IRREPJ)
       NOCCJ=POP(IRREPJ)
       IRREPI=DIRPRD(IRREPJ,IRREP)
       NOCCI=POP(IRREPI)
       IF(NOCCI.NE.0.AND.NOCCJ.NE.0.AND.NVRTJ.NE.0) THEN
C
        CALL XGEMM('N','T',DISSYW*NOCCI,NVRTJ,NOCCJ,FACT,W(1,IOFFW),
     &             DISSYW*NOCCI,T1A(IOFFT),NVRTJ,AZERO,Z(1,IOFFZ),
     &             DISSYW*NOCCI)
       ENDIF
       IOFFT=IOFFT+NOCCJ*NVRTJ
       IOFFZ=IOFFZ+NOCCI*NVRTJ
       IOFFW=IOFFW+NOCCI*NOCCJ
200   CONTINUE
C
C TRANSPOSE AGAIN THE LAST TWO INDICES 
C
      CALL SYMTRA(IRREP,POP,VRT,DISSYW,Z,W)
C
C  SYMMETRIZE THE GAMM4 CONTRIBUTION
C
      IF(IUHF.EQ.0) THEN
       CALL SYMMET2(W,NUMSYZ)
C 
C  UPDATE GAMMA4 ON LISTZ
C
       CALL GETLST(Z,1,NUMSYZ,1,IRREP,LISTZ1)
       CALL VADD(Z,Z,W,NUMSYZ*DISSYZ,ONE)
       CALL PUTLST(Z,1,NUMSYZ,1,IRREP,LISTZ1)
      ELSE
       CALL GETLST(Z,1,NUMSYZ,1,IRREP,LISTZ1)
       CALL VADD(Z,Z,W,NUMSYZ*DISSYZ,HALF)
       CALL PUTLST(Z,1,NUMSYZ,1,IRREP,LISTZ1)
C
       CALL TRANSP(W,Z,NUMSYZ,DISSYZ)
       CALL GETLST(W,1,DISSYZ,1,IRREP,LISTZ2)
       CALL VADD(W,W,Z,NUMSYZ*DISSYZ,HALF)
       CALL PUTLST(W,1,DISSYZ,1,IRREP,LISTZ2)
      ENDIF

C
      RETURN
      END
