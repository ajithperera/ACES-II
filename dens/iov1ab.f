      SUBROUTINE IOV1AB(G,W,AIOV,FACT,ISPIN,POP1,POP2,
     &                  VRT1,VRT2,DISSYT,NUMSYT,DISSYW,
     &                  NUMSYW,LISTG,LISTW,IRREP,
     &                  TMP,IUHF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYT,DISSYW,DIRPRD,POP1,POP2,VRT1,VRT2
      DIMENSION G(NUMSYT,1),W(DISSYW,1),AIOV(1),TMP(1)
      DIMENSION POP1(8),POP2(8),VRT1(8),VRT2(8) 
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      common /dropgeo/ ndrgeo
C
      DATA ONE,ONEM,TWO /1.0D0,-1.D0,2.D0/
C
C PICK UP FIRST THE G AMPLITUDES
C
       if (ndrgeo.eq.0) CALL GETTRN(G,TMP,DISSYT,NUMSYT,1,IRREP,LISTG)
       if (ndrgeo.eq.1) 
     x   CALL GETGO1T(G,TMP,DISSYT,numsyt,1,irrep,listg,ispin) 
C
C  USE SPIN ADAPTED SCHEME FOR RHF
C
      IF(IUHF.EQ.0) THEN
       CALL SPINAD3(IRREP,POP1,NUMSYT,DISSYT,G,TMP,TMP(1+DISSYT))
      ENDIF
C
C  GET INTEGRALS
C
      CALL GETLST(W,1,NUMSYW,2,IRREP,LISTW)
      write(6,"(a,i3)")  "Listw:", listw
      call checksum("intov1-ab-W",w,dissyw*numsyw)
C
C  TRANSPOSE THE LAST TWO INDICES IN THE AA CASE
C
      IF(ISPIN.EQ.1) THEN
       CALL SYMTR1(IRREP,VRT1,VRT2,NUMSYT,G,TMP,TMP(1+NUMSYT),
     &             TMP(1+2*NUMSYT))
       CALL SYMTR1(IRREP,POP1,VRT2,DISSYW,W,TMP,TMP(1+DISSYW),
     &              TMP(1+2*DISSYW))
      ENDIF
      call checksum("intov1-ab-W",w,dissyw*numsyw)
      call checksum("intov1-ab-G",g,dissyt*numsyt)
C
C PERFORM MULTIPLICATION
C
C JOFFW AND JOFFG OFFSET IN THE VIRTUAL-VIRTUAL BLOCK OF G AND W
C IOFF OFFSET IN AIVV
C
      IOFF=1
      JOFFW=1
      JOFFG=1
      DO 90 IRREPI=1,NIRREP
C          
C GET NUMBER OF VIRTUAL ORBITALS FOR IRREPJ
C
       NVRTI=VRT1(IRREPI)
       NOCCI=POP1(IRREPI)
C
C DETERMINE IRREPI WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREP
C
       IRREPJ=DIRPRD(IRREP,IRREPI)
C
C GET NUMBER OF VIRTUAL ORBITALS FOR KRREP
C
       NVRTJ=VRT2(IRREPJ)
C
C IF NVRTI OR NVRTJ EQUAL ZERO, NOTHING TO COMPUTE
C
       IF(MIN(NVRTJ,NVRTI,NOCCI).NE.0) THEN
C
          CALL XGEMM('T','N',NVRTI,NOCCI,NUMSYT*NVRTJ,FACT,
     &               G(1,JOFFG),NVRTJ*NUMSYT,W(1,JOFFW),
     &               NVRTJ*NUMSYT,ONE,AIOV(IOFF),NVRTI)
       ENDIF
C
C UPDATE THE OFFSETS
C
       JOFFW=JOFFW+NOCCI*NVRTJ
       JOFFG=JOFFG+NVRTJ*NVRTI
       IOFF=IOFF+NVRTI*NOCCI
90    CONTINUE
C
      RETURN
      END
