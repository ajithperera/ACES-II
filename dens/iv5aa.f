      SUBROUTINE IV5AA(G,W,T,AIVV,FACT,ISPIN,POP,VRT,DISSYT,NUMSYT,
     &                  DISSYW,NUMSYW,LISTG,LISTW,IRREP,TMP,NUMMAX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYT,DISSYW,DIRPRD,POP,VRT
      DIMENSION G(1),W(1),T(DISSYT,1),AIVV(1),
     &          POP(8),VRT(8),TMP(1)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      common /dropgeo/ ndrgeo
C
      DATA ONE /1.D0/
C
      IOFFSET=1
      NUMLEFT=NUMSYW
      IF (NDRGEO.NE.0) THEN
       CALL GETINO4U(TMP,NUMSYT,DISSYT,LISTG,IRREP,ISPIN)
       NIKI = 1
       IODRSET = 1
      ENDIF 
C
C
1     CONTINUE
C
C      PICK UP THE G AMPLITUDES AND INTEGRALS REQUIRED
C      AND TRANSPOSE G AND W
C
      NUMREAD=MIN(NUMLEFT,NUMMAX)
      NUMLEFT=NUMLEFT-NUMREAD
      if (ndrgeo.eq.0) then 
        CALL GETLST(T,IOFFSET,NUMREAD,1,IRREP,LISTG)
      else  
        CALL GETGO4UO(T,G,IODRSET,NUMREAD,1,IRREP,LISTG,
     X                         ispin,listg,dissyt,TMP,NIKI)
      endif 
      CALL TRANSP(T,G,NUMREAD,DISSYT)
C
      CALL GETLST(T,IOFFSET,NUMREAD,2,IRREP,LISTW)   
      IOFFSET=IOFFSET+NUMREAD
      CALL TRANSP(T,W,NUMREAD,DISSYW)
C
C  EXPAND THE VIRTUAL-VIRTUAL BLOCK OF G AND W
C
      CALL SYMEXP(IRREP,VRT,NUMREAD,G)
      CALL SYMEXP(IRREP,VRT,NUMREAD,W)
C
C  PERFORM MULTIPLICATION 
C
C  JOFF OFFSET IN THE RIGHTMOST BLOCKS OF G AND W
C  IOFF OFFSET IN IOV
C
      IOFF=1
      JOFF=1
      DO 90 IRREPJ=1,NIRREP
C          
C        GET NUMBER OF VIRTUAL ORBITALS FOR IRREPJ     
C
       NVRTJ=VRT(IRREPJ)
C
C        DETERMINE IRREPI WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREP
C
       IRREPI=DIRPRD(IRREP,IRREPJ)
C
C        GET NUMBER OF VIRTUAL ORBITALS FOR IRREPI
C
       NVRTI=VRT(IRREPI)
C
C        IF NVRTJ OR NVRTI EQUAL ZERO, NOTHING TO COMPUTE
C
       IF(MIN(NVRTI,NVRTJ).NE.0) THEN
C
        CALL XGEMM('T','N',NVRTJ,NVRTJ,NVRTI*NUMREAD,FACT,
     &             W(JOFF),NVRTI*NUMREAD,G(JOFF),
     &             NVRTI*NUMREAD,ONE,AIVV(IOFF),NVRTJ)
       ENDIF
C
C  UPDATE OFFSETS
C
       JOFF=JOFF+NVRTI*NVRTJ*NUMREAD
       IOFF=IOFF+NVRTJ*NVRTJ
90    CONTINUE
C
      IF(NUMLEFT.NE.0) GO TO 1
      RETURN
      END
