      SUBROUTINE LINEQ_4STD_NONCAN_RHF(AMAT,XIA,XIANEW,XUPDATE,
     &                  ASMALL,ASQUARE,EVAL,FIJ,FAB,LENIJ,LENAB,
     &                  CONV,N,KMAX,NOCC)
C
C  THIS PROGRAM SOLVES THE LINEAR EQUATION
C
C  SUM B,J Z(B,J) (A(BJ,AI) + (EA-EI) DELTA(BA) DELTA(IJ)) = X(AI)
C
C  USING AN ITERATIVE EXPANSION IN A SUBSPACE SPANNED BY THE
C  VECTORS X(BJ) A'**N (BJ,AI). THE METHOD HAS BEEN FIRST USED
C  BY POPLE AND COWORKERS FOR SOLVING THE CPHF-EQUATIONS AND
C  IS HERE USED TO SOLVE THE Z-VECTOR EQUATION WITHIN CPHF
C  THEORY. THE PROGRAM FOLLOWS CLOSELY THE IMPLEMENTATION OF
C  POPLE AND COWORKERS IN G82 AND J.GAUSS IMPLEMENTATION FOR
C  SOLVING THE Z-VECTOR EQUATION IN COLOGNE.
C 
C  THIS VERSION USES EXPLICITELY SYMMETRY (ONLY THE BLOCK OF 
C  THE A-MATRIX WHICH CORRESPONDS TO IRREP 1 IS NEEDED) AND
C  IS EFFICIENTLY VECTORIZED. 
C
C  AMAT .... CONTAINS THE MODIFIED A-MATRIX AS PROVIDED BY MKARHF
C  XIA  .... X(AI) AS INPUT, D(AI) AS OUTPUT
C  XIANEW .. SCRATCH VECTOR OF LENGTH MAX(N,2*KMAX)
C  XUPDATE . CONTAINS ALL THE EXPANSION VECTOR (LENGTH KMAX*N)
C  ASMALL .. THE A MATRIX WITHIN THE ITERATIVE SUBSPACE ( LENGTH KMAX**2)
C  ASQUARE . A VECTOR OF LENGTH KMAX+1 WHICH HOLDS THE NORMS OF THE 
C            EXPANSION VECTORS
C  EVAL .... EIGENVALUES
C  CONV .... CONVERGENCE CRITERION
C  N ....... NUMBER OF ELEMENTS IN X(AI) OR D(AI)
C  KMAX .... MAXIMUM NUMBER OF ITERATION ALLOWED IN THE ITERATIVE EXPANSION
C  NOCC .... NUMBER OF OCCUPIED ORBITALS
C
CEND
C 
C CODED AUGUST/90  JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DIRPRD,POP,VRT
      DIMENSION DET(2)
      DIMENSION AMAT(N,N),XIA(N), XIANEW(N),XUPDATE(N,KMAX),
     &          ASMALL(KMAX,KMAX),ASQUARE(N),EVAL(1),
     &          FAB(LENAB), FIJ(LENIJ)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYM2/POP(8,2),VRT(8,2),NJUNK(6)
      COMMON /SHIFT/ ISHIFT
      common /dropgeo/ ndrgeo
C
      DATA AZERO,ONE/0.D+0,1.0D+0/
C
      CUTOFF=CONV*CONV
      TOL=AZERO
C
C     CLEAR SMALL A MATRIX
C
      CALL ZERO(ASMALL,KMAX*KMAX)
C
C     NORMALIZE INITIAL VECTOR XIA AND COPY INTIAL VECTOR TO XUPDATE
C
      ANORM=SDOT(N,XIA,1,XIA,1)
C
C     DETERMINE SCALE FACTOR
C
      ASCALE=SQRT(ANORM)
C
C  IF INITIAL VECTOR EQUAL ZERO, WRITE WARNING
C
      IF(ASCALE/N.LT.CUTOFF) THEN
       WRITE(6,*) ' Warning from Lineqz1 : The initial vector is zero.'
       ASCALE=ONE
      ENDIF
C
C     SCALE INITIAL VECTOR WITH ASCALE
C
      SCALE=ONE/ASCALE
      CALL SSCAL(N,SCALE,XIA,1)
C
      ASQUARE(1)=ONE
C
      CALL DCOPY(N,XIA,1,XUPDATE(1,1),1)

C Now pick up the Fock matrix elements.
       
       CALL GETLST(FIJ(1),1,1,1,5,91+ISHIFT)
       CALL GETLST(FAB(1),1,1,1,5,92+ISHIFT)
C
C    LOOP OVER K UNTIL THE NEW VECTOR IS LINEAR DEPENDENT OR
C    KMAX IS REACHED
C
      DO 1000 K=1,KMAX
C
      CALL XGEMM('N','N',1,N,N,ONE,XIA,1,AMAT,N,AZERO,XIANEW,1)
      CALL ADDFX_4RHF(XIA, XIANEW, FAB, FIJ, LENAB, LENIJ, N,
     &           N)
#ifdef _DEBUG_LVLM
      Write(6,*) "After correcting for F elements"
      Write(6,"(5(F20.10))") (Xia(i), i=1, n)
      Write(6,*)
      Write(6,"(5(F20.10))") (Xianew(i), i=1, n)
#endif
 
      CALL FORMZ(XIANEW,EVAL,POP(1,1),VRT(1,1),NOCC)
C
C    FORM ELEMENTS OF MATRIX ASMALL
C
      DO 100 L=1,K
      ASMALL(L,K)=SDOT(N,XUPDATE(1,L),1,XIANEW,1)
100   CONTINUE
      IF(K.GT.1) ASMALL(K,K-1)=ASQUARE(K)
C
C    ORTHOGONALIZE XIANEW TO PREVIOUS VECTORS
C
      DO 200 L=1,K
      SCALE=-ASMALL(L,K)/ASQUARE(L)
      CALL SAXPY(N,SCALE,XUPDATE(1,L),1,XIANEW,1)
200   CONTINUE
C
      ASQUARE(K+1)=SDOT(N,XIANEW,1,XIANEW,1)
      CALL DCOPY(N,XIANEW,1,XIA,1)
      CALL DCOPY(N,XIANEW,1,XUPDATE(1,K+1),1)
C
C  CHECK FOR CONVERGENCE OF THE CREATED ITERATIVE SUBSPACE
C
      TEST=ASQUARE(K+1)/N
      IF(TEST.LE.CUTOFF) THEN
       ASQUARE(K+1)=ONE
C
C      ITERATIVE EXPANSION HAS CONVERGED, EXIT THE LOOP
C
       GO TO 300
      ENDIF
1000  CONTINUE
C
C  IF WE REACH THIS POINT, THE ITERATIVE EXPANSION HAS NOT CONVERGED
C
      WRITE(6,3000)
3000  FORMAT( '  The iterative expansion of D(ai) did not ',
     &           'converge, abort !')
      WRITE(6,3001) TEST
3001  FORMAT( '  The convergence is : ',E20.10)
      CALL ERREX
C
C   NOW INVERT THE ASMALL MATRIX
C
  300 CONTINUE
C
      WRITE(6,3002) K
3002  FORMAT('  The iterative expansion of D(ai)',
     &           ' converged after ',I3,' iterations.')
C
C  SUBTRACT THE DIAGONAL PART 
C
C  NOTE THE ASMALL MATRIX CONSISTS OF SEVERAL PARTS
C
C  FIRST THE UPPER TRIANGLE WITH L LT K
C 
C    THAT'S SIMPLY    Y(L)  A Y(K)
C
C  THE DIAGONAL ELEMENTS
C
C   THAT'S   Y(K) A Y(K) - Y(K) Y(K)
C
C  THE LOWER TRIANGLE WITH L GT K+1
C
C  THESE ARE ZERO SINCE Y(L) SPANS A DIMENSION NOT COVERED BY A Y(K)
C
C  THE LOWER TRIANGLE WITH L EQ K+1
C
C  THESE ARE  Y(K+1) A(K) Y(K) =  Y(K+1) Y(K+1) = ASQUARE(K+1)
C
      DO 310 I=1,K
       ASMALL(I,I)=ASMALL(I,I)-ASQUARE(I)
310   CONTINUE
C
C  INVERT A (XIANEW IS HERE USED AS SCRATCH AND NO LONGER USED
C  FOR HOLDING A*Y
C
      CALL MINV(ASMALL,K,KMAX,XIANEW,DET,AZERO,0,1)
C
C     NOW FORM SOLUTION IN XIA
C
      CALL DGEMV('N',N,K,
     &           -ASCALE,XUPDATE,N,
     &                   ASMALL, 1,
     &           0.d0,   XIA,    1)
C
C   ALL DONE, RETURN
C
      RETURN
      END
