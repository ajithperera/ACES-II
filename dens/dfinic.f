      SUBROUTINE DFINIC(DOO,DVV,XVO,AIOV,ICORE,
     &                 MAXCOR)
C
C  THIS ROUTINE CALCULATES SOME ADDITIONAL TERMS IN
C  THE CASE OF PERTURBED SEMI-CANONICAL ORBITALS
C  FOR ROHF-CC AND MBPT METHODS
C
C   THERE ARE ACTUALLY THE FOLLOWING TERMS TO CONSIDER
C
C    I(I,A) <= 
C
C              - SUM E f(I,E) D(A,E)     (NON-HF)
C
C    - I(A,I) <=  
C
C                  + SUM M f(A,M) D(M,I)  (NON-HF)
CEND
C
C HACKED UP MARCH/91 JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,TRIP2,
     &        GABCD,RELAXED,TRULY_NONHF
      DIMENSION ICORE(MAXCOR),DOO(1),DVV(1),AIOV(1),XVO(1)
      INTEGER DIRPRD,POP,VRT
      DIMENSION I0FAI(2),I0OO(2),I0VV(2),I0VO(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/DERIV/DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,
     &             TRIP2,GABCD,RELAXED,TRULY_NONHF
C
      DATA ONE,ONEM /1.0D+0, -1.0D+0/
C
      MXCOR=MAXCOR
C
C  GET THE FOCK MATRICES
C
      I0FAI(1)=MXCOR+1-IINTFP*NT(1)   
      I0FAI(2)=I0FAI(1)-IINTFP*NT(2)
      MXCOR=MXCOR-IINTFP*(NT(1)+NT(2))
      CALL GETLST(ICORE(I0FAI(1)),1,1,1,5,93)
      CALL GETLST(ICORE(I0FAI(2)),1,1,1,6,93)    
C
      I0OO(1)=1
      I0VV(1)=1
      I0VO(1)=1
      I0OO(2)=1+NF1(1)
      I0VV(2)=1+NF2(1)
      I0VO(2)=1+NT(1)
C
C   LOOP OVER ALL SPINS
C
      DO 1000 ISPIN=1,2
C
C    CALCULATE SECOND CONTRIBUTION TO I(I,A)
C
C    I(I,A) <= - SUM E f(E,I) D(A,E)
C
       IOFFI=I0VO(ISPIN)
       IOFFD=I0VV(ISPIN)
       IOFFF=I0FAI(ISPIN)
C
       DO 200 IRREP=1,NIRREP
C
        NOCC=POP(IRREP,ISPIN)
        NVRT=VRT(IRREP,ISPIN)
C
        IF(MIN(NOCC,NVRT).NE.0) THEN
C
         CALL XGEMM('N','N',NVRT,NOCC,NVRT,ONEM,DVV(IOFFD),NVRT,
     &              ICORE(IOFFF),NVRT,ONE,AIOV(IOFFI),NVRT)
         CALL XGEMM('N','N',NVRT,NOCC,NVRT,ONEM,DVV(IOFFD),NVRT,
     &              ICORE(IOFFF),NVRT,ONE,XVO(IOFFI),NVRT)
        ENDIF
C
C  UPDATE OFFSETS
C
        IOFFI=IOFFI+NOCC*NVRT
        IOFFD=IOFFD+NVRT*NVRT
        IOFFF=IOFFF+NOCC*NVRT*IINTFP
C
200    CONTINUE 
C
C    CALCULATE SECOND CONTRIBUTION TO - I(A,I)
C
C    - I(A,I) <=  SUM E f(A,M) D(M,I)
C
       IOFFI=I0VO(ISPIN)
       IOFFD=I0OO(ISPIN)
       IOFFF=I0FAI(ISPIN)
C
       DO 400 IRREP=1,NIRREP
C
        NOCC=POP(IRREP,ISPIN)
        NVRT=VRT(IRREP,ISPIN)
C
        IF(MIN(NOCC,NVRT).NE.0) THEN
C
         CALL XGEMM('N','N',NVRT,NOCC,NOCC,ONE,ICORE(IOFFF),NVRT,
     &              DOO(IOFFD),NOCC,ONE,XVO(IOFFI),NVRT)
        ENDIF
C
C  UPDATE OFFSETS
C
        IOFFI=IOFFI+NOCC*NVRT
        IOFFD=IOFFD+NOCC*NOCC
        IOFFF=IOFFF+NVRT*NOCC*IINTFP
C
400    CONTINUE 
C
1000  CONTINUE
C
C  ALL DONE , RETURN
C 
      RETURN
      END
