










       SUBROUTINE PDCC_INTV1(AIVV,ICORE,MAXCOR,IUHF)
C
C
C THIS ROUTINE CALCULATES THE FISRT TERM OF THE VIRTUAL-VIRTUAL BLOCK
C OF THE INTERMEDIATE I
C
C THE TERM IS GIVEN BY
C
C  I(AB) = - SUM M,N,E G(MN,BE) <MN//AE>
C
C  THE SPIN CASES ARE
C
C   AA       AAAA AAAA
C            ABAB ABAB
C   BB       BBBB BBBB
C            BABA BABA
C
C  NOTE THAT IN MBPT(2) THE GAMMA AMPLITUDES ARE GIVEN BY
C
C  G(MN,BE) = 1/2 T(MN,BE)
C
C IN MBPT(3) THE GAMMA AMPLITIDES ARE GIVEN BY
C
C  G(MN,BE) = 1/2 T(MN,BE)
C
C IN MBPT(4) THE GAMMA AMPLITUDES ARE GIVEN BY
C
C  G(MN,BE) = 1/2 T3(MN,BE) + 1/2 X(MN,BE)
C
C IN CCD GAMMA IS GIVEN BY
C
C  G(MN,BE) = 1/4 T(MN,BE) + 1/4 L(MN,BE) + 1/4 X(MN,BE)
C
C
C THIS SUBROUTINE USES EXPLICITELY SYMMETRY
C
CEND
C
C CODED   JULY/90    JG
C
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,POP,VRT
      LOGICAL LARGE
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC
      LOGICAL DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,TRIP2,GABCD,
     &        RELAXED,TRULY_NONHF
      DIMENSION ICORE(MAXCOR),AIVV(1)
      COMMON/SYM2/POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF1BB,NF2AA,NF2BB
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYMPOP2/IRPDPD(8,22)
      COMMON/SYMPOP/IRP_DM(8,22),ISYTYP(2,500),NTOT(18) 
      COMMON/DERIV/DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,TRIP2,
     &             GABCD,RELAXED,TRULY_NONHF
      COMMON /SHIFT/ ISHIFT 
C
      DATA ONE,ONEM /1.0D+0,-1.0D+0/
C
      MXCOR=MAXCOR
C
       DO 1000 ISPIN=1,IUHF+1
C
C      AA AND BB SPIN CASES
C
       IF(ISPIN.EQ.1) THEN
        IOFF=1
       ELSE
        IOFF=NF2AA+1
       ENDIF
       IF(IUHF.EQ.1) THEN
C
C       AA AND BB SPIN CASES
C
C
C  LISTG:   GAMMA AMPLITUDES
C  LISTW:   INTEGRALS
C  FACT:    PREFACTOR
C
        LISTW=13+ISPIN + ISHIFT 
        IF(MBPT2) THEN
         LISTG=43+ISPIN 
         FACT=ONEM
        ELSE IF(MBPT3.AND.(.NOT.ROHF)) THEN
         LISTG=60+ISPIN
         FACT=ONEM
        ELSE 
         LISTG=213+ISPIN
         FACT=ONEM
        ENDIF
C
C
C LOOP OVER IR REPS OF MN BLOCK (THE SAME IRREPS AS THE AF AND EF BLOCKS C HAVE
C
       DO 100 IRREP=1,NIRREP
C
C DETERMINE LENGTH OF EXPANDED VIRTUAL-VIRTUAL BLOCK
C
        NVRT2SQ=0
        DO 110 IRREPJ=1,NIRREP
         NVRT2SQ=NVRT2SQ+VRT(IRREPJ,ISPIN)*
     &                   VRT(DIRPRD(IRREPJ,IRREP),ISPIN)
110     CONTINUE
C
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTW)) 
        I001=1
        I002=I001+IINTFP*NUMSYT*NVRT2SQ
        I003=I002+IINTFP*NUMSYT*NVRT2SQ
        I004=I003+IINTFP*NUMSYT*DISSYT
        IF(MIN(NUMSYT,DISSYT).NE.0) THEN
         IF(I004.LT.MXCOR) THEN
C  
C         IN CORE VERSION
C
C
       CALL PDCC_IV1AA(ICORE(I001),ICORE(I002),ICORE(I003),AIVV(IOFF),
     &               FACT,ISPIN,POP(1,ISPIN),VRT(1,ISPIN),DISSYT,
     &               NUMSYT,LISTG,LISTW,IRREP)
         ELSE
          CALL INSMEM('IV1AA',I004,MXCOR)
         ENDIF
        ELSE
        ENDIF      
100    CONTINUE
       ENDIF
C
C       AB SPIN CASE
C
       LISTW=16 + ISHIFT 
       LARGE=.TRUE.
       IF(MBPT2) THEN
        LISTG=46
        FACT=ONEM
        LARGE=.FALSE.
       ELSE IF(MBPT3.AND.(.NOT.ROHF)) THEN
        LISTG=63
        FACT=ONEM
       ELSE
        LISTG=216
        FACT=ONEM
       ENDIF
C
C      LOOP OVER IRREPS.
C
       DO 200 IRREP=1,NIRREP
C
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTW))
        I001=1
        I002=I001+IINTFP*NUMSYT*DISSYT
        I003=I002+IINTFP*NUMSYT*DISSYT
        IF(LARGE) THEN
         I004=I003+IINTFP*NUMSYT*DISSYT
        ELSE
         I004=I003
        ENDIF
        IF(MIN(NUMSYT,DISSYT).NE.0) THEN
         I005=I004+3*IINTFP*MAX(DISSYT,NUMSYT)
         IF(I005.LE.MXCOR) THEN
C
C         IN CORE VERSION
C
      CALL PDCC_IV1AB(ICORE(I001),ICORE(I002),ICORE(I003),AIVV(IOFF),
     &               FACT,ISPIN,POP(1,ISPIN),POP(1,3-ISPIN),
     &               VRT(1,ISPIN),VRT(1,3-ISPIN),DISSYT,NUMSYT,
     &               LISTG,LISTW,IRREP,ICORE(I004),IUHF,LARGE)
         ELSE
          CALL INSMEM('IV1AB',I005,MXCOR)
         ENDIF
        ELSE
C
C
        ENDIF
200   CONTINUE
1000  CONTINUE
      RETURN
      END
