      SUBROUTINE IV1AA(G,W,T,AIVV,FACT,ISPIN,POP,VRT,DISSYT,NUMSYT,
     &                 LISTG,LISTW,IRREP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYT,DIRPRD,POP,VRT
      DIMENSION T(DISSYT,1),G(NUMSYT,1),W(NUMSYT,1),AIVV(1),
     &          POP(8),VRT(8)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      common /dropgeo/ ndrgeo
C
      DATA ONEM,ONE,HALF /-1.0D0,1.D0,0.5D0/
C
C      PICK UP THE G AMPLITUDES AND INTEGRALS REQUIRED
C
      if (ndrgeo.eq.0) CALL GETLST(T,1,NUMSYT,1,IRREP,LISTG)
      if (ndrgeo.eq.1) 
     x     CALL GETGO1U(T,G,1,NUMSYT,1,IRREP,LISTG,ispin,listw,dissyt)
      CALL TRANSP(T,G,NUMSYT,DISSYT)
      CALL SYMEXP(IRREP,VRT,NUMSYT,G)
      CALL GETLST(T,1,NUMSYT,2,IRREP,LISTW)   
      CALL TRANSP(T,W,NUMSYT,DISSYT)
      CALL SYMEXP(IRREP,VRT,NUMSYT,W)
C
C  PERFORM MULTIPLICATION 
C
C  JOFF OFFSET IN THE VIRTUAL-VIRTUAL BLOCK OF G AND W
C  IOFF OFFSET IN DVV
C
      IOFF=1
      JOFF=1
      DO 90 IRREPJ=1,NIRREP
C          
C        GET NUMBER OF VIRTUAL ORBITALS FOR IRREPJ     
C
       NVRTJ=VRT(IRREPJ)
C
C        DETERMINE IRREPI WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREP
C
       IRREPI=DIRPRD(IRREP,IRREPJ)
C
C        GET NUMBER  OF VIRTUAL ORBITALS FOR IRREPI
C
       NVRTI=VRT(IRREPI)
C
C        IF NVRTI OR NVRTJ EQUAL ZERO, NOTHING TO COMPUTE
C
       IF(MIN(NVRTI,NVRTJ).NE.0) THEN
C
        CALL XGEMM('T','N',NVRTJ,NVRTJ,NVRTI*NUMSYT,FACT,
     &             W(1,JOFF),NVRTI*NUMSYT,G(1,JOFF),
     &             NVRTI*NUMSYT,ONE,AIVV(IOFF),NVRTJ)
       ENDIF
C
C  UPDATE OFFSETS
C
       JOFF=JOFF+NVRTI*NVRTJ
       IOFF=IOFF+NVRTJ*NVRTJ
90    CONTINUE
C
      RETURN
      END
