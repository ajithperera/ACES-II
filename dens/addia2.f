
      SUBROUTINE ADDIA2(DVV,AIOV,FAI)
C
C   THIS ROUTINE CALCULATES THE FOLLOWING CONTRIBUTIONS TO THE
C   INTERMEDIATES
C
C    I(I,A) <=  - SUM E f(I,E) D(A,E)     (NON-HF)
C
CEND
C
C CODED MAY/91 JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION DVV(1),AIOV(1),FAI(1)
      LOGICAL DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,TRIP2,
     &        GABCD,RELAXED,TRULY_NONHF
      INTEGER DIRPRD,POP,VRT
      DIMENSION I0FAI(2),I0FAE(2),I0FMI(2),I0OO(2),I0VV(2),I0VO(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/DERIV/DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,TRIP1,
     &             TRIP2,GABCD,RELAXED,TRULY_NONHF
CJDW KKB stuff
C     COMMON /SYM/   POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON /SYM2/  POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON /SHIFT/ ISHIFT
CJDW END
C
      DATA ONE,ONEM /1.0D+0, -1.0D+0/
C
C  GET THE FOCK MATRICES
C
CJDW ISHIFT for KKB
      CALL GETLST(FAI,1,1,1,5,93+ISHIFT)
      CALL GETLST(FAI(1+NT(1)),1,1,1,6,93+ISHIFT)    
CJDW END
C
      I0OO(1)=1
      I0VV(1)=1
      I0VO(1)=1
      I0OO(2)=1+NF1(1)
      I0VV(2)=1+NF2(1)
      I0VO(2)=1+NT(1)
C
C   LOOP OVER ALL SPINS
C
      DO 1000 ISPIN=1,2
C
C    CALCULATE SECOND CONTRIBUTION TO I(I,A)
C
C    I(I,A) <= - SUM E f(E,I) D(A,E)
C
       IOFFI=I0VO(ISPIN)
       IOFFD=I0VV(ISPIN)
       IOFFF=I0VO(ISPIN)
C
       DO 200 IRREP=1,NIRREP
C
        NOCC=POP(IRREP,ISPIN)
        NVRT=VRT(IRREP,ISPIN)
C
        IF(MIN(NOCC,NVRT).NE.0) THEN
C
         CALL XGEMM('N','N',NVRT,NOCC,NVRT,ONEM,DVV(IOFFD),NVRT,
     &              FAI(IOFFF),NVRT,ONE,AIOV(IOFFI),NVRT)
        ENDIF
C
C  UPDATE OFFSETS
C
        IOFFI=IOFFI+NOCC*NVRT
        IOFFD=IOFFD+NVRT*NVRT
        IOFFF=IOFFF+NOCC*NVRT
C
200    CONTINUE 
C
1000  CONTINUE
C
C  ALL DONE , RETURN
C 
      RETURN
      END
