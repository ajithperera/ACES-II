       SUBROUTINE DIOV21(DIOV,ICORE,MAXCOR,IUHF,IP,ANTI)
C
C
C THIS ROUTINE CALCULATES THE FIRST TERM OF THE OCCUPIED-VIRTUAL BLOCK
C OF THE INTERMEDIATE I
C
C THE GENERAL FORMULA IS
C
C 1. TERM :  - SUM M,E,F   d G(AE,MN)/d chi <MN||IE>
C
C          SPIN TYPES : AA   AAAA AAAA
C                            ABAB ABAB
C                       BB   BBBB BBBB
C                            BABA BABA
C
C  NOTE THAT FOR MBPT(2) GAMMA IS EXPLIITELY GIVEN BY
C
C  d G(JM,EF)/ d chi = 1/2 d T1(JM,EF) / d chi
C
C  FOR MBPT(3) GAMMA IS EXPLICITELY
C
C  d G(JM,EF)/ d chi = 1/2 d T2(JM,EF) / d chi 
C
C  FOR MBPT(4) GAMMA IS GIVEN BY
C
C  d G(JM,EF)/ d chi = 1/2 d T3(JM,EF) / d chi + 1/2  d X(IJ,AB) / d chi
C
C  FOR CCD GAMMA IS GIVEN BY
C
C  d G(JM,EF)/ d chi = 1/4 d T(JM,EF)/ d chi + 1/4 d L(JM,EF)/ d chi 
C 
C                      + 1/4 d X(JM,EF) / d chi
C
C THIS SUBROUTINE USES EXPLICITELY SYMMETRY
C
CEND
C
C CODED  SEPT/91 JG UNIVERSITY KARLSRUHE
C 
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYG,DISSYW,POP,VRT
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,ANTI
      DIMENSION ICORE(MAXCOR),DIOV(1)
      COMMON/SYM/POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF1BB,NF2AA,NF2BB
      COMMON/DSYM/IRREPX,IPERT,NDT(2),NDF1(2),NDF2(2),
     &            IOFFIJ(8,2),IOFFAB(8,2),IOFFAI(8,2)
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/FILES/LUOUT,MOINTS
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD 
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &              DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      DATA ONE,ONEM /1.0D0,-1.0D0/
C
      MXCOR=MAXCOR
C
      DO 1000 ISPIN=1,IUHF+1 
C
       IF(ISPIN.EQ.1) THEN
        IOFF=1
       ELSE
        IOFF=NDT(1)+1
       ENDIF
       IF(IUHF.EQ.1) THEN
C
C      AA AND BB SPIN CASES
C
C  LISTG :    GAMMA AMPLITUDES
C  LISTW :    INTEGRALS 
C  FACT :     PREFACTOR
C
C
       LISTW=6+ISPIN
       IF(MBPT2) THEN 
        LISTG=443+ISPIN
C
C FACTOR OF ONE INSTEAD OF ONEM SINCE WE ARE USING THE ANTISYMMETRY OF
C THE T(MN,AE) LIST (= - T(MN,EA)
C
        FACT=ONE
        IF(ANTI) FACT=ONEM
       ELSE IF (MBPT3) THEN
c        LISTG=60+ISPIN
        FACT=ONE
        IF(ANTI) FACT=ONEM
       ELSE
c        LISTG=113+ISPIN
        FACT=ONE
        IF(ANTI) FACT=ONEM
       ENDIF
C
C LOOP OVER IRREPS OF EF BLOCK (THE SAME IRREPS AS THE IN AND MN BLOCKS 
C HAVE
C
       DO 100 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPX,IRREPR)
C
C DETERMINE LENGTH OF EXPANDED VIRTUAL-VIRTUAL BLOCK
C
        NV2SQ=0 
        DO 110 IRREPJ=1,NIRREP
         NV2SQ=NV2SQ+VRT(IRREPJ,ISPIN)
     &                    *VRT(DIRPRD(IRREPJ,IRREPR),ISPIN)
110     CONTINUE 
        DISSYG=IRPDPD(IRREPL,ISYTYP(1,LISTG+ISPIN))
        NUMSYG=IRPDPD(IRREPR,ISYTYP(2,LISTG+ISPIN))
        DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW))
        NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW))  
        I001=1
        I002=I001+IINTFP*NV2SQ*NUMSYG
        I003=I002+IINTFP*MAX(NUMSYW*DISSYW,NUMSYG*DISSYG)
        IF(MIN(NUMSYG,DISSYG,NUMSYW,DISSYW).NE.0) THEN
         I004=I003+3*IINTFP*MAX(DISSYG,NUMSYG,NUMSYG,DISSYG)
         IF(I004.LT.MXCOR) THEN
C  
C         IN CORE VERSION
C
       CALL DIOV1AA(ICORE(I001),ICORE(I002),ICORE(I002),DIOV(IOFF),
     &             FACT,ISPIN,POP(1,ISPIN),VRT(1,ISPIN),DISSYG,
     &             NUMSYG,DISSYW,NUMSYW,LISTG,LISTW,IRREPR,IRREPL,
     &             IRREPR,ICORE(I003))
         ELSE
          CALL INSMEM('DIOV1AA',I004,MXCOR)
         ENDIF
        ELSE
        ENDIF 
100    CONTINUE
       ENDIF
C
C       AB SPIN CASE
C
       LISTW=11-ISPIN
       IF(MBPT2) THEN
        LISTG=446
        FACT=ONEM
        IF(ANTI) FACT=ONE
       ELSE IF (MBPT3) THEN
c        LISTG=63
        FACT=ONEM
        IF(ANTI) FACT=ONE
c      ELSE
c        LISTG=116
        FACT=ONEM 
        IF(ANTI) FACT=ONE
       ENDIF
C
C      LOOP OVER IRREPS.
C
       DO 200 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPR,IRREPX)
C
        DISSYG=IRPDPD(IRREPL,ISYTYP(1,LISTG))
        NUMSYG=IRPDPD(IRREPR,ISYTYP(2,LISTG))
        DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW))
        NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW))
        I001=1
        I002=I001+IINTFP*NUMSYG*DISSYG
        I003=I002+IINTFP*MAX(NUMSYW*DISSYW,NUMSYG*DISSYG)
        IF(MIN(NUMSYG,DISSYG,NUMSYW,DISSYW).NE.0) THEN
         I004=I003+3*IINTFP*MAX(NUMSYG,DISSYG,NUMSYW,DISSYW)
         IF(I004.LT.MXCOR) THEN
C
C IN CORE VERSION
C
          CALL DIOV1AB(ICORE(I001),ICORE(I002),ICORE(I002),DIOV(IOFF),
     &                 FACT,ISPIN,POP(1,ISPIN),POP(1,3-ISPIN),
     &                 VRT(1,ISPIN),VRT(1,3-ISPIN),DISSYG,NUMSYG,
     &                 DISSYW,NUMSYW,LISTG,LISTW,IRREPR,IRREPL,IRREPR,
     &                 ICORE(I003),IUHF)
         ELSE
          CALL INSMEM('DOV21AB',I004,MXCOR)
         ENDIF
        ELSE
C
C
        ENDIF
200   CONTINUE
      call checksum('diov21  ',diov(ioff),ndt(ispin))
1000  CONTINUE
C
      RETURN

      END
