
      SUBROUTINE SINTRN3(EVEC,AOINT,BUF1,RHF,NSTART,NEND,NOCC,NVRT,
     &                   ISPIN,IRREPX)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL RHF
      INTEGER DIRPRD,DISZAO,DISZMO,AOPOP
C
      DIMENSION EVEC(1),AOINT(1),BUF1(1),NOCC(8),NVRT(8),
     &          NSTART(8),NEND(8)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/AOOFST/INDOCC(8,2)
      COMMON/AOPOPS/AOPOP(8)   
      COMMON/SYMINF/NDUMMY,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/INFOT/NPASS1,NPASS2,NPASS3,NPASS4,
     &             NREAD1,NREAD2,NREAD3,NREAD4,
     &             TIME1L,TIME2L,TIME3L,TIME4L,
     &             TIME1S,TIME2S,TIME3S,TIME4S
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW 
C
      DATA AZERO,ONE/0.D0,1.D0/
C
      CALL TIMER(1)
C
C LOOP OVER ALL IRREPS
C
      IOFF2=1
      IOFF3=1
      IOFF4=1 
      IOFF5=1
C
      DO 1000 IRREP1=1,NIRREP
C
       IRREP1R=DIRPRD(IRREP1,IRREPX)
       NMO1=NVRT(IRREP1)
       NAO1=AOPOP(IRREP1)
       NOCC1=NOCC(IRREP1)
       NSTARTR=NSTART(IRREP1R)
       NENDR=NEND(IRREP1R)
C
       DO 2000 IRREP2=1,NIRREP
C
        IF(IRREP2.EQ.IRREP1) GO TO 2000
C
        NAO2=AOPOP(IRREP2)
        NMO2=NVRT(IRREP2)
        NOCC2=NOCC(IRREP2)
C
        DISZAO=NAO1*NAO2
        NUMDIS=NMO2*(NENDR-NSTARTR+1)
C
         IF(IRREP1.LT.IRREP2) THEN
          NAO3=NAO1
          NAO4=NAO2
          NMO3=NMO1
          NMO4=NMO2
          NOCC3=NOCC1
          NOCC4=NOCC2
          IRREP3=IRREP1
          IRREP4=IRREP2
         ELSE
          NAO3=NAO2
          NAO4=NAO1
          NMO3=NMO2
          NMO4=NMO1
          NOCC3=NOCC2
          NOCC4=NOCC1
          IRREP3=IRREP2
          IRREP4=IRREP1
         ENDIF
C
C LOOP OVER ALL OCCUPIED ORBITALS
C
         IOFFC2=INDOCC(IRREP2,ISPIN)+NOCC2*NAO2
C
         DO 100 IOCC=NSTARTR,NENDR
C
C  TRANSFORM SECOND INDEX  (Mu I | SIGMA RHO) --> (P I | SIGMA RHO )
C
          CALL XGEMM('T','N',NMO2,DISZAO,NAO2,ONE,EVEC(IOFFC2),
     &               NAO2,AOINT(IOFF2),NAO2,AZERO,BUF1,NMO2)
C
          CALL TRANSP(BUF1,AOINT(IOFF3),DISZAO,NMO2)
C
          IOFF2=IOFF2+NAO2*DISZAO
          IOFF3=IOFF3+NMO2*DISZAO
C
100      CONTINUE
C
C  NOW WE HAVE THE (PI,SIGMA RHO) INTEGRALS ORDERED AS   X X P I 
C
C NOW TRANSFORM NEW LHS TO RS, SPIN CASE ISPIN,ISPIN
C
         DO 200 IDIS=1,NUMDIS
C
C
          IOFFC3=INDOCC(IRREP3,ISPIN)+NAO3*NOCC3
          IOFFC4=INDOCC(IRREP4,ISPIN)+NAO4*NOCC4
C
          CALL GHTRAN(AOINT(IOFF4),AOINT(IOFF5),EVEC,IOFFC3,
     &                IOFFC4,1,1,BUF1,
     &                0,1,NAO3,NAO4,NMO3,NMO4)
C
          IOFF4=IOFF4+NAO3*NAO4
          IOFF5=IOFF5+NMO3*NMO4
C
200      CONTINUE
C
2000   CONTINUE
1000  CONTINUE
C
      IOFFBUF=1
      DO 3000 IRREP1=1,NIRREP
       DO 4000 IRREP2=1,NIRREP
        IF(IRREP1.EQ.IRREP2) GO TO 4000
        IOFFBUF=MAX(IOFFBUF,1+NVRT(IRREP1)*NVRT(IRREP2)*
     &              NVRT(IRREP2)*2)
4000   CONTINUE
3000  CONTINUE
C
      CALL SDUMP3(AOINT,BUF1,BUF1(IOFFBUF),NSTART,NEND,IRREPX)
C
      CALL TIMER(1)
      TIME3S=TIME3S+TIMENEW
C
      RETURN
      END
