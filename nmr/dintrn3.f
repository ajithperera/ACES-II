      SUBROUTINE DINTRN3(EVEC,AODINT,BUF,RHF,NSTART,NEND,ISPIN)
C
C THIS ROUTINE TRANSFORMS DERIVATIVE INTEGRALS FROM THE AO
C TO MO BASIS, THIS IS THE IJIJ VERSION
C
CEND
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL RHF
      INTEGER DIRPRD,DISZAO,DISZMO,AOPOP
C
      DIMENSION EVEC(1),AODINT(1),BUF(1)
      DIMENSION NSTART(8),NEND(8)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD 
      COMMON/SYMINF/NDUMMY,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/AOOFST/INDOCC(8,2)  
      COMMON/AOPOPS/AOPOP(8)
      COMMON/INFOI/TIMEI,NWRITI 
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW 
C
      DATA AZERO,ONE/0.D0,1.D0/
C
      CALL TIMER(1)
C
C LOOP OVER ALL IRREPS
C
      IOFF2=1
      IOFF3=1
C
      DO 1000 IRREP1=1,NIRREP
C
       IOFF3I=IOFF3 
C
       NSTART1=NSTART(IRREP1)
       NEND1=NEND(IRREP1)
       NAO1=AOPOP(IRREP1)
       NMO1=AOPOP(IRREP1)
       IOFFC1=INDOCC(IRREP1,ISPIN)
C
       DO 100 IOCC=NSTART1,NEND1
C
        DO 2000 IRREP2=1,NIRREP
C
         IF(IRREP2.EQ.IRREP1) GO TO 2000
C
C
         NAO2=AOPOP(IRREP2)
         NMO2=AOPOP(IRREP2)
C
         DISZAO=NAO1*NAO2
C
C LOOP OVER ALL OCCUPIED ORBITALS
C
         IOFFC2=INDOCC(IRREP2,ISPIN)
C
C  TRANSFORM SECOND INDEX  (Mu I | SIGMA RHO) --> (P I | SIGMA RHO )
C
         CALL XGEMM('T','N',NMO2,DISZAO,NAO2,ONE,EVEC(IOFFC2),
     &              NAO2,AODINT(IOFF2),NAO2,AZERO,BUF,NMO2)
C
         CALL TRANSP(BUF,AODINT(IOFF3),DISZAO,NMO2)
C
         IOFF2=IOFF2+NAO2*DISZAO
         IOFF3=IOFF3+NMO2*DISZAO
C
         CALL XGEMM('T','N',NMO2,DISZAO,NAO2,ONE,EVEC(IOFFC2),
     &              NAO2,AODINT(IOFF2),NAO2,AZERO,BUF,NMO2)
C
         CALL TRANSP(BUF,AODINT(IOFF3),DISZAO,NMO2)
C
         IOFF2=IOFF2+NAO2*DISZAO
         IOFF3=IOFF3+NMO2*DISZAO
C
2000    CONTINUE
C
100    CONTINUE
C
C NOW WE HAVE THE (PI,SIGMA RHO) INTEGRALS ORDERED AS   X X P I 
C
C NOW TRANSFORM NEW LHS TO RS, SPIN CASE ISPIN,ISPIN
C
       IOFF4=IOFF3I
       IOFF5=IOFF3I
C
       DO 200 IOCC=NSTART1,NEND1
C
        DO 3000 IRREP2=1,NIRREP
         IF(IRREP2.EQ.IRREP1) GO TO 3000
         NMO2=AOPOP(IRREP2)
         NAO2=AOPOP(IRREP2)
         IOFFC2=INDOCC(IRREP2,ISPIN)
C
         DO 210 JMO=1,NMO2
C
          CALL GHTRAN(AODINT(IOFF4),AODINT(IOFF5),EVEC,IOFFC2,
     &                IOFFC1,1,1,BUF,
     &                0,1,NAO2,NAO1,NMO2,NMO1)
C
          IOFF4=IOFF4+NAO1*NAO2
          IOFF5=IOFF5+NMO1*NMO2
C
210      CONTINUE
C
         DO 220 JMO=1,NMO2
C
          CALL GHTRAN(AODINT(IOFF4),AODINT(IOFF5),EVEC,IOFFC1,
     &                IOFFC2,1,1,BUF,
     &                0,1,NAO1,NAO2,NMO1,NMO2)
C
          IOFF4=IOFF4+NAO1*NAO2
          IOFF5=IOFF5+NMO1*NMO2
C
220      CONTINUE
C
3000     CONTINUE
200     CONTINUE
C
1000  CONTINUE
C
      IOFFBUF1=1
      NSIZ2=0
      DO 6000 IRREP1=1,NIRREP
       DO 7000 IRREP2=1,NIRREP
        IF(IRREP1.NE.IRREP2) THEN
         IOFFBUF1=MAX(IOFFBUF1,1+AOPOP(IRREP1)*AOPOP(IRREP2)*
     &                AOPOP(IRREP2))
         NSIZ2=MAX(NSIZ2,2*AOPOP(IRREP1)*AOPOP(IRREP2),
     &             AOPOP(IRREP1)*AOPOP(IRREP1))
        ENDIF
7000   CONTINUE
6000  CONTINUE
C
      IOFFBUF2=IOFFBUF1+NSIZ2
C
      CALL DUMP3(AODINT,BUF,BUF(IOFFBUF1),BUF(IOFFBUF2),
     &           NSTART,NEND)
C
      CALL TIMER(1)
      TIMEI=TIMEI+TIMENEW
C
      RETURN
      END
