      SUBROUTINE LOADA1(CMO,W,W2,BUF,IBUF,ISYMAO,NBAS,
     &                  NSTART,NEND,ISIZE,IOFFAO,IOFFI,
     &                  NSIZE,ILNBUF,NPERT,ISPIN)
C
C THIS ROUTINE LOADS GIAO AO INTEGRALS FROM
C THE FILE IIII... AND TRANSFORMS THE FIRST
C INDEX TO THE MO BASIS. 
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION W,W2,BUF,X,X1,X2,CMO,HALF
      DOUBLE PRECISION TCPU,TSYS,TIME,TIMEIN, TIMENOW, 
     &                 TIMETOT, TIMENEW 
      CHARACTER*8 NAMXYZ
      CHARACTER*80 FNAME
C
      DIMENSION NSTART(8),NEND(8),NBAS(8),ISYMAO(1),
     &          IOFFAO(8),IOFFI(8),ISIZE(8)
      DIMENSION IBUF(ILNBUF),BUF(ILNBUF),W(1),W2(1),CMO(1)
C
      COMMON/SYMINF/NDUMMY,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/AOOFST/INDOCC(8,2)
      COMMON/PERT4/IXYZ
      COMMON/BFILE/NAMXYZ(4,3)
      COMMON/INFOL/NREAD,NPASS,TIME
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW 
C
      DATA HALF/0.5D0/
C
      IUPKI(IX)=AND(IX,IALONE)
      IUPKJ(IX)=AND(ISHFT(IX,-IBITWD),IALONE)
      IUPKK(IX)=AND(ISHFT(IX,-2*IBITWD),IALONE)
      IUPKL(IX)=AND(ISHFT(IX,-3*IBITWD),IALONE)
      INDXF(I,J,N)=I+N*(J-1)
C
      TIME = 0.0D0
      CALL TIMER(1)
C
C  OPEN FILE CONTAINING 2e DERIVATIVE INTEGRALS
C
      CALL GFNAME(NAMXYZ(1,IXYZ),FNAME,ILENGTH)
      OPEN(UNIT=30,FILE=FNAME(1:ILENGTH),FORM='UNFORMATTED',
     &     ACCESS='SEQUENTIAL')
      REWIND(UNIT=30)
      NAOINT=0
C
C CHAIN IN THE INTEGRALS
C
      CALL ZERO(W,NSIZE)
1     READ(30)BUF,IBUF,NUT
      IF(NUT.EQ.-1) GO TO 11 
      DO 10 INT=1,NUT
       X=BUF(INT)
       ITMP=IBUF(INT)
C
C  X VALUE OF GIAO INTEGRAL 
C
C  I,K INDICES OF COMPLEX CONJUGATE ORBITALS
C
       IX=IUPKI(ITMP)
       JX=IUPKJ(ITMP)
       KX=IUPKK(ITMP)
       LX=IUPKL(ITMP)
C
C DETERMINE IRREP OF ORBITALS
C
       IRREPX=ISYMAO(IX)
C   
C OFFSET WITHIN BASIS FUNCTIONS
C
       IOFF=IOFFAO(IRREPX)
C
C OFFSET FOR CMO
C
       IOFFC=INDOCC(IRREPX,ISPIN)-1
C
C OFFSET WITHIN W
C
       IOFFW=IOFFI(IRREPX)
C
C SIZE OF THREE DIMENSIONAL ARRAY WITHIN IRREPX
C 
       ISIZEX=ISIZE(IRREPX)
C
C NUMBER OF OCCUPIED ORBITALS AND NUMBER OF BASIS FUNCTIONS WITHIN IRREPX
C
       NSTARTX=NSTART(IRREPX)
       NENDX=NEND(IRREPX)
       NBASX=NBAS(IRREPX)
C
C INDICES WITHIN IRREP
C
       IX=IX-IOFF
       JX=JX-IOFF
       KX=KX-IOFF
       LX=LX-IOFF
C
C DETERMINE REDUNDANCY FACTOR
C    
C     0.5         IF IX=KX AND JX=LX
C     0.25        IF IX=JX=KX=LX 
C
       IF((IX.EQ.KX).AND.(JX.EQ.LX)) THEN
C
        X=X*HALF  
        IF(IX.EQ.JX) X=X*HALF
C
       ENDIF
C
C FIRST ELEMENT:     TRANSFORM INDEX L TO MO BASIS
C
        IND2=INDXF(IX,JX,NBASX) 
        X1=X
        DO 9001 I=NSTARTX,NENDX
         W2(I)=CMO(IOFFC+LX+(I-1)*NBASX)*X1 
9001    CONTINUE 
C
C INCREMENT L(KX,IX,JX;I)
C
        DO 9002 I=NSTARTX,NENDX
         IADR=IOFFW+KX+NBASX*(IND2-1)+ISIZEX*(I-NSTARTX)
         W(IADR)=W(IADR)+W2(I)
9002    CONTINUE
        
C
C SECOND ELEMENT:     TRANSFORM INDEX K TO MO BASIS
C
        IND2=INDXF(JX,IX,NBASX) 
        X1=-X
        DO 9003 I=NSTARTX,NENDX
         W2(I)=CMO(IOFFC+KX+(I-1)*NBASX)*X1 
9003    CONTINUE 
C
C INCREMENT L(LX,JX,IX;I)
C
        DO 9004 I=NSTARTX,NENDX
         IADR=IOFFW+LX+NBASX*(IND2-1)+ISIZEX*(I-NSTARTX)
         W(IADR)=W(IADR)+W2(I)
9004    CONTINUE
C
C THIRD ELEMENT:     TRANSFORM INDEX J TO MO BASIS
C
        IND1=INDXF(KX,LX,NBASX) 
        X2=X
        DO 9005 I=NSTARTX,NENDX
         W2(I)=CMO(IOFFC+JX+(I-1)*NBASX)*X2
9005    CONTINUE 
C
C INCREMENT L(IX,KX,LX;I)
C
        DO 9006 I=NSTARTX,NENDX
         IADR=IOFFW+IX+NBASX*(IND1-1)+ISIZEX*(I-NSTARTX)
         W(IADR)=W(IADR)+W2(I)
9006    CONTINUE
C
C FOURTH ELEMENT:     TRANSFORM INDEX I TO MO BASIS
C
        IND1=INDXF(LX,KX,NBASX)
        X2=-X
        DO 9007 I=NSTARTX,NENDX
         W2(I)=CMO(IOFFC+IX+(I-1)*NBASX)*X2
9007    CONTINUE 
C
C INCREMENT L(JX,LX,KX;I)
C
        DO 9008 I=NSTARTX,NENDX
         IADR=IOFFW+JX+NBASX*(IND1-1)+ISIZEX*(I-NSTARTX)
         W(IADR)=W(IADR)+W2(I)
9008    CONTINUE
10    CONTINUE
      NAOINT=NAOINT+NUT
      GO TO 1
11    CLOSE(UNIT=30,STATUS='KEEP')
C
      CALL TIMER(1)
      TIME=TIME+TIMENEW
      NREAD=NAOINT
      NPASS=NPASS+1
      RETURN
C
900   WRITE(6,1000)
1000  FORMAT(T3,'@LOADA1-F, Unexpected end-of-file on integral file.')
      CALL ERREX
      RETURN
C
901   WRITE(6,1000)
1001  FORMAT(T3,'@LOADA1-F, I/O error on unit ',I5,'.')
      CALL ERREX
      RETURN
      END
