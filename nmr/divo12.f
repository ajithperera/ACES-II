
      SUBROUTINE DIVO12(DIVO,DVV,ICORE,MAXCOR,IUHF,IP,ANTI)
C
C THIS SUBROUTINE CALCULATES THE X(AI) CONTRIBUTION 
C DUE TO THE VIRTUAL-VIRTUAL BLOCK OF THE DENSITY
C MATRIX 
C
C      d I(AI)/ d X= - SUM E,F d<EI||AF>/ d chi D(EF)
C
C (INDEPENDENT OF THE CONSIDERED METHOD)
C
C NOTE THAT THE SIGN IS ONE FOR IMAGINARY PERTURBATIONS
C
C   SPIN CASES :
C
C   d I(AI)/d X      D(EF)         d<EI||AF>/dchi    
C
C      AA             AA              AAAA              
C                     BB              ABBA            
C
C      BB             AA              BAAB           
C                     BB              BBBB          
C
C THIS ROUTINE USES EXPLICITELY SYMMETRY
C
CEND
C
C CODED   SEPT/91     JG UNIVERSITY KARLSRUHE
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL ANTI
      INTEGER DIRPRD,DISSYW,POP,VRT
      DIMENSION DIVO(1),DVV(1),ICORE(MAXCOR)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/DSYM/IRREPX,IPERT,NDT(2),NDF1(2),NDF2(2),
     &            IOFFIJ(8,2),IOFFAB(8,2),IOFFAI(8,2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      MXCOR=MAXCOR 
C
      DO 1000 ISPIN=1,IUHF+1
C
       IF(ISPIN.EQ.1) THEN
        IOFFX=1
        IOFFDA=1
        IOFFDB=1+NF2(1)*IUHF
       ELSE
        IOFFX=1+NDT(1)
        IOFFDA=1+NF2(1)
        IOFFDB=1
       ENDIF
C
C  FIRST DO AAAA PART
C
       IF(ANTI) CALL VMINUS(DIVO(IOFFX),NDT(ISPIN))
C
       IF(IUHF.NE.0) THEN
C
        LISTW=326+ISPIN
C
        DO 100 IRREPR=1,NIRREP
C
         IRREPL=DIRPRD(IRREPR,IRREPX)
C
         NVRTSQ=0
         DO 101 IRREPJ=1,NIRREP
          NVRTSQ=NVRTSQ+VRT(IRREPJ,ISPIN)*
     &                  VRT(DIRPRD(IRREPL,IRREPJ),ISPIN)
101      CONTINUE
C
         NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW))
         DISSYW=IRPDPD(IRREPL,ISYTYP(1,LISTW))
C
         I001=1
         I002=I001+IINTFP*NVRTSQ*NUMSYW
         IF(I002.LT.MXCOR) THEN
C
          CALL DIVO12AA(ICORE(I001),DVV(IOFFDA),DIVO(IOFFX),ISPIN,
     &                  POP(1,ISPIN),VRT(1,ISPIN),DISSYW,NUMSYW,
     &                  NVRTSQ,LISTW,IRREPL,IRREPR)
         ELSE   
          CALL INSMEM('DIVO12AA',I002,MXCOR)
         ENDIF
100     CONTINUE
C
       ENDIF
C 
       LISTW=328+ISPIN
       IF(IUHF.EQ.0) THEN
        LISTW=330
        NVRTM=0
        DO 199 IRREP=1,NIRREP
         NVRTM=MAX(NVRTM,VRT(IRREP,1))
199     CONTINUE
       ENDIF
C
       DO 200 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPX,IRREPR)
C
        NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW))
        DISSYW=IRPDPD(IRREPL,ISYTYP(1,LISTW))
C
        IF(IUHF.EQ.1) NVRTM=NUMSYW
        I001=1
        I002=I001+IINTFP*NVRTM*DISSYW
        I003=I002+IINTFP*2*MAX(NUMSYW,DISSYW)
        IF(I003.LT.MXCOR) THEN
C
         CALL DIVO12AB(ICORE(I001),DVV(IOFFDB),DIVO(IOFFX),ISPIN,
     &                 POP(1,ISPIN),VRT(1,ISPIN),POP(1,3-ISPIN),
     &                 VRT(1,3-ISPIN),DISSYW,NUMSYW,LISTW,IRREPL,
     &                 IRREPR,IUHF,ICORE(I002))
        ELSE
         CALL INSMEM('DIVO12AB',I003,MXCOR)
        ENDIF
200    CONTINUE
C
       IF(ANTI) CALL VMINUS(DIVO(IOFFX),NDT(ISPIN))
C
       call checksum('divo12  ',divo(ioffx),ndt(ispin))
1000  CONTINUE
      RETURN
      END
