
       SUBROUTINE DDENSOO(DDOO,ICORE,MAXCOR,IUHF,ANTI)    
C
C THIS ROUTINE CALCULATES THE DERIVATIVE OF THE OCCUPIED-OCCUPIED
C BLOCK OF THE RELAXED DENSITY MATRIX IN CORRELATION METHODS
C NOTE THAT WE CONSIDER HERE THE REAL TOTAL DERIVATIVE
C OF THE DENSITY MATRIX WHICH IS DIFFERENT FROM THE DERIVATIVE
C USED IN OUR MBPT(2) FREQUENCY CODE.
C
C DD(I,J) DENOTES IN THE FOLLOWING DELTA D(I,J) / DELTA X |LAMBDA=CONST
C
C THE GENERAL FORMULA IS
C
C MBPT(2):
C
C DD(I,J) = - 1/2 P(I,J) SUM M,E,F (DELTA T1(IM,EF)/DELTA X) T1(JM,EF)    
C
C  FOR IMAGINARY PERTURBATIONS, THE FORMULA IS
C
C DD(I,J) = -1/2 SUM M,E,F (DELTA T1(IM,EF)/DELTA X) T1*(JM,EF)
C
C           -1/2 SUM M,E,F (T1(IM,EF) (DELTA T1*(JM,EF)/DELTA X)
C
C         = -1/2 P_(I,J) SUM M,E,F (DELTA T1(IM,EF)/DELTA X) T1(JM,EF)
C
C ROHF-MBPT(2):
C
C DD(I,J) = - 1/2 P(I,J) SUM M,E,F (DELTA T1(IM,EF)/DELTA X) T1(JM,EF)          
C      
C          - P(I,J) SUM E (DELTA T(I,M)/DELTA X) T(J,M)   
C
C THERE ARE THE FOLLOWING SPIN TYPES TO CONSIDER
C
C       DD(IJ)             T(IMEF), ....
C
C       AA                AAAA,ABAB
C
C       BB                BBBB,BABA
C
C THE RHF PART USES EXPLICITELY SPIN ADAPTED CODE 
C  
C THIS SUBROUTINE USES EXPLICITELY SYMMETRY
C
CEND
C
C CODED APRIL/91 JG
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYL,DISSYR,POP,VRT
      LOGICAL MBPT4,CC
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      LOGICAL DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON,ANTI
C 
      DIMENSION ICORE(MAXCOR),DDOO(1)
C
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,NF1(2),NF2(2)
      COMMON/DSYM/IRREPX,IPERT,NDTAA,NDTBB,NDF1(2),NDF2(2),
     &            IOFFIJ(8,2),IOFFAB(8,2),IOFFAI(8,2)
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /METH/ MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      COMMON /DERIV/DENS,GRAD,QRHF,NONHF,ROHF,SEMI,CANON
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      DATA ONE,TWO,ONEM,TWOM /1.0D0,2.D0,-1.0D0,-2.0D0/
C
      MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ
      CC=CCD.OR.CCSD.OR.QCISD
      MXCOR=MAXCOR
C
      IF(CCSD.OR.QCISD.OR.M4SDQ.OR.M4SDTQ.OR.ROHF) THEN
C
C   ALLOCATE MEMORY FOR DT1 AND L1(T1)  AMPLITUDES
C
       I0T1A=MXCOR+1-NDTAA*IINTFP
       MXCOR=MXCOR-NDTAA*IINTFP
       CALL GETLST(ICORE(I0T1A),1,1,1,1,490)
       IF(CC) THEN
        LISTL1=190
       ELSE
        LISTL1=90
       ENDIF
       I0T2A=I0T1A-NTAA*IINTFP
       MXCOR=MXCOR-NTAA*IINTFP
       CALL GETLST(ICORE(I0T2A),1,1,2,1,LISTL1)
       IF(IUHF.EQ.0) THEN
        I0T1B=I0T1A
        I0T2B=I0T2A
       ELSE
        I0T1B=I0T2A-NDTBB*IINTFP
        MXCOR=MXCOR-NDTBB*IINTFP
        CALL GETLST(ICORE(I0T1B),1,1,1,2,490)
        I0T2B=I0T1B-NTBB*IINTFP
        MXCOR=MXCOR-NTBB*IINTFP
        CALL GETLST(ICORE(I0T2B),1,1,2,2,LISTL1)
       ENDIF
C
C     NOW PERFORM MULTIPLICATION   SUM E DT(I,E) L(J,E)
C
C  THE FACTOR IS TWOM AND TWO FOR ANTI=.TRUE.
C
        FACT=TWOM
   
       DO 300 ISPIN=1,IUHF+1
C
        IF(ISPIN.EQ.1) THEN
         IOFFT1=I0T1A
         IOFFT2=I0T2A
         IOFFD=1    
        ELSE
         IOFFT1=I0T1B
         IOFFT2=I0T2B
         IOFFD=1+NDF1(1)
        ENDIF
C
        DO 250 IRREPR=1,NIRREP
C
         IRREPL=DIRPRD(IRREPR,IRREPX)
C
         IOFFT11=IOFFT1+IOFFAI(IRREPL,ISPIN)
C
         NOCCR=POP(IRREPR,ISPIN)
         NOCCL=POP(IRREPL,ISPIN)
         NVRTR=VRT(IRREPR,ISPIN)
         IF(MIN(NVRTR,NOCCR,NOCCL).GT.0) THEN
          CALL XGEMM('T','N',NOCCL,NOCCR,NVRTR,FACT,ICORE(IOFFT11),
     &               NVRTR,ICORE(IOFFT2),NVRTR,ONE,DDOO(IOFFD),NOCCL)
         ENDIF
         IOFFT2=IOFFT2+NOCCR*NVRTR*IINTFP
         IOFFD=IOFFD+NOCCL*NOCCR
250     CONTINUE
300    CONTINUE
C
      ENDIF
C
      MXCOR=MAXCOR
C
      DO 1000 ISPIN=1,IUHF+1 
C
       IF(ISPIN.EQ.1) THEN
        IOFF=1
       ELSE
        IOFF=NDF1(1)+1
       ENDIF
       IF(IUHF.EQ.1) THEN
C
C
C      AA AND BB SPIN CASES
C
C  IN MBPT3: 
C           LISTT1 CONTAINS THE FIRST ORDER AMPLITUDES
C           LISTT2 CONTAINS THE SECOND ORDER AMPLITUDES
C  IN MBPT4:
C           LISTT1 CONTAINS THE SECOND ORDER  AMPLITUDES
C           LISTT2 CONTAINS THE SECOND ORDER  AMPLITUDES
C           LISTT3 CONTAINS THE FIRST ORDER AMPLITUDES
C           LISTT4 CONTAINS THE THIRD ORDER DELTA AMPLITUDES
C           LISTT5 CONTAINS THE X-CONTRIBUTION DUE TO QUADS
C  IN CC:
C           LISTT1 CONTAINS THE CC-AMPLITUDES
C           LISTT2 CONTAINS THE LAMBDA AMPLITUDES
C
C  NOTE SOME FURTHER LOGICAL STUFF HERE
C
C  MBPT2 LISTT1 IS EQUAL TO LISTT2 (DON'T READ IT IN TWICE )
C  MBPT4 THERE IS AN ADDITIONAL STEP REQUIRED HERE (LISTT4+5 TIMES LISTT3)
C
C  THE SYMMETRIZATION OF THE DENSITY MATRIX
C
C                  DD(I,J) =(DD(I,J) + DD(J,I))/2
C
C  HAS TO BE CARRIED OUT FOR ALL METHODS.
C
       IF(MBPT2) THEN
        LISTT1=443+ISPIN
        LISTT2=43+ISPIN
        FACT=TWOM
        IFLAG=2
       ELSE IF(MBPT3) THEN
c        LISTT1=443+ISPIN
c        LISTT2=60+ISPIN
c        LISTT3=43+ISPIN
c        LISTT4=460+ISPIN
c        LISTT5=43+ISPIN
c        LISTT6=443+ISPIN
c        FACT=ONEM
c        IFLAG=3
c       ELSE IF(MBPT4) THEN
c        LISTT1=143+ISPIN
c        LISTT2=143+ISPIN
c        LISTT3=43+ISPIN
c        LISTT4=60+ISPIN 
c        LISTT5=113+ISPIN
c        IFLAG=1
       ELSE IF(CC) THEN
        LISTT1=443+ISPIN
        LISTT2=143+ISPIN
        FACT=ONEM
        IFLAG=2
       ENDIF
C
C
C LOOP OVER IRREPS OF EF BLOCK (THE SAME IRREPS AS THE IN AND MN BLOCKS 
C HAVE
C
       DO 100 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPX,IRREPR)
C
C DETERMINE LENGTH OF EXPANDED OCCUPIED-OCCUPIED BLOCK
C
        NO2SQR=0 
        NO2SQL=0 
        DO 110 IRREPJ=1,NIRREP
         NO2SQR=NO2SQR+POP(IRREPJ,ISPIN)
     &                    *POP(DIRPRD(IRREPJ,IRREPR),ISPIN)
         NO2SQL=NO2SQL+POP(IRREPJ,ISPIN)
     &                    *POP(DIRPRD(IRREPJ,IRREPL),ISPIN)
110     CONTINUE 
        DISSYR=IRPDPD(IRREPR,ISYTYP(1,43+ISPIN))
        NUMSYR=IRPDPD(IRREPR,ISYTYP(2,43+ISPIN))  
        DISSYL=DISSYR
        NUMSYL=IRPDPD(IRREPL,ISYTYP(2,43+ISPIN))  
        I001=1
        I002=I001+IINTFP*NO2SQL*DISSYL
        I003=I002+IINTFP*NO2SQR*DISSYR
        IF(MIN(NUMSYR,NUMSYL,DISSYR).NE.0) THEN
         IF(I003.LT.MXCOR) THEN
C  
C         IN CORE VERSION
C
          CALL DDOOAA(ICORE(I001),ICORE(I002),DDOO(IOFF),FACT,ISPIN,
     &               POP(1,ISPIN),VRT(1,ISPIN),DISSYL,NUMSYL,DISSYR,
     &               NUMSYR,LISTT1,LISTT2,LISTT3,IRREPL,IRREPR,IFLAG)
          IF(MBPT3) THEN
          CALL DDOOAA(ICORE(I001),ICORE(I002),DDOO(IOFF),FACT,ISPIN,
     &               POP(1,ISPIN),VRT(1,ISPIN),DISSYL,NUMSYL,DISSYR,
     &               NUMSYR,LISTT4,LISTT5,LISTT6,IRREPL,IRREPR,IFLAG+1)
          ENDIF
          IF(MBPT4) THEN
c           CALL DOOAA(ICORE(I001),ICORE(I002),DDOO(IOFF),FACT,ISPIN,
c     &               POP(1,ISPIN),VRT(1,ISPIN),DISSYT,
c     &               NUMSYT,LISTT4,LISTT5,LISTT3,IRREP,4)
          ENDIF
         ELSE
          CALL INSMEM('DDOOAA',I003,MXCOR)
         ENDIF
        ELSE
        ENDIF 
100    CONTINUE
       ENDIF
C
       call checksum('ddooaa  ',DDOO(IOFF),NDF1(ISPIN))
C       AB SPIN CASE
C
       IF(MBPT2) THEN
        LISTT1=446
        LISTT2=46
C
C THE ORIGINAL FACTOR IS HALFM, THERE ARE TWO SPIN CASES
C ABAB AND ABBA WHICH GIVE A FACTOR OF ONEM, THE SYMMETRIZATION
C IN DSYMMET INTRODUCES A FACTOR OF HALF SO THAT TWOM REMAINS AS      
C CORRECT FACTOR
C
C FOR IMAGINARY PERTURBATIONS, NO CHANGE IS REQUIRED
C WE HAVE DELTA T ON DISK AND T* IS EQUAL TO T
C
        FACT=TWOM
        IFLAG=2
       ELSE IF(MBPT3) THEN
c        LISTT1=446
c        LISTT2=63
c        LISTT3=46
c        LISTT4=463
c        LISTT5=63
c        LISTT6=46
c        FACT=ONEM
c        IFLAG=3
c       ELSE IF(MBPT4) THEN
c        LISTT1=146
c        LISTT2=146
c        LISTT3=46
c        LISTT4=63
c        LISTT5=116
c        FACT=ONEM
c        IFLAG=1
       ELSE IF(CC) THEN
        LISTT1=446
        LISTT2=146
        FACT=ONEM
        IFLAG=2
       ENDIF
C
C      LOOP OVER IRREPS.
C
       DO 200 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPR,IRREPX)
C
        DISSYR=IRPDPD(IRREPR,ISYTYP(1,46))
        NUMSYR=IRPDPD(IRREPR,ISYTYP(2,46))
        DISSYL=DISSYR
        NUMSYL=IRPDPD(IRREPL,ISYTYP(2,46))
        I001=1
        I002=I001+IINTFP*NUMSYL*DISSYL
        I004=I002+IINTFP*NUMSYR*DISSYR
        IF(MIN(NUMSYR,NUMSYL,DISSYR).NE.0) THEN
         I005=I004+3*IINTFP*MAX(NUMSYR,NUMSYL,DISSYR)
         IF(I005.LT.MXCOR) THEN
C
C         IN CORE VERSION
C
          CALL DDOOAB(ICORE(I001),ICORE(I002),DDOO(IOFF),
     &               FACT,ISPIN,POP(1,ISPIN),POP(1,3-ISPIN),
     &               VRT(1,ISPIN),VRT(1,3-ISPIN),DISSYL,NUMSYL,
     &               DISSYR,NUMSYR,LISTT1,LISTT2,LISTT3,IRREPL,
     &               IRREPR,ICORE(I004),IUHF,IFLAG)
          IF(MBPT3) THEN
          CALL DDOOAB(ICORE(I001),ICORE(I002),DDOO(IOFF),
     &               FACT,ISPIN,POP(1,ISPIN),POP(1,3-ISPIN),
     &               VRT(1,ISPIN),VRT(1,3-ISPIN),DISSYL,NUMSYL,
     &               DISSYR,NUMSYR,LISTT4,LISTT5,LISTT6,IRREPL,
     &               IRREPR,ICORE(I004),IUHF,IFLAG+1)
          ENDIF
          IF(MBPT4) THEN
c           CALL DOOAB(ICORE(I001),ICORE(I002),ICORE(I003),DDOO(IOFF),
c     &                FACT,ISPIN,POP(1,ISPIN),POP(1,3-ISPIN),
c     &                VRT(1,ISPIN),VRT(1,3-ISPIN),DISSYT,NUMSYT,
c     &                LISTT4,LISTT5,LISTT3,IRREP,ICORE(I004),IUHF,4)   
          ENDIF
         ELSE
          CALL INSMEM('DDOOAB',I005,MXCOR)
         ENDIF
        ELSE
C
C
        ENDIF
200   CONTINUE
C
       call checksum('ddooab  ',DDOO(IOFF),NDF1(ISPIN))
C  FOR MBPT(4) ADD HERE TRIPLE CONRIBUTION 
C
c      IF(CANON) THEN
C
C FOR PERTURBED CANONICAL ORBITALS, ZERO THE OFF-DIAGONAL
C PART OF DOO
C
c       CALL DENCAN(DDOO(IOFF),ICORE,NF1(ISPIN),NIRREP,POP(1,ISPIN))
c      ENDIF 
C
C ADD TRIPLE CONTRIBUTION TO DDOO
C
      IF(M4SDTQ) THEN
       CALL ERREX
      ENDIF
C
C SYMMETRIZE THE DERIVATIVE OF THE DENSITY MATRIX HERE
C
      CALL DSYMMET(IRREPX,DDOO(IOFF),ICORE,POP(1,ISPIN),
     &             IOFFIJ(1,ISPIN),ANTI)
C
1000  CONTINUE
C
      RETURN

      END
