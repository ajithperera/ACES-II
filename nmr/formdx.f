      SUBROUTINE FORMDX(XAI,XAIB,DVO,DVOB,ICORE,MAXCOR,
     &                  IUHF,IPERT,ANTI)
C
C THIS ROUTINE ADDS TO d X(ai)/ d chi THE FOLLOWING TERM
C
C   d A(ai,em)/d chi D(em)
C
C FOR IMAGINARY PERTURBATIONS THIS GIVES
C
C    d <ie||am>/d chi D(em) + d<im||ae>/d chi D(em)
C
CEND
C
C CODED SEPT/91 JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL ANTI
      INTEGER POP,VRT,DIRPRD,DISSIZ
C
      DIMENSION XAI(1),XAIB(1),DVO(1),DVOB(1),ICORE(1) 
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/DSYM/IRREPX,I1PERT,NDT(2),NDF1(2),NDF2(2),
     &            IOFFIJ(8,2),IOFFAB(8,2),IOFFAI(8,2) 
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NJUNK(18)
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW 
C
      DATA ONE,FOUR,ONEM,FOURM,TWO,TWOM /1.D0,4.D0,-1.D0,-4.D0,
     &                                   2.D0,-2.D0/
C
      CALL TIMER(1)
C
      IF(IUHF.EQ.0) THEN
       call checksum('formdx x',xai,ndt(1))
       call checksum('formdx d',dvo,nt(1))
C
C  THE CONTRIBUTION IS
C
C 
C    d <Ae||Im>       d <Ae||Mi>     d <Am||Ei>
C   4  ----------  -  ----------  -  ----------
C       d chi          d chi          d chi
C
C 
C  THE LAST TERM IS EASY AND A SIMPLE DOT PRODUCT
C
C     I(Ai,Em) D(EM)
C
C  THE FIRST TWO TERMS MIGHT BE COMBINED, AN INTEGRAL
C
C  4 I(Ae,Im) - I(Ae,Mi)
C
C CONSTRUCTED, AND THEN A DOT24 TYPE CONTRACTION BE PERFORMED
C IT DOES NOT LOOK VERY EFFICIENT TO RESORT FIRST LIST 316
C
C IN THE CASE OF IMAGINARY PERTURBATIONS (ANTI=.TRUE.) THIS
C GIVES
C
C    d <Ie||Am>     d <Im||Ae>   d <Ie||Ma>   d <Im||Ea>
C  2 ---------- + 2 ---------- - ---------- - -----------
C      d chi          d chi         d chi        d chi  
C
C CALCULATE FIRST TWO TERMS :
C
       LISTW=316
       IF(ANTI) THEN
        FACT1=TWOM
        FACT2=ONE
       ELSE
        FACT1=FOUR
        FACT2=ONEM
       ENDIF
C
       DO 100 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPR,IRREPX)
        DISSIZ=IRPDPD(IRREPL,ISYTYP(1,LISTW))
        NUMDIS=IRPDPD(IRREPR,ISYTYP(2,LISTW))
C
        I000=1
        I010=I000+IINTFP*NUMDIS*DISSIZ
        IEND1=I010+IINTFP*NUMDIS*DISSIZ
C
        IEND2=I010+IINTFP*NT(1)
C
        IEND=MAX(IEND1,IEND2)
        IF(IEND.GT.MAXCOR) CALL INSMEM('FORMDX',IEND,MAXCOR)
C
        CALL GETLST(ICORE(I000),1,NUMDIS,1,IRREPR,LISTW)
        call checksum('formdxw1',icore(i000),numdis*dissiz)
C
        CALL SYMTRA(IRREPR,POP(1,1),POP(1,2),DISSIZ,ICORE(I000),
     &              ICORE(I010))
        CALL SSCAL(NUMDIS*DISSIZ,FACT1,ICORE(I000),1) 
C
        CALL SAXPY(NUMDIS*DISSIZ,FACT2,ICORE(I010),1,ICORE(I000),1)
        call checksum('formdxw2',icore(i000),numdis*dissiz)
C
        CALL DDDOT24(IRREPX,IRREPL,IRREPR,XAI,DVO,ICORE(I000),
     &               ICORE(I010),DISSIZ,VRT(1,1),POP(1,1),
     &               VRT(1,1),VRT(1,2),POP(1,1),POP(1,2),
     &               'STST')
C
100    CONTINUE
C
       IF(ANTI) THEN
C
C IMAGINARY PERTURBATIONS
C
        IDVO=1
        CALL SYMTRA(1,VRT(1,1),POP(1,1),1,DVO,ICORE(IDVO)) 
C
        LISTW1=321
        LISTW2=325
        DO 110 IRREPR=1,NIRREP
C
         IRREPL=DIRPRD(IRREPR,IRREPX)
         DISSIZ=IRPDPD(IRREPL,ISYTYP(1,LISTW1))
         NUMDIS=IRPDPD(IRREPR,ISYTYP(2,LISTW1))
C
         I000=IDVO+IINTFP*NT(1)
         I010=I000+IINTFP*NUMDIS*DISSIZ
         IEND=I010+IINTFP*NUMDIS*DISSIZ
         IF(IEND.GT.MAXCOR) CALL INSMEM('FORMDX',IEND,MAXCOR)
C
         CALL GETLST(ICORE(I000),1,NUMDIS,1,IRREPR,LISTW1)
         CALL SSCAL(NUMDIS*DISSIZ,TWOM,ICORE(I000),1) 
         CALL GETLST(ICORE(I010),1,NUMDIS,1,IRREPR,LISTW2)
         CALL SAXPY(NUMDIS*DISSIZ,ONE,ICORE(I010),1,ICORE(I000),1)
C
         CALL DDDOT24(IRREPX,IRREPL,IRREPR,XAI,ICORE(IDVO),ICORE(I000), 
     &                ICORE(I010),DISSIZ,VRT(1,1),POP(1,1), 
     &                VRT(1,1),POP(1,2),VRT(1,2),POP(1,1),
     &                'TSST')
C
110     CONTINUE
C
       ELSE
C
C REAL PERTURBATIONS
C  
C CALCULATE THIRD TERM   (EASY STUFF)
C
        call checksum('formdx  ',xai,ndt(1))
        LISTW=325
C
        DISSIZ=IRPDPD(IRREPX,ISYTYP(1,LISTW))
        NUMDIS=IRPDPD(1,ISYTYP(2,LISTW))
C                          
        I000=1
        IEND=I000+IINTFP*NUMDIS*DISSIZ
C
        IF(IEND.GT.MAXCOR) CALL INSMEM('FORMDX',IEND,MAXCOR)
C
        CALL GETLST(ICORE(I000),1,NUMDIS,1,1,LISTW)
C
        CALL XGEMM('N','N',DISSIZ,1,NUMDIS,ONEM,ICORE(I000),DISSIZ,
     &              DVO,NUMDIS,ONE,XAI,DISSIZ)
C
       ENDIF
       call checksum('formdx  ',xai,ndt(1))
C
C ALSO, WE HAVE TO CONSIDER TERMS DUE TO THE DERIVATIVES OF
C THE FOCK MATRICES, NOTE THAT THOSE ARE NOT DIAGONAL (THE
C PERTURBED ORBITALS ARE NOT CANONICAL) AND THEREFORE SOMEWHAT
C MORE DIFFICULT TO COMPUTE THAN IN ORDINARY CPHF. THE TERMS
C ARE SIMILAR TO THOSE IN ROHF-CPHF
C
C  WE HAVE THE FOLLOWING TERMS
C
C  + d f(E,A)/ d chi D(E,I) - d f(I,M)/ d chi D(A,M)  
C
C  ALLOCATE SPACE FOR DERIVATIVES OF FOCK MATRICES
C
       I000=1
       I001=I000+IINTFP*NDF1(1)
       IEND=I001+IINTFP*NDF2(1)
       IF(IEND.GT.MAXCOR) CALL INSMEM('FORMDX',IEND,MAXCOR)
C
       CALL GETLST(ICORE(I000),IPERT,1,1,IRREPX,176) 
       CALL GETLST(ICORE(I001),IPERT,1,1,IRREPX,178)
C
C MULTIPLY
C 
       IOFFD=1
       IOFFF=I001
       IOFFX=1
C
       FACT=ONE
       IF(ANTI) FACT=ONEM
C
       DO 200 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPR,IRREPX)
C
        NOCCI=POP(IRREPR,1)
        NVRTE=VRT(IRREPR,1)
        NVRTA=VRT(IRREPL,1)
C
        CALL XGEMM('N','N',NVRTA,NOCCI,NVRTE,FACT,ICORE(IOFFF),
     &             NVRTA,DVO(IOFFD),NVRTE,ONE,XAI(IOFFX),
     &             NVRTA)
C
C UPDATE OFFSETS
C
        IOFFD=IOFFD+NVRTE*NOCCI
        IOFFX=IOFFX+NVRTA*NOCCI
        IOFFF=IOFFF+NVRTA*NVRTE*IINTFP
C
200    CONTINUE
       call checksum('formdxf1',xai,ndt(1))
C
       IOFFX=1
       IOFFF=I000
C
       FACT=ONEM
       IF(ANTI) FACT=ONE
C
       DO 300 IRREPR=1,NIRREP
C
        IRREPL=DIRPRD(IRREPX,IRREPR)
C
        IOFFD=1
        DO 310 IRREP1=1,IRREPL-1
         IOFFD=IOFFD+POP(IRREP1,1)*VRT(IRREP1,1)
310     CONTINUE
C
        NOCCM=POP(IRREPL,1)
        NVRTA=VRT(IRREPL,1)
        NOCCI=POP(IRREPR,1)
C
        CALL XGEMM('N','N',NVRTA,NOCCI,NOCCM,FACT,DVO(IOFFD),NVRTA,
     &             ICORE(IOFFF),NOCCM,ONE,XAI(IOFFX),NVRTA)
C
C  UPDATE OFFSETS
C
        IOFFX=IOFFX+NVRTA*NOCCI
        IOFFF=IOFFF+NOCCI*NOCCM*IINTFP
C
300    CONTINUE
       call checksum('formdxf2',xai,ndt(1))
C    
      ELSE
C
C UHF
C 
       write(*,*) 'not implemented'
       call errex
C 
      ENDIF
C
C  ALL DONE, RETURN 
C
      CALL TIMER(1)
      write(6,6000) TIMENEW
6000  FORMAT( ' Formation of d A(ai,em)/d chi D(em) required ',f5.1,
     &        ' seconds.')
      RETURN
      END
