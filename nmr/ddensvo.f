
      SUBROUTINE DDENSVO(DDVO,ICORE,MAXCOR,IUHF,ANTI)
C
C THIS SUBROUTINE CALCULATES THE DIRECT CONTRIBUTION IN NON-HF CASES
C TO THE VIRTUAL-OCCUPIED BLOCK OF THE DENSITY MATRIX.
C
C THE GENERAL FORMULA IS
C
C  DD(A,I) = 1/2 (DELTA T(A,I)/DX)
C
C           + 1/2 SUM M,E [(DELTA T(AE,IM)/DELTA X) 
C
C             - (DELTA T(A,M)/DELTA X) T(E,I)
C
C             - T(A,M) (DELTA T(E,I)/DELTA X)] L(E,M)
C          
C            + 1/2 SUM E G(E,A) (DELTA T(I,E)/DELTA X) 
C
C            - 1/2 SUM M G(I,M) (DELTA T(M,A)/DELTA X)
C          
C            + 1/2 SUM E DG(E,A) T(I,E)
C
C            - 1/2 SUM M DG(I,M) T(M,A)
C
C TWO SPIN CASES HAVE TO BE CONSIDERED FOR DDVO
C
CEND
C
C SO FAR ONLY THE ROHF-MBPT(2) PART HAS BEEN CODED, THE REMAINING
C PIECES WILL BE HACKED UP WHEN WE ARE CODING ROHF OR QRHF-CCSD
C SECONDDERIVATIVES.
C
C  CODED APRIL/91 JG
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,ANTI
      INTEGER DIRPRD,POP,VRT
      DIMENSION ICORE(MAXCOR),DDVO(1)
      DIMENSION I0T(2),I0L(2),I0GEA(2),I0GIM(2),I0D(2)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/DSYM/IRREPX,IPERT,NDT(2),NDF1(2),NDF2(2),
     &            IOFFIJ(8,2),IOFFAB(8,2),IOFFAI(8,2)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /METH/ MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
C
      DATA AZERO,HALF,ONE,ONEM /0.0D0,0.5D0,1.0D0,-1.D0/
C
C ROHF-MBPT(2):
C
C  DD(A,I) = 1/2 (DELTA T(I,A)/DELTA X)
C
      MXCOR=MAXCOR
      IF(MBPT2) THEN
       CALL GETLST(DDVO(1),1,1,1,1,490)
       CALL GETLST(DDVO(1+NDT(1)),1,1,1,2,490)
       CALL SSCAL((NDT(1)+NDT(2)),HALF,DDVO(1),1)
      ELSE
C
C ALL OTHER METHODS
C
C
C  ALLOCATE MEMORY FOR T1, L1, Gea AND Gim
C
      I0T(1)=MXCOR+1-NT(1)*IINTFP
      I0L(1)=I0T(1)-NT(1)*IINTFP
      I0GEA(1)=I0L(1)-NF2(1)*IINTFP
      I0GIM(1)=I0GEA(1)-NF1(1)*IINTFP
      I0D(1)=1
      MXCOR=MXCOR-IINTFP*(2*NT(1)+NF1(1)+NF2(1))
      CALL GETLST(ICORE(I0T(1)),1,1,1,1,90)
      CALL GETLST(ICORE(I0L(1)),1,1,2,1,190)
      CALL GETLST(ICORE(I0GIM(1)),1,1,2,1,191)
      CALL GETLST(ICORE(I0GEA(1)),1,1,2,1,192)
      IF(IUHF.EQ.0) THEN
       I0T(2)=I0T(1)
       I0L(2)=I0L(1)
       I0GEA(2)=I0GEA(1)
       I0GIM(2)=I0GIM(1)
       I0D(2)=1
      ELSE
       I0T(2)=I0GIM(1)-IINTFP*NT(2)
       I0L(2)=I0T(2)-IINTFP*NT(2)
       I0GEA(2)=I0L(2)-NF2(2)*IINTFP
       I0GIM(2)=I0GEA(2)-NF1(2)*IINTFP
       I0D(2)=1+NT(1)
       MXCOR=MXCOR-IINTFP*(2*NT(2)+NF1(2)+NF2(2))
       CALL GETLST(ICORE(I0T(2)),1,1,1,2,90)
       CALL GETLST(ICORE(I0L(2)),1,1,2,2,190)
       CALL GETLST(ICORE(I0GIM(2)),1,1,2,2,191)
       CALL GETLST(ICORE(I0GEA(2)),1,1,2,2,192)
      ENDIF
C
C   LOOP OVER SPIN CASES
C
      DO 1000 ISPIN=1,IUHF+1
C
C   COPY FIRST T(I,A) TO DVO
C 
c YAU : old
c      CALL ICOPY(IINTFP*NT(ISPIN),ICORE(I0T(ISPIN)),1,DDVO(I0D(ISPIN)),1)
c YAU : new
       CALL DCOPY(NT(ISPIN),ICORE(I0T(ISPIN)),1,DDVO(I0D(ISPIN)),1)
c YAU : end
C 
C   AND ADD L(A,I) TO DVO
C
       CALL SAXPY(NT(ISPIN),ONE,ICORE(I0L(ISPIN)),1,DDVO(I0D(ISPIN)),1)
C
C  FIRST TERM :
C
C      SUM E G(EA) T(I,E)
C
C   THE G(EA) IS STORED AS A,E
C
       IOFFG=I0GEA(ISPIN)
       IOFFT=I0T(ISPIN)
       IOFFD=I0D(ISPIN)
C
       DO 100 IRREP=1,NIRREP
C
        NOCC=POP(IRREP,ISPIN)
        NVRT=VRT(IRREP,ISPIN)
C
        IF(MIN(NOCC,NVRT).NE.0) THEN
C
         CALL XGEMM('N','N',NVRT,NOCC,NVRT,ONE,ICORE(IOFFG),NVRT,
     &              ICORE(IOFFT),NVRT,ONE,DDVO(IOFFD),NVRT)
        ENDIF 
C
C  UPDATE OFFSETS
C
        IOFFG=IOFFG+IINTFP*NVRT*NVRT
        IOFFT=IOFFT+IINTFP*NVRT*NOCC
        IOFFD=IOFFD+NOCC*NVRT
C
100    CONTINUE
C
C  SECOND TERM
C
C    - SUM M T(A,M) G(I,M) 
C
C  THE G(IM) ARE STORED AS I,M
C
       IOFFG=I0GIM(ISPIN)
       IOFFT=I0T(ISPIN)
       IOFFD=I0D(ISPIN)
C 
       DO 200 IRREP=1,NIRREP
C
        NOCC=POP(IRREP,ISPIN)
        NVRT=VRT(IRREP,ISPIN)
C
        IF(MIN(NOCC,NVRT).NE.0) THEN
C
         CALL XGEMM('N','T',NVRT,NOCC,NOCC,ONEM,ICORE(IOFFT),NVRT,
     &              ICORE(IOFFG),NOCC,ONE,DDVO(IOFFD),NVRT)
        ENDIF
C
C  UPDATE OFFSETS
C
        IOFFG=IOFFG+IINTFP*NOCC*NOCC
        IOFFT=IOFFT+IINTFP*NOCC*NVRT
        IOFFD=IOFFD+NOCC*NVRT
C
200    CONTINUE
C
C   THIRD TERM
C
C      SUM M SUM E T(AE,IM) L(E,M)      
C
C   HERE WE HAVE TO CONSIDER TO SPIN CASES
C
C   THE T AMPLITUDES ARE TAKEN FROM THE FOLLOWING LISTS
C
C   AAAA (BBBB ) SPIN CASE
C
C   LIST 33+ISPIN        ORDER E,M : A,I    WITH FACTOR ONEM
C
C   ABAB (BABA)  SPIN CASE
C
C   LIST 35+ISPIN        ORDER E,M : A,I  
C
        LISTT1=33+ISPIN
        LISTT2=36+ISPIN-IUHF
C
C  WE NEED ONLY IRREP 1            
C
        NSIZE1=NT(ISPIN)*NT(ISPIN)
        NSIZE2=NT(ISPIN)*NT(3-ISPIN)
C
        IF(MXCOR.LT.MAX(NSIZE1,NSIZE2)) STOP 'DENSVO'
C
C   AAAA (BBBB) SPIN CASE
C
        IF(NT(ISPIN).NE.0) THEN
C
         CALL GETLST(ICORE,1,NT(ISPIN),1,1,LISTT1)
C
         CALL XGEMM('N','N',1,NT(ISPIN),NT(ISPIN),ONEM,
     &              ICORE(I0L(ISPIN)),1,ICORE,NT(ISPIN),
     &              ONE,DDVO(I0D(ISPIN)),1)
C
        ENDIF
C
C   ABAB (BABA)  SPIN CASE
C
        IF(MIN(NT(1),NT(2)).NE.0) THEN
C
         CALL GETLST(ICORE,1,NT(ISPIN),1,1,LISTT2)
C
         CALL XGEMM('N','N',1,NT(ISPIN),NT(3-ISPIN),ONE,      
     &              ICORE(I0L(3-ISPIN)),1,ICORE,NT(3-ISPIN),ONE,
     &              DDVO(I0D(ISPIN)),1)
C
        ENDIF
C
C  THE FOURTH TERM
C
C  - SUM M SUM E L(E,M) T(M,A) T(I,E)
C
C  CALCULATE FIRST THE INTERMEDIATE
C
C    Z(M,I) = SUM E L(E,M) T(E,I)
C
C  AND THEN
C
C    DVO(A,I) <--  - SUM M T(M,A) Z(M,I)
C
       IOFFL=I0L(ISPIN)
       IOFFT=I0T(ISPIN)
       IOFFD=I0D(ISPIN)
C
       DO 400 IRREP=1,NIRREP
C
        NOCC=POP(IRREP,ISPIN)
        NVRT=VRT(IRREP,ISPIN)
C
        IF(MIN(NOCC,NVRT).NE.0) THEN
C
         CALL XGEMM('T','N',NOCC,NOCC,NVRT,ONE,ICORE(IOFFL),NVRT,
     &              ICORE(IOFFT),NVRT,AZERO,ICORE,NOCC)  
C
         CALL XGEMM('N','N',NVRT,NOCC,NOCC,ONEM,ICORE(IOFFT),NVRT,
     &              ICORE,NOCC,ONE,DDVO(IOFFD),NVRT)
        ENDIF
C
C  UPDATE OFFSETS
C
        IOFFD=IOFFD+NOCC*NVRT
        IOFFT=IOFFT+IINTFP*NOCC*NVRT
        IOFFL=IOFFL+IINTFP*NOCC*NVRT   
C 
400    CONTINUE
C
C  SCALE THE DENSITY MATRIX WITH 1/2
C
       CALL SSCAL(NT(ISPIN),HALF,DDVO(I0D(ISPIN)),1)
C
1000  CONTINUE
C
      ENDIF
C
C  ALL DONE 
C
      RETURN
      END 
