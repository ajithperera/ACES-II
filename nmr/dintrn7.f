      SUBROUTINE DINTRN7(EVEC,AODINT,BUF,RHF,NSTART,NEND,
     &                   IRREPX,ISPIN)
C
C THIS ROUTINE TRANSFORMS DERIVATIVE INTEGRALS FROM THE AO TO THE MO
C BASIS. THIS IS THE IIJI AND IIIJ VERSION.
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,AOPOP,AODSZ,AODIS,POP,VRT
      LOGICAL RHF
C
      DIMENSION AODINT(1),EVEC(1),BUF(1)
      DIMENSION NSTART(8),NEND(8)
      DIMENSION IREORD(8)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NDUM(6)
      COMMON/SYMINF/NDUMMY,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/AOPOPS/AOPOP(8)
      COMMON/AOOFST/INDOCC(8,2)
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/INFOI/TIMEI,NWRITI
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW 
C
      DATA ONE/1.0D0/
      DATA ZILCH/0.0D0/
C
      CALL TIMER(1)
C
      IOFF1=1
      IOFF2=1
C
      DO 1000 IRREP1=1,NIRREP
C
       IRREP2=DIRPRD(IRREP1,IRREPX)
C
       IOFF4I=IOFF2
C
       NAO1=AOPOP(IRREP1)
       NMO1=AOPOP(IRREP1)
       NSTART1=NSTART(IRREP1)
       NEND1=NEND(IRREP1)
       NAO2=AOPOP(IRREP2)
       NMO2=AOPOP(IRREP2)
       AODSZ=NAO1*NAO2
       MODSZ=NMO1*NMO2     
       IX=NAO2*NAO1+1
       IOFFC1=INDOCC(IRREP1,ISPIN)
       IOFFC2=INDOCC(IRREP2,ISPIN)
C
C TRANSFORM THE LHS TO THE (ISPIN,ISPIN) SPIN CASE
C
C
C LOOP OVER (XX) BLOCKS ON LHS AND TRANSFORM THEM TO (PI)
C
       DO 20 IOCC=NSTART1,NEND1
        CALL XGEMM('T','N',NMO1,AODSZ,NAO1,ONE,EVEC(IOFFC1),
     &             NAO1,AODINT(IOFF1),NAO1,ZILCH,BUF,NMO1)
        CALL TRANSP(BUF,AODINT(IOFF2),AODSZ,NMO1)
        IOFF1=IOFF1+NAO1*AODSZ
        IOFF2=IOFF2+NMO1*AODSZ
        CALL XGEMM('T','N',NMO1,AODSZ,NAO1,ONE,EVEC(IOFFC1),
     &             NAO1,AODINT(IOFF1),NAO1,ZILCH,BUF,NMO1)
        CALL TRANSP(BUF,AODINT(IOFF2),AODSZ,NMO1)
        IOFF1=IOFF1+NAO1*AODSZ
        IOFF2=IOFF2+NMO1*AODSZ
20     CONTINUE
C
C NOW WE HAVE (PI,XX) INTEGRALS.  TRANSPOSE TO (XX,PI)
C
C TRANSFORM NEW LHS (XX) TO (PQ) [SPIN CASE (ISPIN,ISPIN)]
C
       IOFF5=IOFF4I
       IOFF6=IOFF4I
       DO 21 IOCC=NSTART1,NEND1
        DO 22 JMO=1,NMO1
c YAU : old
c        CALL ICOPY(NAO1*NAO2*IINTFP,AODINT(IOFF5),1,BUF,1)
c YAU : new
         CALL DCOPY(NAO1*NAO2,AODINT(IOFF5),1,BUF,1)
c YAU : end
         CALL GHTRAN(BUF,BUF,EVEC,IOFFC2,IOFFC1,1,1,
     &              BUF(IX),0,1,NAO2,NAO1,NMO2,NMO1)
c YAU : old
c        CALL ICOPY(NMO1*NMO2*IINTFP,BUF,1,AODINT(IOFF6),1)
c YAU : new
         CALL DCOPY(NMO1*NMO2,BUF,1,AODINT(IOFF6),1)
c YAU : end
         IOFF5=IOFF5+AODSZ
         IOFF6=IOFF6+MODSZ
22      CONTINUE
        DO 23 JMO=1,NMO1
c YAU : old
c        CALL ICOPY(NAO1*NAO2*IINTFP,AODINT(IOFF5),1,BUF,1)
c YAU : new
         CALL DCOPY(NAO1*NAO2,AODINT(IOFF5),1,BUF,1)
c YAU : end
         CALL GHTRAN(BUF,BUF,EVEC,IOFFC1,IOFFC2,1,1,
     &              BUF(IX),0,1,NAO1,NAO2,NMO1,NMO2)
c YAU : old
c        CALL ICOPY(NMO1*NMO2*IINTFP,BUF,1,AODINT(IOFF6),1)
c YAU : new
         CALL DCOPY(NMO1*NMO2,BUF,1,AODINT(IOFF6),1)
c YAU : end
         IOFF5=IOFF5+AODSZ
         IOFF6=IOFF6+MODSZ
23      CONTINUE
21     CONTINUE
C
C END LOOP OVER IRREPS
C
1000  CONTINUE
C
C ALLOCATE MEMORY
C
      IOFFBUF1=1
      DO 1010 IRREP1=1,NIRREP
       IRREP2=DIRPRD(IRREP1,IRREPX)
       IOFFBUF1=MAX(IOFFBUF1,1+AOPOP(IRREP1)*AOPOP(IRREP1)*
     &              AOPOP(IRREP2))
1010  CONTINUE
      IOFFBUF2=IOFFBUF1
      DO 1020 IRREP1=1,NIRREP
       IRREP2=DIRPRD(IRREP1,IRREPX)
       LENGTH=MAX(POP(IRREP1,1)*POP(IRREP1,1),
     &            POP(IRREP1,1)*POP(IRREP2,1),
     &            VRT(IRREP1,1)*VRT(IRREP1,1),
     &            VRT(IRREP1,1)*VRT(IRREP2,1),
     &            VRT(IRREP1,1)*POP(IRREP1,1),
     &            VRT(IRREP1,1)*POP(IRREP2,1))
       IOFFBUF2=MAX(IOFFBUF2,IOFFBUF1+2*LENGTH)
1020  CONTINUE
C
      CALL DUMP7(AODINT,BUF,BUF(IOFFBUF1),BUF(IOFFBUF2),
     &           NSTART,NEND,IRREPX)
C
      CALL TIMER(1) 
      TIMEI=TIMEI+TIMENEW
C
      RETURN
      END
