      SUBROUTINE DDENS(VALUE,DDOO,DDVV,DDVO,DOO,DVV,DVO,
     &                 UAI,UIA,SIJ,SAB,ICORE,MAXCOR,IUHF,
     &                 ANTI) 
C
C CALCULATES THE DERIVATIVES OF THE ONE- AND TWO-PARTICLE
C DENSITY MATRIX
C
C FOR A THEORETICAL DISCUSSION:
C
C   E.A. SALTER, PH.D. THESIS, U.F. 1988
C   E.A. SALTER AND R.J. BARTLETT, J. CHEM. PHYS. 90 (1989) 1767
C   J. GAUSS AND J.F. STANTON, TO BE PUBLISHED
C
CEND
C
C THIS PROGRAM HAS BEEN DEVELOPED AT THE QUANTUM THEORY PROJECT
C IN 1991 BY J.F. STANTON AND J. GAUSS
C
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER POP,VRT,DIRPRD
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      LOGICAL QRHF,ROHF,SEMI,STERM,ANTI
C
      DIMENSION ICORE(MAXCOR)
      DIMENSION VALUE(1),DDOO(1),DDVV(1),DDVO(1)
      DIMENSION DOO(1),DVV(1),DVO(1) 
      DIMENSION UAI(1),UIA(1),SIJ(1),SAB(1)
C
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/FLAGS/IFLAGS(100)
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      COMMON/REF/ROHF,QRHF,SEMI
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
C
      COMMON/PERTINF/INIT,MPERT(8)
      COMMON/DSYM/IRREPX,IPERT,NDT(2),NDF1(2),NDF2(2),
     &            IOFFIJ(8,2),IOFFAB(8,2),IOFFAI(8,2)
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW 
C
      DATA ZERO /0.D0/
C
      CALL TIMER(1)
C
      MXCOR=MAXCOR
C
C CALCULATE OCCUPIED-OCCUPIED BLOCK OF DERIVATIVE OF THE
C DENSITY MATRICES
C
      CALL DDENSOO(DDOO,ICORE,MXCOR,IUHF,ANTI)
C
C CALCULATE VIRTUAL-VIRTUAL BLOCK OF DERIVATIVE OF THE
C DENSITY MATRIX
C
      CALL DDENSVV(DDVV,ICORE,MXCOR,IUHF,ANTI)
C
C CALCULATE VIRTUAL-OCCUPIED BLOCK OF THE RELAXED DENSITY
C MATRIX (ONLY NEEDED FOR ROHF AND QRHF METHODS)
C
      IF(ROHF.OR.QRHF) THEN
       CALL DDENSVO(DDVO,ICORE,MXCOR,IUHF,ANTI)
      ENDIF
C
      call checksum('densoo  ',DDOO,NDF1(1))
      if(iuhf.eq.1) then
      call checksum('densoo  ',DDOO(1+NDF1(1)),NDF1(2))
      endif
      call checksum('densvv  ',DDVV,NDF2(1))
      if(iuhf.eq.1) then
      call checksum('densvv  ',DDVV(1+NDF2(1)),NDF2(2))
      endif
C
C PERFORM THE CONTRACTIONS d D(P,Q)/d chi d f(P,Q)/d chi
C
      IDOO=1
      IDVV=IDOO+IINTFP*(NDF1(1)+IUHF*NDF1(2))
      IDVO=IDVV+IINTFP*(NDF2(1)+IUHF*NDF2(2))
      IEND=IDVO+IINTFP*(NDT(1)+IUHF*NDT(2))
      MXCOR=MXCOR+1-IEND
C
c YAU : old
c     CALL ICOPY(IINTFP*(NDF1(1)+IUHF*NDF1(2)),DDOO,1,ICORE(IDOO),1)
c     CALL ICOPY(IINTFP*(NDF2(1)+IUHF*NDF2(2)),DDVV,1,ICORE(IDVV),1)
c     CALL ICOPY(IINTFP*(NDT(1) +IUHF*NDT(2) ),DDVO,1,ICORE(IDVO),1)
c YAU : new
      CALL DCOPY((NDF1(1)+IUHF*NDF1(2)),DDOO,1,ICORE(IDOO),1)
      CALL DCOPY((NDF2(1)+IUHF*NDF2(2)),DDVV,1,ICORE(IDVV),1)
      CALL DCOPY((NDT(1) +IUHF*NDT(2) ),DDVO,1,ICORE(IDVO),1)
c YAU : end
C
      CALL DXU(ICORE(IDOO),ICORE(IDVV),ICORE(IDVO),
     &          DOO,DVV,DVO,UAI,UIA,
     &          SIJ,SAB,ICORE(IEND),MXCOR,IUHF,ANTI)
C
      CALL DDXDF(ICORE(IDOO),ICORE(IDVV),ICORE(IDVO),VALUE,
     &           ICORE(IEND),MXCOR,IUHF)
C
      CALL TIMER(1)
      write(*,6000) TIMENEW
6000  FORMAT(' Contribution of d t(ij,ab)/d chi and U(p,q)^chi',
     &       ' to the total derivative',/,' of the density matrix',
     &       ' have been calculated in ',f5.1,' seconds.')
      RETURN
      END 
