      SUBROUTINE LOADS4(PCMO,W,W2,BUF,IBUF,ISYMAO,NBAS,
     &                  NSTART,NEND,IOFFAO,IOF4,ISIZE3,
     &                  ISIZE2,NSIZE,ILNBUF,IPERT,ISPIN,IRREPX)
C
C THIS ROUTINE LOADS AO INTEGRALS FROM
C THE INTEGRAL FILE IJKL AND TRANSFORMS THE FIRST
C INDEX.
C
CEND
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL LAST
      INTEGER DIRPRD,AND,POP,VRT
      CHARACTER*80 FNAME
C
      DIMENSION IBUF(ILNBUF),BUF(ILNBUF),W(1),W2(1),PCMO(1)
      DIMENSION NBAS(8),NSTART(8),NEND(8),IOFFAO(8),IOF4(8,8)
      DIMENSION ISIZE3(8,8),ISIZE2(8,8,8)
      DIMENSION ISYMAO(100),IOFFPC(8,2) 
C
      COMMON/SYMINF/NDUMMY,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NDUM(6)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/INFOT/NPASS1,NPASS2,NPASS3,NPASS4,
     &             NREAD1,NREAD2,NREAD3,NREAD4,
     &             TIME1L,TIME2L,TIME3L,TIME4L,
     &             TIME1S,TIME2S,TIME3S,TIME4S
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW 
C
      DATA HALF/0.5D0/
C
      IUPKI(IX)=AND(IX,IALONE)
      IUPKJ(IX)=AND(ISHFT(IX,-IBITWD),IALONE)
      IUPKK(IX)=AND(ISHFT(IX,-2*IBITWD),IALONE)
      IUPKL(IX)=AND(ISHFT(IX,-3*IBITWD),IALONE)
      INDXT(I,J)=J+(I*(I-1))/2
      INDXF(I,J,N)=I+N*(J-1)
C
      CALL TIMER(1)
C
      IOFF=1
      DO 11 IRREPR=1,NIRREP
       IRREPL=DIRPRD(IRREPR,IRREPX)
       IOFFPC(IRREPR,1)=IOFF
       IOFF=IOFF+NBAS(IRREPL)*POP(IRREPR,1)
11    CONTINUE
C
      LAST=.TRUE.
      LUINT=30
      CALL GFNAME('IJKL    ',FNAME,ILENGTH)
      OPEN(UNIT=LUINT,FILE=FNAME(1:ILENGTH),FORM='UNFORMATTED',
     &     ACCESS='SEQUENTIAL',STATUS='OLD')
      CALL LOCATE(LUINT,'TWOELSUP')
C
      CALL ZERO(W,NSIZE)
C
C READ IN INTEGRALS
C
      NAOBUF=0
      NAOINT=0
1     READ(LUINT) BUF,IBUF,NUT
      NAOBUF=NAOBUF+1
      DO 10 INT=1,NUT
       X=BUF(INT)
       ITMP=IBUF(INT)
C
C  X VALUE, IX,JX,KX,LX INDICES  
C
       IX=IUPKI(ITMP)
       JX=IUPKJ(ITMP)
       KX=IUPKK(ITMP)
       LX=IUPKL(ITMP)
C
C GET IRREP OF INTEGRAL
C
       IRREPX1=ISYMAO(IX)
       IRREPX2=ISYMAO(JX)
       IRREPX3=ISYMAO(KX)
       IRREPX4=ISYMAO(LX)
       IRREPX1R=DIRPRD(IRREPX1,IRREPX)
       IRREPX2R=DIRPRD(IRREPX2,IRREPX)
       IRREPX3R=DIRPRD(IRREPX3,IRREPX)
       IRREPX4R=DIRPRD(IRREPX4,IRREPX)
C
C
C  OFFSET WITHIN BASIS FUNCTIONS
C
       IOFF1=IOFFAO(IRREPX1)
       IOFF2=IOFFAO(IRREPX2)
       IOFF3=IOFFAO(IRREPX3)
       IOFF4=IOFFAO(IRREPX4)
C
C  INDICES WITHIN IRREP
C
       I=IX-IOFF1
       J=JX-IOFF2
       K=KX-IOFF3
       L=LX-IOFF4
C
C  OFFSET FOR CMO WITHIN IRREPX1 AND IRREPX2
C
       IOFFC1=IOFFPC(IRREPX1R,ISPIN)
       IOFFC2=IOFFPC(IRREPX2R,ISPIN)
       IOFFC3=IOFFPC(IRREPX3R,ISPIN)
       IOFFC4=IOFFPC(IRREPX4R,ISPIN)
C
C  NUMBER OF OCCUPIED ORBITALS WITHIN IRREPX1 AND IRREPX2
C
       NSTART1=NSTART(IRREPX1R)
       NSTART2=NSTART(IRREPX2R)
       NSTART3=NSTART(IRREPX3R)
       NSTART4=NSTART(IRREPX4R)
       NEND1=NEND(IRREPX1R)
       NEND2=NEND(IRREPX2R)
       NEND3=NEND(IRREPX3R)
       NEND4=NEND(IRREPX4R)
C
C  NUMBER OF BASIS FUNCTIONS WITHIN IRREPX 
C
       NBASX1=NBAS(IRREPX1)
       NBASX2=NBAS(IRREPX2)
       NBASX3=NBAS(IRREPX3)
       NBASX4=NBAS(IRREPX4)
C
C  OFFSET WITHIN W
C
       IOFFW41=IOF4(IRREPX1,IRREPX2)
       IOFFW42=IOF4(IRREPX2,IRREPX1)
       IOFFW43=IOF4(IRREPX3,IRREPX4)
       IOFFW44=IOF4(IRREPX4,IRREPX3)
C
       ISIZE31=ISIZE3(IRREPX1,IRREPX2)
       ISIZE32=ISIZE3(IRREPX2,IRREPX1)
       ISIZE33=ISIZE3(IRREPX3,IRREPX4)
       ISIZE34=ISIZE3(IRREPX4,IRREPX3)
C
       IF(IRREPX1.LT.IRREPX2) THEN
        II=I
        JJ=J
        NBAS1=NBASX1
       ELSE
        II=J
        JJ=I
        NBAS1=NBASX2
       ENDIF
       IF(IRREPX3.LT.IRREPX4) THEN
        KK=K
        LL=L
        NBAS3=NBASX3
       ELSE
        KK=L
        LL=K
        NBAS3=NBASX4
       ENDIF
C
C THERE ARE A TOTAL OF EIGHT CONTRIBUTIONSa
C
C   (IJ|KL) (JI|KL) (IJ|LK) (JI|LK)
C   (KL|IJ) (KL|JI) (LK|IJ) (LK|JI)
C
C HOWEVER, WE NEED ONLY FOUR SINCE WE STORE THE AS
C
C   NU, SIGMA >= RHO,  I   
C
C FIRST ELEMENT:     TRANSFORM INDEX L TO MO BASIS
C
        IND=INDXF(II,JJ,NBAS1)+ISIZE2(IRREPX3,IRREPX1,IRREPX2)
        DO 9001 IOCC=NSTART4,NEND4
         W2(IOCC)=PCMO(IOFFC4+L-1+(IOCC-1)*NBASX4)*X 
9001    CONTINUE 
C
C INCREMENT L(KX,IX,JX;I)
C
CDIR$ IVDEP
        DO 9002 IOCC=NSTART4,NEND4
         IADR=IOFFW44+K+NBASX3*(IND-1)+ISIZE34*(IOCC-NSTART4)
         W(IADR)=W(IADR)+W2(IOCC)
9002    CONTINUE
C
C SECOND ELEMENT:     TRANSFORM INDEX K TO MO BASIS
C
        IND=INDXF(II,JJ,NBAS1)+ISIZE2(IRREPX4,IRREPX1,IRREPX2)
        DO 9003 IOCC=NSTART3,NEND3
         W2(IOCC)=PCMO(IOFFC3+K-1+(IOCC-1)*NBASX3)*X
9003    CONTINUE 
C
C INCREMENT L(LX,JX,IX;I)
C
CDIR$ IVDEP
        DO 9004 IOCC=NSTART3,NEND3
         IADR=IOFFW43+L+NBASX4*(IND-1)+ISIZE33*(IOCC-NSTART3)
         W(IADR)=W(IADR)+W2(IOCC)
9004    CONTINUE
C
C THIRD ELEMENT:     TRANSFORM INDEX J TO MO BASIS
C
        IND=INDXF(KK,LL,NBAS3)+ISIZE2(IRREPX1,IRREPX3,IRREPX4)
        DO 9005 IOCC=NSTART2,NEND2
         W2(IOCC)=PCMO(IOFFC2+J-1+(IOCC-1)*NBASX2)*X
9005    CONTINUE 
C
C INCREMENT L(IX,KX,LX;I)
C
CDIR$ IVDEP
        DO 9006 IOCC=NSTART2,NEND2
         IADR=IOFFW42+I+NBASX1*(IND-1)+ISIZE32*(IOCC-NSTART2)
         W(IADR)=W(IADR)+W2(IOCC)
9006    CONTINUE
C
C FOURTH ELEMENT:     TRANSFORM INDEX I TO MO BASIS
C
        IND=INDXF(KK,LL,NBAS3)+ISIZE2(IRREPX2,IRREPX3,IRREPX4)
        DO 9007 IOCC=NSTART1,NEND1
         W2(IOCC)=PCMO(IOFFC1+I-1+(IOCC-1)*NBASX1)*X
9007    CONTINUE 
C
C INCREMENT L(JX,LX,KX;I)
C
CDIR$ IVDEP
        DO 9008 IOCC=NSTART1,NEND1
         IADR=IOFFW41+J+NBASX2*(IND-1)+ISIZE31*(IOCC-NSTART1)
         W(IADR)=W(IADR)+W2(IOCC)
9008    CONTINUE
10    CONTINUE
C
      IF(NUT.EQ.ILNBUF) THEN
       NAOINT=NAOINT+NUT
       GO TO 1
      ENDIF
      IF(NUT.EQ.-1) NUT=0
C
      NAOINT=NAOINT+NUT
      IF(LAST) THEN
       CLOSE(UNIT=LUINT,STATUS='KEEP')
      ELSE
       REWIND(LUINT)
       CALL LOCATE(LUINT,'TWOELSUP')
      ENDIF
      NREAD4=NAOINT
      NPASS4=NPASS4+1
      CALL TIMER(1)
      TIME4L=TIME4L+TIMENEW
C
      RETURN
900   WRITE(6,1000)
1000  FORMAT(T3,'@LOADS4-F, Unexpected end-of-file on integral file.')
      CALL ERREX
      RETURN
901   WRITE(6,1000)
1001  FORMAT(T3,'@LOADS4-F, I/O error on unit ',I5,'.')
      CALL ERREX
      RETURN
      END
