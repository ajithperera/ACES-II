      SUBROUTINE DDVVAB(T1,T2,DDVV,FACT,ISPIN,POP1,POP2,
     &                  VRT1,VRT2,DISSYL,NUMSYL,DISSYR,NUMSYR,
     &                  LISTT1,LISTT2,LISTT3,IRREPL,IRREPR,
     &                  TMP,IUHF,IFLAG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSYL,DISSYR,DIRPRD,POP1,POP2,VRT1,VRT2
C
      DIMENSION T1(NUMSYL,1),T2(NUMSYR,1),DDVV(1),TMP(1)
      DIMENSION POP1(8),POP2(8),VRT1(8),VRT2(8)
C
      COMMON /MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),DIRPRD(8,8)
C
      DATA ONE,ONEM,TWO/1.0D0,-1.D0,2.D0/
C
C      PICK UP FIRST THE T1 AND T2 AMPLITUDES
C
       CALL GETTRN(T1,TMP,DISSYL,NUMSYL,1,IRREPR,LISTT1)
       CALL GETTRN(T2,TMP,DISSYR,NUMSYR,1,IRREPR,LISTT2)
c        IF(IFLAG.EQ.3) THEN
c         CALL SSCAL(NUMSYT*DISSYT,TWO,T2,1)
c         CALL SAXPY(NUMSYT*DISSYT,ONEM,T1,1,T2,1) 
c        ELSE IF(IFLAG.EQ.4) THEN
c         CALL SSCAL(NUMSYT*DISSYT,TWO,T1,1)
c         CALL SAXPY(NUMSYT*DISSYT,ONE,T2,1,T1,1)
c         CALL GETLST(T,1,NUMSYT,2,IRREP,LISTT3)
c         CALL TRANSP(T,T2,NUMSYT,DISSYT)
c        ENDIF
c       ELSE 
c        CALL ICOPY(IINTFP*NUMSYT*DISSYT,T1,1,T2,1)
c       ENDIF 
C
C SPIN ADAPTED CODE FOR RHF
C
       IF(IUHF.EQ.0) THEN
        CALL SPINAD3(IRREPR,POP1,NUMSYR,DISSYR,T2,TMP,
     &                TMP(1+DISSYR))
       ENDIF
C
C  TRANSPOSE THE LAST TWO INDICES IN THE AA CASE
C
C  HOWEVER, IN RHF TAKE ADVANTAGE IF THE SPIN SYMMETRY
C
      IF(IUHF.EQ.1.AND.ISPIN.EQ.1) THEN
        CALL SYMTR1(IRREPL,VRT1,VRT2,NUMSYL,T1,TMP,TMP(1+NUMSYL),
     &              TMP(1+2*NUMSYL))
        CALL SYMTR1(IRREPR,VRT1,VRT2,NUMSYR,T2,TMP,TMP(1+NUMSYR),
     &              TMP(1+2*NUMSYR))
      ENDIF
C
C  PERFORM MULTIPLICATION
C
C  JOFF1 OFFSET IN THE VIRTUAL-VIRTUAL BLOCK OF T1 
C  JOFF2 OFFSET IN THE VIRTUAL-VIRTUAL BLOCK OF T2
C  IOFF OFFSET IN DVV
C
      IOFF=1
      JOFF2=1
C
      DO 90 IRREPIR=1,NIRREP
C          
C GET NUMBER OF VIRTUAL ORBITALS FOR IRREPJ
C
       NVRTIR=VRT1(IRREPIR)
C
C DETERMINE IRREPIR WHOSE DIRECT PRODUCT WITH IRREPJ GIVES IRREPR
C
       IRREPJ=DIRPRD(IRREPR,IRREPIR)
C
C GET NUMBER OF VIRTUAL ORBITALS FOR KRREP
C
       NVRTJ=VRT2(IRREPJ)
C
       IRREPIL=DIRPRD(IRREPL,IRREPJ)
C
       NVRTIL=VRT1(IRREPIL)
C
       JOFF1=1  
       DO 89 IRREP=1,IRREPIL-1
        JOFF1=JOFF1+VRT1(IRREP)*VRT2(DIRPRD(IRREP,IRREPL))
89     CONTINUE
C
C IF NVRTIR OR NVRTIL OR NVRTJ EQUAL ZERO, NOTHING TO COMPUTE
C
       IF(MIN(NVRTJ,NVRTIR,NVRTIL).NE.0) THEN
C
          CALL XGEMM('T','N',NVRTIL,NVRTIR,NUMSYR*NVRTJ,FACT,
     &               T1(1,JOFF1),NVRTJ*NUMSYL,T2(1,JOFF2),
     &               NVRTJ*NUMSYL,ONE,DDVV(IOFF),NVRTIL)
       ENDIF
C
C  UPDATE THE OFFSETS
C
       JOFF2=JOFF2+NVRTJ*NVRTIR
       IOFF=IOFF+NVRTIL*NVRTIR
90    CONTINUE
C
      RETURN
      END
