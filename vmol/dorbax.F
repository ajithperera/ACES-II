      SUBROUTINE DORBAX (F,NP1,NP2,BBXS,PWP,NBB,NPW,XLFT,XRGT,BX,NAQRS,
     $ NND,NNE,MAXLOT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER AND
C-----------------------------------------------------------------------
C     Parameters
C-----------------------------------------------------------------------
#include "baslims.par"
      parameter (nh4=4*nht-3, nh2=nht+nht+1)
      parameter (nhq=nht*nht*nht*nht)
      parameter (mxp2=maxprim*maxprim)
C-----------------------------------------------------------------------
      DIMENSION F(*),BBXS(*),PWP(NPW,3),XLFT(NND,MAXLOT,3),
     & XRGT(NNE,MAXLOT,3),BX(NAQRS,*)
      COMMON /XA/ XAND(3,8,nh4)
      COMMON /FLAG/ IFLAG
      COMMON /CONI/ NUCT(4),NRCT(4),JSTT(4),
     1 IFD1X,IFD2X,NUCAQ,NUCRS,NXXXX,NCQRS,KQ,KR,KS,IVA
      LOGICAL IFLAG,IFPL,NP1(3),NP2(3)
      COMMON /TAB/ NNN
      COMMON/NULL_COM/FACT(nh4),RFACT(nh4),FACTM(nh4),RFACTM(nh4)
     & ,MAA,IFD1,IFD2,KCD,KBCD,NHCD,NHBCD,NNC,IFPL(3),
     & NN1,NN2,NHKTA,NHKTB,NHKTC,NHKTD,KHKTA,KHKTB,KHKTC,KHKTD
     $ ,NNB
      COMMON /DOR/ INDXY(nhq),INDZ(nhq)

#ifdef _TRACE_VMOL
c      write(*,*) '@VMOL: Entered file ',__FILE__
#endif

C
C     THE DIMENSION OF INDXY AND INDZ IS (L+1)**4
C
      NUC12=NUCT(1)*NUCT(2)
      NUMM=0
      NUML=0
      NUM=0
      NUMJ=0
      DO 1 NA=1,NHKTA
      DO 1 NB=1,NHKTB
      I12=NA+NB-1
      NUMI=0
      DO 340 NC=1,NHKTC
      DO 340 ND=1,NHKTD
      I34=NC+ND-1
      NUML=NUML+1
      JT=I12+I34-1
      IM=NNN-JT+1
      INDXY(NUML)=NUM*NCQRS+1
      INDZ(NUML)=((NUML-1)*(NNN+1)-NUM-1)*NCQRS+1
      IB4= NCQRS * (NUM+1)
      IB6 = NUCAQ * (NUMJ+I12-1)
      IF (JT.GT.2) THEN
C
C.... GENERAL CODE.  USE WHEN SUM OF Q.N.  (JT) >2
C
      DO 230 IXY=1,3
      IB44=IB4 + (IXY-1)*NBB
      CALL ZERO (BX(1,2),NAQRS*(JT-1))
      DO 52 IP=2,JT
      IF(NP1(IXY) .AND. NP2(IXY) .AND. (AND(1,IP+JT).EQ.1)) GO TO 52
      IMIN=MAX0(1,IP-I12+1)
      IMAX=MIN0(IP,I34)
      IB0 = NAQRS*(IP-2)
      DO 51 I9=IMIN,IMAX
      IF((NP2(IXY) .AND. (AND(1,I9+I34).EQ.1)) .OR.
     1   (NP1(IXY) .AND. (AND(1,I9+I12-IP).EQ.0))) GO TO 51
C...  NO SIMPLIFICATIONS DUE TO PLANARITY
      CALL MPPROD (BX,XLFT(NUCAQ*(NUMJ+IP-I9)+1,KQ,IXY),NUCAQ,
     $ XRGT(NUC12*(NUMI+I9-1)+1,IVA,IXY),NUCRS,
     $ XAND(IXY,KR,I34-I9+1)*FACT(IP))
      DO 53 I=1,NAQRS
   53 BX(I,IP) = BX(I,IP) + BX(I,1)
   51 CONTINUE
   52 CONTINUE
      CALL CMPRI(BX(1,2),BX(1,1),JT-1)
C
C...  FIRST DO THE CONTRIBUTIONS FOR I = 1&2
C
      IF(IXY.LT.3)  THEN
C...  DO  X  AND  Y  COMPONENTS.
      IF((.NOT.NP1(IXY) .OR. (AND(1,I12).EQ.1)) .AND.
     1   (.NOT.NP2(IXY) .OR. (AND(1,I34).EQ.1))) THEN
C...  NO SIMPLIFICATIONS DUE TO PLANARITY
      CALL MPPROD (BX(1,JT),XLFT(NUMJ*NUCAQ+1,KQ,IXY),NUCAQ,
     $ XRGT(NUMI*NUC12+1,IVA,IXY),NUCRS,XAND(IXY,KR,I34))
      CALL CMPR1(BX(1,JT),BBXS(NCQRS*NUM+1+(IXY-1)*NBB))
      DO 10 JPQRS=1,NCQRS
   10 BBXS(JPQRS+IB44) = BX(JPQRS+NCQRS,1) + BX(JPQRS,1)*
     * PWP(JPQRS,IXY)
C
      ELSE
C     PLANAR AB OR CD FRAGMENT
      CALL ZERO (BBXS(NCQRS*NUM+1+(IXY-1)*NBB),NCQRS)
      IF(IFPL(IXY))THEN
      CALL VM_MOVE (BX(NCQRS+1,1),BBXS(IB44+1),NCQRS)
C
      ELSE
      DO 13 JPQRS=1,NCQRS
   13 BBXS(JPQRS+IB44) = BX(JPQRS+NCQRS,1) + BX(JPQRS,1)*
     * PWP(JPQRS,IXY)
      ENDIF
C
      ENDIF
C
      ELSE
C...  DO  Z  COMPONENTS
      IF((.NOT.NP1(3) .OR. (AND(1,I12).EQ.1)) .AND.
     1   (.NOT.NP2(3) .OR. (AND(1,I34).EQ.1))) THEN
      CALL MPPROD (BX(1,JT) ,XLFT(NUMJ*NUCAQ+1,KQ,3) , NUCAQ ,
     & XRGT(NUMI*NUC12+1,IVA,3) , NUCRS, XAND(3,KR,I34))
      DO 90 IJ=1,IM
      IFB = NCQRS*IJ
      IB2 = NCQRS*(NUMM+IJ-1) + 2*NBB
      CALL CMPR1 (BX(1,JT),BX(1,JT+1))
      DO 90 JPQRS=1,NCQRS
      BBXS(JPQRS+IB2) = BX(JPQRS,JT+1)*F(JPQRS+IFB-NCQRS) +
     $ F(JPQRS+IFB) * (BX(JPQRS+NCQRS,1)+BX(JPQRS,1)*PWP(JPQRS,3))
   90 CONTINUE
C
C
      ELSE IF (IFPL(3)) THEN
C     PLANAR ABCD GEOMETRY
      DO 96 IJ=1,IM
      IFB = NCQRS*IJ
      IB2 = NCQRS * (NUMM+IJ-1)  +  2*NBB
      DO 96 JPQRS=1,NCQRS
  96  BBXS(JPQRS+IB2) = F(JPQRS+IFB) * BX(JPQRS+NCQRS,1)
C
      ELSE
C     PLANAR AB OR CD FRAGMENT
      DO 97 IJ=1,IM
      IFB = NCQRS*IJ
      IB2 = NCQRS * (NUMM+IJ-1)  +  2*NBB
      DO 97 JPQRS=1,NCQRS
   97 BBXS(JPQRS+IB2) =
     1 F(JPQRS+IFB) * (BX(JPQRS+NCQRS,1) + BX(JPQRS,1) * PWP(JPQRS,3))
      ENDIF
C
      ENDIF
C
C...  NOW DO CONTRIBUTIONS FOR I>2
C...
      IF(IFPL(IXY)) THEN
      IMAX = (JT+1)/2
      ELSE
      IMAX = JT
      ENDIF
C
      DO 220 I=3,IMAX
      IF(IFPL(IXY)) THEN
C...  PLANAR ABCD GEOMETRY
      IIX = (I+I-3)*NCQRS
CDIR$ IVDEP
*VOCL LOOP,NOVREC
      DO 125 JPQRS=1,NCQRS
  125 BX(JPQRS,JT) = RFACT(I)*BX(JPQRS+IIX,1)
C
      ELSE
      IRUM = MIN0(I,JT-I+1)
      IIX = NCQRS * (I-2)
CDIR$ IVDEP
*VOCL LOOP,NOVREC
      DO 110 JPQRS=1,NCQRS
  110 BX(JPQRS,JT) = RFACT(I)*BX(JPQRS+IIX,1)*PWP(JPQRS+IIX,IXY)
      IF(IRUM-2) 160,140,120
  120 DO 131 IRU=3,IRUM
      IIX = (I+IRU-3) * NCQRS
      IF(IRU.EQ.I) THEN
CDIR$ IVDEP
*VOCL LOOP,NOVREC
      DO 126 JPQRS=1,NCQRS
  126 BX(JPQRS,JT) = BX(JPQRS,JT) + RFACT(I)*BX(JPQRS+IIX,1)
      ELSE
      IIY= (I-IRU-1) * NCQRS
CDIR$ IVDEP
*VOCL LOOP,NOVREC
      DO 130 JPQRS=1,NCQRS
  130 BX(JPQRS,JT) = BX(JPQRS,JT) + RFACT(IRU)*RFACT(I-IRU+1)*
     1 PWP(JPQRS+IIY,IXY)*BX(JPQRS+IIX,1)
      ENDIF
  131 CONTINUE
  140 IIX = NCQRS *(I-1)
      IIY = NCQRS * (I-3)
CDIR$ IVDEP
*VOCL LOOP,NOVREC
      DO 150 JPQRS=1,NCQRS
  150 BX(JPQRS,JT) = BX(JPQRS,JT) + RFACT(I-1)*
     1 BX(JPQRS+IIX,1)*PWP(JPQRS+IIY,IXY)
      ENDIF
C
  160 IF(IXY .LT. 3)  THEN
C...  X AND Y COMPONENTS
      IB5 = NCQRS * (NUM+I-1) + (IXY-1)*NBB
      DO 170 JPQRS=1,NCQRS
  170 BBXS(JPQRS + IB5) = BX(JPQRS,JT)
C
      ELSE
C...  Z COMPONENTS
      DO 210 IJ=1,IM
      IFB = NCQRS*(IJ+I-2)
      IB2 = NCQRS * (NUMM+IJ-1)  +  2*NBB
      DO 210 JPQRS=1,NCQRS
  210  BBXS(JPQRS + IB2) =
     1 BBXS(JPQRS + IB2) +
     2 F(JPQRS+IFB) * BX(JPQRS,JT)
      ENDIF
C
  220 CONTINUE
  230 CONTINUE
C
      ELSE IF (JT.EQ.2) THEN
C...  X AND Y COMPONENTS
      IB8 = NUC12 * (NUMI+I34-1)
      DO 270 IXY=1,2
      IB44=IB4 + (IXY-1)*NBB
      IF(IFPL(IXY)) GO TO 270
      IF((.NOT.NP1(IXY) .OR. (I12.EQ.1)) .AND.
     1   (.NOT.NP2(IXY) .OR. (I34.EQ.1))) THEN
      CALL MVPROD(BX,XLFT(IB6+1,KQ,IXY),NUCAQ,XRGT(IB8+1,IVA,IXY),
     & NUCRS)
      CALL MPPROD(BX(1,2),XLFT(NUMJ*NUCAQ+1,KQ,IXY),NUCAQ,
     & XRGT(NUMI*NUC12+1,IVA,IXY),NUCRS,XAND(IXY,KR,I34))
      CALL CMPR2(BX,BX(1,2),BX(1,3),BBXS(NCQRS*NUM+1+(IXY-1)*NBB))
      DO 260 JPQRS=1,NCQRS
  260 BBXS(JPQRS + IB44) = BX(JPQRS,3)*PWP(JPQRS,IXY)
C
      ELSE
C     PLANAR AB OR CD FRAGMENT
      CALL MVPROD(BX(1,2),XLFT(IB6+1,KQ,IXY),NUCAQ,XRGT(IB8+1,IVA,IXY),
     & NUCRS)
      CALL CMPR1(BX(1,2),BX)
      CALL ZERO (BBXS(NCQRS*NUM+1+(IXY-1)*NBB),NCQRS)
      DO 261 JPQRS=1,NCQRS
  261 BBXS(JPQRS + IB44) = BX(JPQRS,1)*PWP(JPQRS,IXY)
      ENDIF
C
  270 CONTINUE
C...  Z COMPONENTS
      IF( .NOT.IFPL(3)) THEN
      IF((.NOT.NP1(3) .OR. (I12.EQ.1)) .AND.
     1   (.NOT.NP2(3) .OR. (I34.EQ.1))) THEN
      CALL MVPROD(BX(1,4),XLFT(IB6+1,KQ,3),NUCAQ,XRGT(IB8+1,IVA,3),
     $ NUCRS)
      CALL MPPROD(BX(1,3),XLFT(NUMJ*NUCAQ+1,KQ,3),NUCAQ,
     $ XRGT(NUMI*NUC12+1,IVA,3),NUCRS,XAND(3,KR,I34))
      CALL CMPR2(BX(1,3),BX(1,4),BX(1,1),BX(1,2))
      DO 285 JPQRS=1,NCQRS
  285 BX(JPQRS,2) = BX(JPQRS,2) * PWP(JPQRS,3)
      DO 290 IJ=1,IM
      IFB = NCQRS*IJ
      IB2 = NCQRS *(NUMM+IJ-1)  +  2*NBB
      DO 290 JPQRS=1,NCQRS
  290 BBXS(JPQRS + IB2) = BX(JPQRS,2) * F(JPQRS+IFB) +
     1 BX(JPQRS,1) * F(JPQRS+IFB-NCQRS)
C
      ELSE
C     PLANAR AB OR CD FRAGMENT
      CALL MVPROD (BX(1,4),XLFT(IB6+1,KQ,3),NUCAQ,XRGT(IB8+1,IVA,3),
     $ NUCRS)
      CALL CMPR1(BX(1,4),BX(1,2))
      DO 286 JPQRS=1,NCQRS
 286  BX(JPQRS,2) = BX(JPQRS,2) * PWP(JPQRS,3)
      GO TO 298
      DO 297 IJ=1,IM
      IFB = NCQRS*IJ
      IB2 = NCQRS * (NUMM+IJ-1)  +  2*NBB
      DO 291 JPQRS=1,NCQRS
  291 BBXS(JPQRS + IB2) = BX(JPQRS,2) * F(JPQRS+IFB)
  297 CONTINUE
  298 CALL PROD(BBXS(NCQRS*NUMM+2*NBB+1),BX(1,2),F(NCQRS+1),NCQRS,IM)
C
C     HAD TO DO THIS 'CAUSE OF A COMPILER BUG
C     PROD  DOES WHAT THE LOOP ->297 WAS SUPPOSEDTO
C     J.A. JULY -84
C
      ENDIF
C
      ENDIF
      ELSE
C...  SPECIAL CASE FOR JT=1
      DO 320 JPQRS=1,NCQRS
      BBXS(JPQRS) = 1.
  320 BBXS(JPQRS+NBB) = 1.
      CALL VM_MOVE(F,BBXS(2*NBB+1),IM*NCQRS)
      ENDIF
C
      NUMM=NUMM +IM
      NUM=NUM+JT
  340 NUMI=NUMI+I34
    1 NUMJ=NUMJ+I12

#ifdef _TRACE_VMOL
c      write(*,*) '@VMOL: Leaving file ',__FILE__
#endif

      RETURN
      END
