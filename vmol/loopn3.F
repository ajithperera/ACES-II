      SUBROUTINE LOOPN3 (LSL,AINT,I2,A2,I1,A1)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER EOR,DSTRT,XNEQV
      INTEGER AND,OR
      LOGICAL IFD1,IFD2,IFD3,IFD2X,T1,T2,T3
C
C-----------------------------------------------------------------------
C     Parameters
C-----------------------------------------------------------------------
#include "baslims.par"
#include "mxatms.par"
      parameter (nh4=4*nht-3, nh2=nht+nht+1)
      parameter (mxp2=maxprim*maxprim)
C-----------------------------------------------------------------------
C
      DIMENSION LSL(2),SUPER(2),AINT(2)
      DIMENSION I2(20),A2(1),I1(50),A1(1)
C
      COMMON /FLAG/ IFLAG
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /REP/ NEWIND(MXCBF) , MSTOLD(8)
      COMMON /MMMM/M2,M3,LINA,MUM,MIM,NMAS,MX,MRAF,NMSS,LIA,JJUNK(2)
      COMMON/NULL_COM/FACT(nh4),RFACT(nh4),FACTM(nh4),RFACTM(nh4)
     & ,MAA,IFD1,IFD2,KCD,KBCD,NHCD,NHBCD,NNC,IFPL(3),
     & NN1,NN2,NHKTA,NHKTB,NHKTC,NHKTD,KHKTA,KHKTB,KHKTC,KHKTD,NNB
      COMMON /INDX/ PC(512),DSTRT(8,MXCBF),NTAP,LU2,NRSS,NUCZ,ITAG,
     1 MAXLOP,MAXLOT,KMAX,NMAX,KHKT(7),MULT(8),ISYTYP(3),ITYPE(7,28),
     2 LAND(64),XNEQV(8,8),EOR(8,8),NPARSU(8),NPAR(8),MULNUC(Mxatms),
     3 NHKT(MXTNSH),MUL(MXTNSH),NUCO(MXTNSH),NRCO(MXTNSH),JSTRT(MXTNSH),
     4 NSTRT(MXTNSH),MST(MXTNSH),JRS(MXTNSH)
      COMMON /DAT/  ALPHA(MXTNPR),CONT(MXTNCC),CENT(3,MXTNSH),
     1              CORD(Mxatms,3),CHARGE(Mxatms),FMULT(8),TLA, TLC
      COMMON /ITY/ ITYA(28),ITYB(28),ITYC(28),ITYD(28), 
     1 KPQRS,NSTA,NSTB,NSTC,NSTD,MUT,NUMSM(4),NBLOCK(4),
     1 JA(8),JB(8),JC(8),JD(8),BUF(2400),IBUF(2400),NUTTY(4),N2TAPE(4),
     X LEOR8(64),IFD3,MULA,MULB,MULC,MULD
      COMMON /CONI/ NUCT(4),NRCT(4),JSTT(4),
     1 IFD1X,IFD2X,NUCAQ,NUCRS,NAQRS,NCQRS,KQ,KR,KS,IVA
      COMMON /SYMIND/ LABORB(MXCBF)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA HALF/0.5D0/
C 
C...  STATEMENT FUNCTIONS
      IPK4(I,J,K,L)=OR(OR(OR(ISHFT(I,3*IBITWD),ISHFT(J,2*IBITWD)),
     &              ISHFT(K,IBITWD)),L)
c      IPK4(I,J,K,L)   = ISHFT(I,3*IBITWD).OR.ISHFT(J,2*IBITWD).OR.
c     &                  ISHFT(K,  IBITWD).OR. L
      INEQV4(I,J,K,L) = NEQV(NEQV(I,J) , NEQV(K,L))
C...
C...  PUT SO INTEGRALS IN OUTPUT BUFFER
C     AND CALCULATE GLOBAL ORBITAL INDICES
C
C...  THIS SEQUENCE TAKES CARE OF QUANTUM NUMBERS HIGHER THAN SSSS,
C     GENERAL CONTRACTION AND CASES WITH NO SYMMETRY.
C
      NUM=0
      DO 200 NA=1,KHKTA
      LA=ITYA(NA)/8
      DO 190 NB=1,KHKTB
      IF(.NOT.IFD1  .AND.  NA.LT.NB) GO TO 190
      MY=ITYB(NB)/8
      DO 180 NC = 1,KHKTC
      T3 = .FALSE.
      IF(.NOT.IFD3) THEN
      IF(NA.LT.NC) GO TO 180
      T3 = NA.EQ.NC
      ENDIF
      NY=ITYC(NC)/8
      DO 170 ND=1,KHKTD
      IF(.NOT.IFD2  .AND.  NC.LT.ND) GO TO 170
      NUM=NUM+1
      IF(T3  .AND.  NB.LT.ND) GO TO 160
      LMNY=ITYD(ND)/8
      IF(AND(INEQV4(LA,MY,NY,LMNY),MX) .NE. 0) GO TO 170
C
C....    DECIDE SYMMETRY CASE OF THIS BLOCK
C
      ICASE = 1
      IF (LA .NE. MY) ICASE = ICASE + 1
      IF (MAX0(LA,MY) .NE. MAX0(NY,LMNY)) ICASE = ICASE + 2
      N2TAP = N2TAPE(ICASE)
      IBOFF = 600*(ICASE - 1)

      JNA=DSTRT(LA+1,NSTA+NA)+MSTOLD(LA+1)-NRCT(3)
      JNB=DSTRT(MY+1,NSTB+NB)+MSTOLD(MY+1)-NRCT(4)
      JNC=DSTRT(NY+1,NSTC+NC)+MSTOLD(NY+1)-NRCT(1)
      JND=DSTRT(LMNY+1,NSTD+ND)+MSTOLD(LMNY+1)-NRCT(2)
       DO 100 K1 = 1,NRCT(1)
      K2M=NRCT(2)
      IF(JNC.EQ.JND) K2M=K1
       DO 100 K2 = 1,K2M
      K3M=NRCT(3)
      IF(JNA.EQ.JNC .AND. JNB.EQ.JND) K3M=K1
       DO100 K3 = 1,K3M
      K4M=NRCT(4)
      IF(JNA.EQ.JNB) K4M=K3
       IF(K1.EQ.K3 .AND. JNA.EQ.JNC .AND. JNB.EQ.JND) K4M=K2
       DO 100 K4 = 1,K4M
      NKD=(((K1-1)*NRCT(2)+K2-1)*NRCT(3)+K3-1)*NRCT(4)+K4+(NUM-1)*MRAF
      BUFNUT = AINT(NKD)*FMULT(KPQRS)
      IF (ABS(BUFNUT) .LE. TLA) GOTO 100
      INDA =JNA + K3
        INDAN = NEWIND(INDA)
      INDB = JNB + K4
        INDBN = NEWIND(INDB)
      INDC = JNC + K1
        INDCN = NEWIND(INDC)
      INDD = JND + K2
        INDDN = NEWIND(INDD)
       IF(INDAN*INDBN*INDCN*INDDN  .EQ.  0)  GO TO 100
      INDA = LABORB(INDAN)
      INDB = LABORB(INDBN)
      INDC = LABORB(INDCN)
      INDD = LABORB(INDDN)
      NUTTY(ICASE) = NUTTY(ICASE) + 1
      NUT = NUTTY(ICASE)
Cadjust for new scf jg
c      IF(INDAN.EQ.INDBN) BUFNUT=BUFNUT*HALF
c      IF(INDCN.EQ.INDDN) BUFNUT=BUFNUT*HALF
c      IF(MAX(INDAN,INDBN).EQ.MAX(INDCN,INDDN).AND.
c     &   MIN(INDAN,INDBN).EQ.MIN(INDCN,INDDN)) BUFNUT=BUFNUT*HALF 
Cadjust for new scf jg
      BUF(IBOFF+NUT) = BUFNUT
CJFS
      IBUF(IBOFF+NUT)=IPK4(MAX(INDAN,INDBN),MIN(INDAN,INDBN),
     &                     MAX(INDCN,INDDN),MIN(INDCN,INDDN))
CJFS
      NUMSM(ICASE) = NUMSM(ICASE) + 1
      IF(IFLAGS(1).GE.500)WRITE(6,5000)indan,indbn,indcn,inddn,BUFNUT
5000  FORMAT(T5,4I5,F20.12)
      IF(NUT.LT.600) GO TO 100
      call wrseq(buf(iboff+1),ibuf(iboff+1),nut,600,n2tap)
c      WRITE(N2TAP) (BUF(IBOFF+J),J = 1,600),
c     1             (IBUF(IBOFF+J),J = 1,600), NUT
      NBLOCK(ICASE) = NBLOCK(ICASE) + 1
      NUTTY(ICASE) = 0
  100 CONTINUE
  160 CONTINUE
  170 CONTINUE
  180 CONTINUE
  190 CONTINUE
  200 CONTINUE
      RETURN
C
      ENTRY LOPSS1 (LSL)
C...  PREPARATORY SYMMETRY LOOP FOR SSSS-CASE
      MUM = MULD-1+MAXLOP*(MULC-1+MAXLOP*(MULB-1+MAXLOP*(MULA-1)))
      LINA = 0
      DO 413 LA=0,MIM
      IF(AND(LA,MULA-1)  .NE.  0) GO TO 413
      DO 412 MY=0,MIM
      IF(AND(MY,MULB-1)  .NE.  0) GO TO 412
      DO 411 NY=0,MIM
      IF(AND(NY,MULC-1)  .NE.  0) GO TO 411
      LMNY = NEQV(NEQV(LA,MY),NY)
      IF(AND(LMNY,MULD-1) .NE. 0) GO TO 411
      LINA = LINA + 1
      LSL(LINA) = LMNY+MAXLOP*(NY+MAXLOP*(MY+MAXLOP*LA))
  411 CONTINUE
  412 CONTINUE
  413 CONTINUE
      I1(4)=I1(3)+LINA
      I1(5)=I1(4)+LINA*MRAF
      I1(6)=I1(5)+NAQRS
      I1(7)=I1(6)+NAQRS
      I2(3)=I2(2)
      RETURN
C
      ENTRY LOPSR3 (LSL,SUPER)
C...  SSSS CASE, GENERAL CONTRACTION
      DO 105 L=1,MAXLOP
      JA(L)=DSTRT(L,NSTA+1)+MSTOLD(L)
      JB(L)=DSTRT(L,NSTB+1)+MSTOLD(L)
      JC(L)=DSTRT(L,NSTC+1)+MSTOLD(L)
      JD(L)=DSTRT(L,NSTD+1)+MSTOLD(L)
  105 CONTINUE
      DO 2020 LL=1,NMAS
      L = LSL(LL)
      LA = L/(M3+1)  +1
      MY = AND(MIM,L/M2) + 1
      NY = AND(MIM,L/MAXLOP) + 1
      LMNY = AND(MIM,L) + 1
      IF(.NOT.IFD1.AND.LA.LT.MY.OR..NOT.IFD2.AND.NY.LT.LMNY) GO TO 2020
      IF (.NOT.IFD3) THEN
      IF(LA-NY) 2020,3822,3823
 3822 IF(MY.LT.LMNY) GO TO 2020
 3823 CONTINUE
      ENDIF
C
C....    DECIDE SYMMETRY CASE OF THIS BLOCK HERE
C
      ICASE = 1
      IF (LA .NE. MY) ICASE = ICASE + 1
      IF (MAX0(LA,MY) .NE. MAX0(NY,LMNY)) ICASE = ICASE + 2
      N2TAP = N2TAPE(ICASE)
      IBOFF = 600*(ICASE - 1)
      JNA = JA(LA)-NRCT(3)
      JNB = JB(MY)-NRCT(4)
      JNC = JC(NY)-NRCT(1)
      JND = JD(LMNY)-NRCT(2)
       DO 300 K1 = 1,NRCT(1)
C     THE LOOPS CAN BE MADE MORE EFFICIENT. LOOP FROM JNA+1, ETC.
      K2M=NRCT(2)
      IF(JNC.EQ.JND) K2M=K1
       DO 300 K2 = 1,K2M
      K3M=NRCT(3)
      IF(JNA.EQ.JNC .AND. JNB.EQ.JND) K3M=K1
       DO300 K3 = 1,K3M
      K4M=NRCT(4)
      IF(JNA.EQ.JNB) K4M=K3
       IF(K1.EQ.K3 .AND. JNA.EQ.JNC .AND. JNB.EQ.JND) K4M=K2
       DO 300 K4 = 1,K4M
      NRK=(((K1-1)*NRCT(2)+K2-1)*NRCT(3)+K3-1)*NRCT(4)+K4+MRAF*(LL-1)
      BUFNUT = SUPER(NRK)*FMULT(KPQRS)
      IF (ABS(BUFNUT) .LE. TLA) GOTO 300
      INDA = JNA + K3
        INDA = NEWIND(INDA)
      INDB = JNB + K4
        INDB = NEWIND(INDB)
      INDC = JNC + K1
        INDC = NEWIND(INDC)
      INDD = JND + K2
        INDD = NEWIND(INDD)
        IF (INDA*INDB*INDC*INDD  .EQ. 0) GO TO 300
      INDA = LABORB(INDA)
      INDB = LABORB(INDB)
      INDC = LABORB(INDC)
      INDD = LABORB(INDD)
      NUMSM(ICASE) = NUMSM(ICASE) + 1
      NUTTY(ICASE) = NUTTY(ICASE) + 1
      NUT = NUTTY(ICASE)
Cnewscf
c      IF(INDA.EQ.INDB) BUFNUT=BUFNUT*HALF 
c      IF(INDC.EQ.INDD) BUFNUT=BUFNUT*HALF
c      IF(MAX(INDA,INDB).EQ.MAX(INDC,INDD).AND.      
c     &   MIN(INDA,INDB).EQ.MIN(INDC,INDD)) BUFNUT=BUFNUT*HALF
Cnewscf
      BUF(IBOFF+NUT) = BUFNUT
CJFS
      IBUF(IBOFF+NUT)=IPK4(MAX(INDA,INDB),MIN(INDA,INDB),
     &                     MAX(INDC,INDD),MIN(INDC,INDD))
CJFS
      IF(NUT.LT.600) GO TO 300
      WRITE(N2TAP) (BUF(IBOFF+J),J = 1,600),
     1             (IBUF(IBOFF+J),J = 1,600), NUT
      NBLOCK(ICASE) = NBLOCK(ICASE) + 1
      NUTTY(ICASE) = 0
 300  CONTINUE
 2020 CONTINUE
      RETURN
      END
