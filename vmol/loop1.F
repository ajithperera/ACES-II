      SUBROUTINE LOOP1(LSL,ISV,I2,A2,I1,A1)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL IFD1,IFD2,IFD3,T1,T2,T3,IFLAG,IFD2X
      INTEGER EOR,DSTRT,XNEQV,AND
      INTEGER OR
C
C-----------------------------------------------------------------------
C     Parameters
C-----------------------------------------------------------------------
#include "baslims.par"
#include "mxatms.par"
      parameter (nh4=4*nht-3, nh2=nht+nht+1)
      parameter (mxp2=maxprim*maxprim)
C-----------------------------------------------------------------------
C
      DIMENSION I2(20),A2(1),I1(50),A1(1)
      DIMENSION LSL(2),ISV(2),SUPER(2)
C
      COMMON /FLAG/ IFLAG
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /REP/ NEWIND(MXCBF) , MSTOLD(8)
      COMMON /MMMM/ M2,M3,LINA,MUM,MIM,NMAS,MX,MRAF,NMSS,LIA,JJUNK(2)
      COMMON/NULL_COM/FACT(nh4),RFACT(nh4),FACTM(nh4),RFACTM(nh4)
     & ,MAA,IFD1,IFD2,KCD,KBCD,NHCD,NHBCD,NNC,IFPL(3),
     & NN1,NN2,NHKTA,NHKTB,NHKTC,NHKTD,KHKTA,KHKTB,KHKTC,KHKTD,NNB
      COMMON /INDX/ PC(512),DSTRT(8,MXCBF),NTAP,LU2,NRSS,NUCZ,ITAG,
     1 MAXLOP,MAXLOT,KMAX,NMAX,KHKT(7),MULT(8),ISYTYP(3),ITYPE(7,28),
     2 LAND(64),XNEQV(8,8),EOR(8,8),NPARSU(8),NPAR(8),MULNUC(Mxatms),
     3 NHKT(MXTNSH),MUL(MXTNSH),NUCO(MXTNSH),NRCO(MXTNSH),JSTRT(MXTNSH),
     4 NSTRT(MXTNSH),MST(MXTNSH),JRS(MXTNSH)
      COMMON /DAT/  ALPHA(MXTNPR),CONT(MXTNCC),CENT(3,MXTNSH),
     1              CORD(Mxatms,3),CHARGE(Mxatms),FMULT(8),TLA, TLC
      COMMON /ITY/ ITYA(28),ITYB(28),ITYC(28),ITYD(28),
     1 KPQR,NSTA,NSTB,NSTC,NSTD,MUT,NUMSM(4),NBLOCK(4),
     1 JA(8),JB(8),JC(8),JD(8),BUF(2400),IBUF(2400),NUTTY(4),N2TAPE(4),
     X LEOR8(64),IFD3,MULA,MULB,MULC,MULD
      COMMON /CONI/ NUCT(4),NRCT(4),JSTT(4),
     1 IFD1X,IFD2X,NUCAQ,NUCRS,NAQRS,NCQRS,KQ,KR,KS,IVA
      COMMON /SYMIND/ LABORB(MXCBF)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA HALF/0.5D0/
C
c      IPK4(I,J,K,L)=ISHFT(I,3*IBITWD).OR.ISHFT(J,2*IBITWD).OR.
c     &              ISHFT(K,IBITWD  ).OR.L
      IPK4(I,J,K,L)=OR(OR(OR(ISHFT(I,3*IBITWD),ISHFT(J,2*IBITWD)),
     &              ISHFT(K,IBITWD)),L)
      INEQV4(I,J,K,L) = NEQV(NEQV(I,J) , NEQV(K,L))
      IPK3(I,J,K) = (I*MAXLOP+J)*MAXLOP + K
C
C...
C...  CALCULATE THE NUMBER OF SYMMETRY INTEGRALS THAT ARE ASSOCIATED TO
C     EACH QUADRUPLET OF GCTO*S. (SUMMED OVER ALL QUADRUPLETS OF I.R.S).
      MUM = IPK3(MULA-1,MULB-1,MULC-1)*MAXLOP +MULD - 1
      LINA=0
      LIA = 0
      DO 404 NA=1,KHKTA
      ITA=ITYA(NA)
      DO 403 NB=1,KHKTB
      IF(.NOT.IFD1.AND.NB.GT.NA)  GO TO 403
      ITB=ITYB(NB)
      DO 402 NC=1,KHKTC
      IF(.NOT.IFD3.AND.NC.GT.NA) GO TO 402
      ITC=ITYC(NC)
      III = IPK3(ITA,ITB,ITC)*MAXLOP
      DO 401 ND=1,KHKTD
      IF(.NOT.IFD2.AND.ND.GT.NC) GO TO 401
c     if(.not.ifd3 .and. (nc.eq.na .and. nd.gt.nb)) go to 401
      ITD=ITYD(ND)
      IF(AND(INEQV4(ITA,ITB,ITC,ITD)/8,MX) .NE. 0) LINA=LINA+NMAS
      LIA=LIA+1
      ISV(LIA) = (III+ITD)/8
      DO 413 LA=0,MIM
      IF(LAND(LEOR8(ITA+LA+1)+MULA)   .NE. 1) GO TO 413
      DO 412 MY=0,MIM
      IF(LAND(LEOR8(ITB+MY+1)+MULB)   .NE. 1) GO TO 412
      DO 411 NY=0,MIM
      IF(LAND(LEOR8(ITC+NY+1)+MULC)   .NE. 1) GO TO 411
      LMNY = NEQV(NEQV(LA,MY),NY)
      IF(LAND(LEOR8(ITD+LMNY+1)+MULD) .NE. 1) GO TO 410
      LINA=LINA+1
      LSL(LINA) = LMNY + MAXLOP*(NY + MAXLOP*(MY + MAXLOP*LA))
  410 CONTINUE
  411 CONTINUE
  412 CONTINUE
  413 CONTINUE
  401 CONTINUE
  402 CONTINUE
  403 CONTINUE
  404 CONTINUE
      I1(4)=I1(3)+LINA
      I1(5)=I1(4)+LINA*MRAF
      I2(3)=I2(2)+LIA
      I1(6)=I1(5)+NAQRS
      I1(7)=I1(6)+NAQRS
      RETURN
C
C
      ENTRY LOOP3 (LSL,SUPER)
C...  PUT SO INTEGRALS IN OUTPUT BUFFER
C     AND CALCULATE GLOBAL ORBITAL INDICES
      LAMY=-MRAF
      LMA = 0
      DO 41 NA=1,KHKTA
      ITA=ITYA(NA)
      DO 42 NB=1,KHKTB
      T1 = .FALSE.
      IF(.NOT.IFD1) THEN
      IF(NA.LT.NB) GO TO 42
      T1 = NA.EQ.NB
      ENDIF
      ITB=ITYB(NB)
      DO 43 NC=1,KHKTC
      T3 = .FALSE.
      IF(.NOT.IFD3) THEN
      IF(NA.LT.NC) GO TO 43
      T3 = NA.EQ.NC
      ENDIF
      ITC=ITYC(NC)
      DO 11 ND=1,KHKTD
      T2 = .FALSE.
      IF(.NOT.IFD2) THEN
      IF(NC.LT.ND) GO TO 11
      T2 = NC.EQ.ND
      ENDIF
c     if (t3 .and. nd.gt.nb) go to 11
      ITD=ITYD(ND)
      DO 105 L=1,MAXLOP
      JA(L)=DSTRT(L,NSTA+NA)+MSTOLD(L)
      JB(L)=DSTRT(L,NSTB+NB)+MSTOLD(L)
      JC(L)=DSTRT(L,NSTC+NC)+MSTOLD(L)
      JD(L)=DSTRT(L,NSTD+ND)+MSTOLD(L)
  105 CONTINUE
      IF(AND(INEQV4(ITA,ITB,ITC,ITD)/8,MX) .NE. 0) THEN
      LAMY=LAMY+MRAF*NMAS
      GO TO 2021
      ENDIF
      DO 2020 LL=1,NMAS
      L =LSL(LL+LMA)
      LA = L/(M3+1)
      MY = AND(MIM,L/M2)
      NY = AND(MIM,L/MAXLOP)
      LMNY = AND(MIM,L)
      LAMY=LAMY+MRAF
      IF (T1.AND.LA.LT.MY  .OR.  T2.AND.NY.LT.LMNY) GO TO 30
      IF (T3) THEN
      IF(LA-NY) 30,3821,3823
 3821 IF(NB-ND) 30,3822,3823
 3822 IF(MY.LT.LMNY) GO TO 30
 3823 CONTINUE
      ENDIF
C
C....    DECIDE SYMMETRY CASE OF THIS BLOCK
C
      ICASE = 1
      IF (LA .NE. MY) ICASE = ICASE + 1
      IF (MAX0(LA,MY) .NE. MAX0(NY,LMNY)) ICASE = ICASE + 2
      N2TAP = N2TAPE(ICASE)
      IBOFF = 600*(ICASE - 1)
      JNA = JA(LA+1) - NRCT(3)
      JNB = JB(MY+1) - NRCT(4)
      JNC = JC(NY+1) - NRCT(1)
      JND = JD(LMNY+1) - NRCT(2)
C     THE LOOPS CAN BE MADE MORE EFFICIENT. LOOP FROM JNA+1, ETC.
       DO100 K1 = 1,NRCT(1)
      K2M=NRCT(2)
      IF(JNC.EQ.JND) K2M=K1
       DO100 K2 = 1,K2M
      K3M=NRCT(3)
      IF(JNA.EQ.JNC .AND. JNB.EQ.JND) K3M=K1
       DO 100 K3 = 1,K3M
      K4M=NRCT(4)
      IF(JNA.EQ.JNB) K4M=K3
       IF(K1.EQ.K3 .AND. JNA.EQ.JNC .AND. JNB.EQ.JND) K4M=K2
       DO 100 K4 = 1,K4M
      NRK = (((K1-1)*NRCT(2)+K2-1)*NRCT(3)+K3-1)*NRCT(4)+K4
      SUP=SUPER(LAMY+NRK)
      S=SUP*FMULT(KPQR)
      IF (ABS(S) .LE. TLA) GOTO 100
      INDA =JNA + K3
        INDAN = NEWIND(INDA)
      INDB = JNB + K4
        INDBN = NEWIND(INDB)
      INDC = JNC + K1
        INDCN = NEWIND(INDC)
      INDD = JND + K2
        INDDN = NEWIND(INDD)
C 255 functions Check...
      IF (INDAN*INDBN*INDCN*INDDN  .EQ. 0)  GO TO 100
      INDA = LABORB(INDAN)
      INDB = LABORB(INDBN)
      INDC = LABORB(INDCN)
      INDD = LABORB(INDDN)
      NUMSM(ICASE) = NUMSM(ICASE) + 1
      NUTTY(ICASE) = NUTTY(ICASE) + 1
      NUT = NUTTY(ICASE)
Cadjust for new scf jg
c      IF(INDAN.EQ.INDBN) S=S*HALF
c      IF(INDCN.EQ.INDDN) S=S*HALF
c      IF(MAX(INDAN,INDBN).EQ.MAX(INDCN,INDDN).AND.
c     &   MIN(INDAN,INDBN).EQ.MIN(INDCN,INDDN)) S=S*HALF 
Cadjust for new scf jg
      BUF(IBOFF+NUT)=S
CJFS
      IBUF(IBOFF+NUT)=IPK4(MAX(INDAN,INDBN),MIN(INDAN,INDBN),
     &                     MAX(INDCN,INDDN),MIN(INDCN,INDDN))
CJFS
      IF(IFLAGS(1).GE.500)WRITE(6,5000)INDAN,INDBN,INDCN,INDDN,S
5000  FORMAT(T5,4I5,F20.12)
      IF(NUT.LT.600) GO TO 100
      call wrseq(buf(iboff+1),ibuf(iboff+1),nut,600,n2tap)
c      WRITE(N2TAP) (BUF(IBOFF+J),J = 1,600),
c     1             (IBUF(IBOFF+J),J = 1,600), NUT
      NBLOCK(ICASE) = NBLOCK(ICASE) + 1
      NUTTY(ICASE) = 0
  100 CONTINUE
   30 CONTINUE
 2020 CONTINUE
 2021 CONTINUE
      LMA = LMA + NMAS
   11 CONTINUE
   43 CONTINUE
   42 CONTINUE
   41 CONTINUE
      RETURN
      END
