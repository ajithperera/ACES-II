      SUBROUTINE T2T314O(W,VIJ,VIK,VJK,ICORE,
     1                   IADW,
     1                   IRPI,IRPJ,IRPK,IRPIJ,IRPIK,IRPJK,IRPIJK,
     1                   I,J,K,ISPIN,LNVOIJ,LNVOIK,LNVOJK,LAMBDA)
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION W(1),ICORE(1)
      DOUBLE PRECISION VIJ(LNVOIJ,1),VIK(LNVOIK,1),VJK(LNVOJK,1)
      LOGICAL LAMBDA
      DIMENSION IADW(8)
      DIMENSION IADV(8),LENV(8)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     1                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYM/    POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF2AA,
     1                NF1BB,NF2BB
      COMMON /INFO/   NOCCO(2),NVRTO(2)
C
      COMMON /T3OFF/  IOFFVV(8,8,10),IOFFOO(8,8,10),IOFFVO(8,8,4)
      COMMON /T2ILIS/ LIST2I1,LIST2I2,LIST2I3
C
      INDEX(I) = I*(I-1)/2

      IF (LAMBDA) THEN
         LISTOFF=200
      ELSE
         LISTOFF=0
      ENDIF
C
      IF(ISPIN.EQ.1)THEN
      LIST2I = LIST2I1+LISTOFF
      ELSE
      LIST2I = LIST2I2+LISTOFF
      ENDIF
C
C     ROUTINE TO COMPUTE INCLUSION OF T3 AAA OR T3 BBB IN T2 AA 
C     OR T2 BB.
C
C     W IS (A<B,C) REPRESENTATION OF T3 (A<C<D).
C
C
C      AB  AB                      ABC
C     D   T    =  - SUM  <JK//MC> T       I<J<K   W(A<B,C) * V(C)
C      IM  IM       J<K            IJK
C                    C
C
C     SET ADDRESSES FOR INTEGRALS/INTERMEDIATES.
C
      DO   10 IRPM=1,NIRREP
      IRPC = DIRPRD(IRPM,IRPJK)
      LENV(IRPM) = VRT(IRPC,ISPIN)*POP(IRPM,ISPIN)
      IF(IRPM.EQ.1)THEN
      IADV(IRPM) = 1
      ELSE
      IADV(IRPM) = IADV(IRPM-1) + LENV(IRPM-1)
      ENDIF
   10 CONTINUE
C
C     SET ADDRESSES FOR T2 MATRIX.
C
      IOFFT2 = IADV(NIRREP) + LENV(NIRREP)
C
      IF(IRPJ.EQ.IRPK)THEN
      JK = INDEX(K-1) + J
      ELSE
      JK = (K-1)*POP(IRPJ,ISPIN) + J
      ENDIF
C
      DO   50 IRPM=1,NIRREP
      IF(POP(IRPM,ISPIN).EQ.0) GOTO 50
C
      IRPIM = DIRPRD(IRPI,IRPM)
      IF(IRPM.GT.IRPI)THEN
C
      DO   20 M=1,POP(IRPM,ISPIN)
      IM = IOFFOO(IRPM,IRPIM,ISPIN) + (M-1)*POP(IRPI,ISPIN) + I
      CALL GETLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
C
      IRPC = DIRPRD(IRPJK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VJK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),JK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPIM,ISPIN),VRT(IRPC,ISPIN),0,1)
C
      CALL PUTLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
   20 CONTINUE
      ENDIF
C
      IF(IRPM.LT.IRPI)THEN
C
      DO   30 M=1,POP(IRPM,ISPIN)
      IM = IOFFOO(IRPI,IRPIM,ISPIN) + (I-1)*POP(IRPM,ISPIN) + M
      CALL GETLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
C
      IRPC = DIRPRD(IRPJK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VJK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),JK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPIM,ISPIN),VRT(IRPC,ISPIN),0,0)
C
      CALL PUTLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
   30 CONTINUE
      ENDIF
C
      IF(IRPM.EQ.IRPI)THEN
C
      DO   40 M=1,POP(IRPM,ISPIN)
C
      IF(M.GT.I)THEN
      IM = IOFFOO(IRPM,IRPIM,ISPIN) + INDEX(M-1) + I
      CALL GETLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
C
      IRPC = DIRPRD(IRPJK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VJK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),JK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPIM,ISPIN),VRT(IRPC,ISPIN),0,1)
C
      CALL PUTLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
      ENDIF
C
      IF(M.LT.I)THEN
      IM = IOFFOO(IRPI,IRPIM,ISPIN) + INDEX(I-1) + M
      CALL GETLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
C
      IRPC = DIRPRD(IRPJK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VJK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),JK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPIM,ISPIN),VRT(IRPC,ISPIN),0,0)
C
      CALL PUTLST(ICORE(IOFFT2),IM,1,1,IRPIM,LIST2I)
      ENDIF
   40 CONTINUE
      ENDIF
   50 CONTINUE
C
C      AB  AB                      ABC
C     D   T    =    SUM  <IK//MC> T       I<J<K   W(A<B,C) * V(C)
C      JM  JM       I<K            IJK
C                    C
C
C     SET ADDRESSES FOR INTEGRALS/INTERMEDIATES.
C
      DO  110 IRPM=1,NIRREP
      IRPC = DIRPRD(IRPM,IRPIK)
      LENV(IRPM) = VRT(IRPC,ISPIN)*POP(IRPM,ISPIN)
      IF(IRPM.EQ.1)THEN
      IADV(IRPM) = 1
      ELSE
      IADV(IRPM) = IADV(IRPM-1) + LENV(IRPM-1)
      ENDIF
  110 CONTINUE
C
C     SET ADDRESSES FOR T2 MATRIX.
C
      IOFFT2 = IADV(NIRREP) + LENV(NIRREP)
C
      IF(IRPI.EQ.IRPK)THEN
      IK = INDEX(K-1) + I
      ELSE
      IK = (K-1)*POP(IRPI,ISPIN) + I
      ENDIF
C
      DO  150 IRPM=1,NIRREP
      IF(POP(IRPM,ISPIN).EQ.0) GOTO 150
C
      IRPJM = DIRPRD(IRPJ,IRPM)
      IF(IRPM.GT.IRPJ)THEN
C
      DO  120 M=1,POP(IRPM,ISPIN)
      JM = IOFFOO(IRPM,IRPJM,ISPIN) + (M-1)*POP(IRPJ,ISPIN) + J
      CALL GETLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
C
      IRPC = DIRPRD(IRPIK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPJM,ISPIN),VRT(IRPC,ISPIN),0,0)
C
      CALL PUTLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
  120 CONTINUE
      ENDIF
C
      IF(IRPM.LT.IRPJ)THEN
C
      DO  130 M=1,POP(IRPM,ISPIN)
      JM = IOFFOO(IRPJ,IRPJM,ISPIN) + (J-1)*POP(IRPM,ISPIN) + M
      CALL GETLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
C
      IRPC = DIRPRD(IRPIK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPJM,ISPIN),VRT(IRPC,ISPIN),0,1)
C
      CALL PUTLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
  130 CONTINUE
      ENDIF
C
      IF(IRPM.EQ.IRPJ)THEN
C
      DO  140 M=1,POP(IRPM,ISPIN)
C
      IF(M.GT.J)THEN
      JM = IOFFOO(IRPM,IRPJM,ISPIN) + INDEX(M-1) + J
      CALL GETLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
C
      IRPC = DIRPRD(IRPIK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPJM,ISPIN),VRT(IRPC,ISPIN),0,0)
C
      CALL PUTLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
      ENDIF
C
      IF(M.LT.J)THEN
      JM = IOFFOO(IRPJ,IRPJM,ISPIN) + INDEX(J-1) + M
      CALL GETLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
C
      IRPC = DIRPRD(IRPIK,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIK(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IK),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPJM,ISPIN),VRT(IRPC,ISPIN),0,1)
C
      CALL PUTLST(ICORE(IOFFT2),JM,1,1,IRPJM,LIST2I)
      ENDIF
  140 CONTINUE
      ENDIF
  150 CONTINUE
C
C      AB  AB                      ABC
C     D   T    =  - SUM  <IJ//MC> T       I<J<K   W(A<B,C) * V(C)
C      KM  KM       I<J            IJK
C                    C
C
C     SET ADDRESSES FOR INTEGRALS/INTERMEDIATES.
C
      DO  210 IRPM=1,NIRREP
      IRPC = DIRPRD(IRPM,IRPIJ)
      LENV(IRPM) = VRT(IRPC,ISPIN)*POP(IRPM,ISPIN)
      IF(IRPM.EQ.1)THEN
      IADV(IRPM) = 1
      ELSE
      IADV(IRPM) = IADV(IRPM-1) + LENV(IRPM-1)
      ENDIF
  210 CONTINUE
C
C     SET ADDRESSES FOR T2 MATRIX.
C
      IOFFT2 = IADV(NIRREP) + LENV(NIRREP)
C
      IF(IRPI.EQ.IRPJ)THEN
      IJ = INDEX(J-1) + I
      ELSE
      IJ = (J-1)*POP(IRPI,ISPIN) + I
      ENDIF
C
      DO  250 IRPM=1,NIRREP
      IF(POP(IRPM,ISPIN).EQ.0) GOTO 250
C
      IRPKM = DIRPRD(IRPK,IRPM)
      IF(IRPM.GT.IRPK)THEN
C
      DO  220 M=1,POP(IRPM,ISPIN)
      KM = IOFFOO(IRPM,IRPKM,ISPIN) + (M-1)*POP(IRPK,ISPIN) + K
      CALL GETLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
C
      IRPC = DIRPRD(IRPIJ,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIJ(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IJ),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPKM,ISPIN),VRT(IRPC,ISPIN),0,1)
C
      CALL PUTLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
  220 CONTINUE
      ENDIF
C
      IF(IRPM.LT.IRPK)THEN
C
      DO  230 M=1,POP(IRPM,ISPIN)
      KM = IOFFOO(IRPK,IRPKM,ISPIN) + (K-1)*POP(IRPM,ISPIN) + M
      CALL GETLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
C
      IRPC = DIRPRD(IRPIJ,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIJ(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IJ),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPKM,ISPIN),VRT(IRPC,ISPIN),0,0)
C
      CALL PUTLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
  230 CONTINUE
      ENDIF
C
      IF(IRPM.EQ.IRPK)THEN
C
      DO  240 M=1,POP(IRPM,ISPIN)
C
      IF(M.GT.K)THEN
      KM = IOFFOO(IRPM,IRPKM,ISPIN) + INDEX(M-1) + K
      CALL GETLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
C
      IRPC = DIRPRD(IRPIJ,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIJ(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IJ),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPKM,ISPIN),VRT(IRPC,ISPIN),0,1)
C
      CALL PUTLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
      ENDIF
C
      IF(M.LT.K)THEN
      KM = IOFFOO(IRPK,IRPKM,ISPIN) + INDEX(K-1) + M
      CALL GETLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
C
      IRPC = DIRPRD(IRPIJ,IRPM)
      CALL MATVEC(W(IADW(IRPC)),
     1            VIJ(IADV(IRPM) + (M-1)*VRT(IRPC,ISPIN),IJ),
     1            ICORE(IOFFT2),
     1            IRPDPD(IRPKM,ISPIN),VRT(IRPC,ISPIN),0,0)
C
      CALL PUTLST(ICORE(IOFFT2),KM,1,1,IRPKM,LIST2I)
      ENDIF
  240 CONTINUE
      ENDIF
  250 CONTINUE
      RETURN
      END
