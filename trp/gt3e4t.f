      SUBROUTINE GT3E4T(CORE,MAXCOR,IUHF)
      IMPLICIT INTEGER (A-Z)
      LOGICAL INCORE
      DOUBLE PRECISION CORE(1),SDOT
      DOUBLE PRECISION E4TGO1,E4TGO2,E4TGO3,E4TGO4,
     1                 E4TGV1,E4TGV2,E4TGV3,E4TGV4,E4TV,E4TO,E4TTOT
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     1                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYM/    POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF2AA,
     1                NF1BB,NF2BB
      COMMON /FLAGS/  IFLAGS(100)
      EQUIVALENCE(IDRLVL,IFLAGS( 3))
C
      COMMON /GAMLIS/ LISGO1,LISGO2,LISGO3,LISGO4,LISGV1,LISGV2,
     1                LISGV3,LISGV4
      COMMON /T2ILIS/ LIST2I1,LIST2I2,LIST2I3
C
C     ROUTINE TO COMPUTE FOURTH-ORDER TRIPLES ENERGY FROM T3 GAMMAS
C     AND <AB//CI> AND <IJ//KA> INTEGRALS.
C
      WRITE(6,1000)
 1000 FORMAT(' @GT3E4T-I, Computing fourth-order triples energy ')
C
      INCORE = .FALSE.
C
C     See if we have sufficient memory. If not, exit without computing
C     the energy since this is not especially important.
C
      MAXMEM = 0
      DO   10 IRREP=1,NIRREP
      MEMRQ1 = IRPDPD(IRREP, 3) * IRPDPD(IRREP, 9) * 2 * IINTFP
      MEMRQ2 = IRPDPD(IRREP, 4) * IRPDPD(IRREP,10) * 2 * IINTFP
      MEMRQ3 = IRPDPD(IRREP,14) * IRPDPD(IRREP,11) * 2 * IINTFP
      MEMRQ4 = IRPDPD(IRREP,14) * IRPDPD(IRREP,12) * 2 * IINTFP
      MEMRQ5 = IRPDPD(IRREP, 1) * IRPDPD(IRREP, 9) * 2 * IINTFP
      MEMRQ6 = IRPDPD(IRREP, 2) * IRPDPD(IRREP,10) * 2 * IINTFP
      MEMRQ7 = IRPDPD(IRREP,13) * IRPDPD(IRREP,12) * 2 * IINTFP
      MEMRQ8 = IRPDPD(IRREP,13) * IRPDPD(IRREP,11) * 2 * IINTFP
      MAXSIZ = MAX(MEMRQ1,MEMRQ2,MEMRQ3,MEMRQ4,MEMRQ5,MEMRQ6,
     1             MEMRQ7,MEMRQ8)
      IF(MAXMEM.LT.MAXSIZ)THEN
      MAXMEM = MAXSIZ
      ENDIF
   10 CONTINUE
C
      IF(MAXMEM.GE.MAXCOR)THEN
      WRITE(6,1100) MAXCOR,MAXMEM
 1100 FORMAT(
     1 ' @GT3E4T-I,  Insufficient memory for in-core algorithm. ',/,
     1 '             Memory available ',I20,/,
     1 '             Memory needed    ',I20,/,
     1 '             As this routine is not essential, it ',
     1 ' will be skipped and the calc- ',/,
     1 '             ulation will be allowed to continue. ')
      RETURN
      ELSE
      WRITE(6,1110) MAXCOR,MAXMEM
 1110 FORMAT(
     1 ' @GT3E4T-I,  Sufficient memory for in-core algorithm. ',/,
     1 '             Memory available ',I20,/,
     1 '             Memory needed    ',I20)
      ENDIF
C
      LISVO1 =        7
      LISVO2 =        8
      LISVO3 =        9
      LISVO4 =       10
C
      LISVV1 =       27
      LISVV2 =       28
      LISVV3 =       29
      LISVV4 =       30
C
      IF(IUHF.GT.0)THEN
C
      E4TGO1 = 0.0D+00
      DO  120 IRPKA=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPKA,3) * IRPDPD(IRPKA,9)
      I020 = I010 + IRPDPD(IRPKA,3) * IRPDPD(IRPKA,9)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPKA,9),2,IRPKA,LISGO1)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPKA,9),2,IRPKA,LISVO1)
      E4TGO1 = E4TGO1 + SDOT(IRPDPD(IRPKA,3) * IRPDPD(IRPKA,9),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPKA,9)
      DISSIZ = IRPDPD(IRPKA,3)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  110 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPKA,LISGO1)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPKA,LISVO1)
      E4TGO1 = E4TGO1 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  110 CONTINUE
C
      ENDIF
C
  120 CONTINUE
      WRITE(6,1010) E4TGO1
 1010 FORMAT(' @GT3E4T-I, Triples energy contribution from IJKA ',
     1       F20.12)
C
      E4TGO2 = 0.0D+00
      DO  140 IRPKA=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPKA,4) * IRPDPD(IRPKA,10)
      I020 = I010 + IRPDPD(IRPKA,4) * IRPDPD(IRPKA,10)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPKA,10),2,IRPKA,LISGO2)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPKA,10),2,IRPKA,LISVO2)
      E4TGO2 = E4TGO2 + SDOT(IRPDPD(IRPKA,4) * IRPDPD(IRPKA,10),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPKA,10)
      DISSIZ = IRPDPD(IRPKA,4)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  130 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPKA,LISGO2)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPKA,LISVO2)
      E4TGO2 = E4TGO2 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  130 CONTINUE
C
      ENDIF
C
  140 CONTINUE
      WRITE(6,1020) E4TGO2
 1020 FORMAT(' @GT3E4T-I, Triples energy contribution from ijka ',
     1       F20.12)
C
      E4TGO3 = 0.0D+00
      DO  160 IRPKA=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPKA,14) * IRPDPD(IRPKA,11)
      I020 = I010 + IRPDPD(IRPKA,14) * IRPDPD(IRPKA,11)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPKA,11),2,IRPKA,LISGO3)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPKA,11),2,IRPKA,LISVO3)
      E4TGO3 = E4TGO3 + SDOT(IRPDPD(IRPKA,14) * IRPDPD(IRPKA,11),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPKA,11)
      DISSIZ = IRPDPD(IRPKA,14)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  150 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPKA,LISGO3)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPKA,LISVO3)
      E4TGO3 = E4TGO3 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  150 CONTINUE
C
      ENDIF
C
  160 CONTINUE
      WRITE(6,1030) E4TGO3
 1030 FORMAT(' @GT3E4T-I, Triples energy contribution from IjAk ',
     1       F20.12)
C
      ENDIF
C
      E4TGO4 = 0.0D+00
      DO  180 IRPKA=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPKA,14) * IRPDPD(IRPKA,12)
      I020 = I010 + IRPDPD(IRPKA,14) * IRPDPD(IRPKA,12)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPKA,12),2,IRPKA,LISGO4)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPKA,12),2,IRPKA,LISVO4)
      E4TGO4 = E4TGO4 + SDOT(IRPDPD(IRPKA,14) * IRPDPD(IRPKA,12),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPKA,12)
      DISSIZ = IRPDPD(IRPKA,14)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  170 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPKA,LISGO4)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPKA,LISVO4)
      E4TGO4 = E4TGO4 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  170 CONTINUE
C
      ENDIF
C
  180 CONTINUE
      WRITE(6,1040) E4TGO4
 1040 FORMAT(' @GT3E4T-I, Triples energy contribution from IjKa ',
     1       F20.12)
C
      IF(IUHF.GT.0)THEN
C
      E4TGV1 = 0.0D+00
      DO  220 IRPCI=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPCI, 1) * IRPDPD(IRPCI, 9)
      I020 = I010 + IRPDPD(IRPCI, 1) * IRPDPD(IRPCI, 9)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPCI, 9),2,IRPCI,LISGV1)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPCI, 9),2,IRPCI,LISVV1)
      E4TGV1 = E4TGV1 + SDOT(IRPDPD(IRPCI,1) * IRPDPD(IRPCI,9),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPCI, 9)
      DISSIZ = IRPDPD(IRPCI, 1)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  210 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPCI,LISGV1)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPCI,LISVV1)
      E4TGV1 = E4TGV1 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  210 CONTINUE
C
      ENDIF
C
  220 CONTINUE
      WRITE(6,1050) E4TGV1
 1050 FORMAT(' @GT3E4T-I, Triples energy contribution from ABCI ',
     1       F20.12)
C
      E4TGV2 = 0.0D+00
      DO  240 IRPCI=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPCI, 2) * IRPDPD(IRPCI,10)
      I020 = I010 + IRPDPD(IRPCI, 2) * IRPDPD(IRPCI,10)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPCI,10),2,IRPCI,LISGV2)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPCI,10),2,IRPCI,LISVV2)
      E4TGV2 = E4TGV2 + SDOT(IRPDPD(IRPCI,2) * IRPDPD(IRPCI,10),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPCI,10)
      DISSIZ = IRPDPD(IRPCI, 2)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  230 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPCI,LISGV2)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPCI,LISVV2)
      E4TGV2 = E4TGV2 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  230 CONTINUE
C
      ENDIF
C
  240 CONTINUE
      WRITE(6,1060) E4TGV2
 1060 FORMAT(' @GT3E4T-I, Triples energy contribution from abci ',
     1       F20.12)
C
      E4TGV3 = 0.0D+00
      DO  260 IRPCI=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPCI,13) * IRPDPD(IRPCI,12)
      I020 = I010 + IRPDPD(IRPCI,13) * IRPDPD(IRPCI,12)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPCI,12),2,IRPCI,LISGV3)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPCI,12),2,IRPCI,LISVV3)
      E4TGV3 = E4TGV3 + SDOT(IRPDPD(IRPCI,13) * IRPDPD(IRPCI,12),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPCI,12)
      DISSIZ = IRPDPD(IRPCI,13)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  250 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPCI,LISGV3)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPCI,LISVV3)
      E4TGV3 = E4TGV3 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  250 CONTINUE
C
      ENDIF
C
  260 CONTINUE
      WRITE(6,1070) E4TGV3
 1070 FORMAT(' @GT3E4T-I, Triples energy contribution from AbIc ',
     1       F20.12)
C
      ENDIF
C
      E4TGV4 = 0.0D+00
      DO  280 IRPCI=1,NIRREP
      I000 = 1
      I010 = I000 + IRPDPD(IRPCI,13) * IRPDPD(IRPCI,11)
      I020 = I010 + IRPDPD(IRPCI,13) * IRPDPD(IRPCI,11)
      NEED = IINTFP * I020
C
      IF(NEED.LE.MAXCOR.AND.INCORE)THEN
C
      CALL GETLST(CORE(I000),1,IRPDPD(IRPCI,11),2,IRPCI,LISGV4)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPCI,11),2,IRPCI,LISVV4)
      E4TGV4 = E4TGV4 + SDOT(IRPDPD(IRPCI,13) * IRPDPD(IRPCI,11),
     1                       CORE(I000),1,CORE(I010),1)
C
      ELSE
C
      NDIS   = IRPDPD(IRPCI,11)
      DISSIZ = IRPDPD(IRPCI,13)
      I000 = 1
      I010 = I000 + DISSIZ
      DO  270 IDIS=1,NDIS
      CALL GETLST(CORE(I000),IDIS,1,2,IRPCI,LISGV4)
      CALL GETLST(CORE(I010),IDIS,1,2,IRPCI,LISVV4)
      E4TGV4 = E4TGV4 + SDOT(DISSIZ,CORE(I000),1,CORE(I010),1)
  270 CONTINUE
C
      ENDIF
C
  280 CONTINUE
      WRITE(6,1080) E4TGV4
 1080 FORMAT(' @GT3E4T-I, Triples energy contribution from AbCi ',
     1       F20.12)
C
      IF(IUHF.EQ.0)THEN
      E4TV   =                            E4TGV4
      E4TO   =                            E4TGO4
      ELSE
      E4TV   = E4TGV1 + E4TGV2 + E4TGV3 + E4TGV4
      E4TO   = E4TGO1 + E4TGO2 + E4TGO3 + E4TGO4
      ENDIF
      E4TTOT = E4TV   + E4TO
C
      WRITE(6,1090) E4TO,E4TV,E4TTOT
 1090 FORMAT(' @GT3E4T-I, Total contribution from OOOV ',F20.12,/,
     1       '            Total contribution from VVVO ',F20.12,/,
     1       '            Total                        ',F20.12)
      RETURN
      END
