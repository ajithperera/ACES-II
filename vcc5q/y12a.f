      SUBROUTINE Y12A(CORE,MAXCOR,IUHF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER B,D,E,F,BD,DB,EF,BDEF,DBEF,ELF,BLD,BLDELF,DISSIZ
      INTEGER POP,VRT,DIRPRD
      DIMENSION CORE(1)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYM/    POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /T3OFF/  IOFFVV(8,8,10),IOFFOO(8,8,10),IOFFVO(8,8,4)
C
      INDEX(I) = I * (I-1)/2
C
      WRITE(6,1000)
 1000 FORMAT(' @Y12A-I, Y2 * Y2 contributions. ')
C
C     AAAA/BBBB
C
      IF(IUHF.GT.0)THEN
C
C     I000 Y1(A,A) or Y1(B,B).
C     I010 Antisymmetrized I010 (ie first part of Y10)
C
      DO  200 ISPIN=1,IUHF+1
      I000 = 1
      I010 = I000 + NFMI(ISPIN)
C
      CALL GETLST(CORE(I000),1,1,1,ISPIN,91)
c      write(6,*) ' @Y10A-I, Y1 Checksum. ',NFMI(ISPIN),NIRREP
c      CALL CHKSUM(CORE(I000),NFMI(ISPIN))
C
c      IOFF = 0
c      DO    5 IRREP=1,NIRREP
c      IF(POP(IRREP,ISPIN).GT.0)THEN
c      CALL OUTPUT(CORE(I000+IOFF),1,POP(IRREP,ISPIN),
c     1                            1,POP(IRREP,ISPIN),
c     1             POP(IRREP,ISPIN),POP(IRREP,ISPIN),1)
c      ENDIF
c      IOFF = IOFF + POP(IRREP,ISPIN)*POP(IRREP,ISPIN)
c    5 CONTINUE
C
      DO  190 IRREP=1,NIRREP
      IRPEF = IRREP
C
      I020 = I010 + IRPDPD(IRREP,2+ISPIN) * IRPDPD(IRREP,2+ISPIN)
C
      NEED = I020 * IINTFP
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
 1020 FORMAT(' @Y12A-I, Insufficient memory. Need ',I15,' . Got ',I15)
      STOP 'Y12A'
      ENDIF
C
      CALL ZERO(CORE(I010),IRPDPD(IRREP,2+ISPIN)**2)
C
      DO  180 IRPF=1,NIRREP
C
      IRPE = DIRPRD(IRREP,IRPF)
C
      IF(IRPE.GT.IRPF) GOTO 180
C
      IF(IRPE.EQ.IRPF)THEN
C
      IRPB = IRPE
      IRPD = IRPF
      IRPBD = DIRPRD(IRPB,IRPD)
C
      IF(POP(IRPF,ISPIN).GT.1)THEN
C
      DO   120    F=2,POP(IRPF,ISPIN)
      DO   110    E=1,F-1
      DO   100    D=2,POP(IRPD,ISPIN)
      DO    90    B=1,D-1
C
      ELF = IOFFOO(IRPF,IRPEF,ISPIN) + INDEX(F-1) + E
      BLD = IOFFOO(IRPD,IRPBD,ISPIN) + INDEX(D-1) + B
C
      BLDELF = (ELF - 1) * IRPDPD(IRPBD,2+ISPIN) + BLD
C
      Y1BE = CORE(I000 - 1 + IOFFOO(IRPE,1,ISPIN+2) +
     1       (E-1)*POP(IRPB,ISPIN) + B)
      Y1EB = CORE(I000 - 1 + IOFFOO(IRPB,1,ISPIN+2) +
     1       (B-1)*POP(IRPE,ISPIN) + E)
      Y1DF = CORE(I000 - 1 + IOFFOO(IRPF,1,ISPIN+2) +
     1       (F-1)*POP(IRPD,ISPIN) + D)
      Y1FD = CORE(I000 - 1 + IOFFOO(IRPD,1,ISPIN+2) +
     1       (D-1)*POP(IRPF,ISPIN) + F)
      Y1BF = CORE(I000 - 1 + IOFFOO(IRPF,1,ISPIN+2) +
     1       (F-1)*POP(IRPB,ISPIN) + B)
      Y1FB = CORE(I000 - 1 + IOFFOO(IRPB,1,ISPIN+2) +
     1       (B-1)*POP(IRPF,ISPIN) + F)
      Y1DE = CORE(I000 - 1 + IOFFOO(IRPE,1,ISPIN+2) +
     1       (E-1)*POP(IRPD,ISPIN) + D)
      Y1ED = CORE(I000 - 1 + IOFFOO(IRPD,1,ISPIN+2) +
     1       (D-1)*POP(IRPE,ISPIN) + E)
C
      CORE(I010 - 1 + BLDELF) = CORE(I010 - 1 + BLDELF) +
     1 Y1BE * Y1DF - Y1BF * Y1DE
C    1 (Y1BE+Y1EB) * (Y1DF+Y1FD) - (Y1BF+Y1FB) * (Y1DE+Y1ED)
C
   90 CONTINUE
  100 CONTINUE
  110 CONTINUE
  120 CONTINUE
C
      ENDIF
C
      ELSE
C
      IRPB = IRPE
      IRPD = IRPF
      IRPBD = DIRPRD(IRPB,IRPD)
C
      IF(POP(IRPF,ISPIN).GT.0.AND.POP(IRPE,ISPIN).GT.0)THEN
C
      DO   160    F=1,POP(IRPF,ISPIN)
      DO   150    E=1,POP(IRPE,ISPIN)
      DO   140    D=1,POP(IRPD,ISPIN)
      DO   130    B=1,POP(IRPB,ISPIN)
C
      ELF = IOFFOO(IRPF,IRPEF,ISPIN) + (F-1)*POP(IRPE,ISPIN) + E
      BLD = IOFFOO(IRPD,IRPBD,ISPIN) + (D-1)*POP(IRPB,ISPIN) + B
C
      BLDELF = (ELF - 1) * IRPDPD(IRPBD,2+ISPIN) + BLD
C
      Y1BE = CORE(I000 - 1 + IOFFOO(IRPE,1,ISPIN+2) +
     1       (E-1)*POP(IRPB,ISPIN) + B)
      Y1EB = CORE(I000 - 1 + IOFFOO(IRPB,1,ISPIN+2) +
     1       (B-1)*POP(IRPE,ISPIN) + E)
      Y1DF = CORE(I000 - 1 + IOFFOO(IRPF,1,ISPIN+2) +
     1       (F-1)*POP(IRPD,ISPIN) + D)
      Y1FD = CORE(I000 - 1 + IOFFOO(IRPD,1,ISPIN+2) +
     1       (D-1)*POP(IRPF,ISPIN) + F)
C
      CORE(I010 - 1 + BLDELF) = CORE(I010 - 1 + BLDELF) +
     1                          Y1BE * Y1DF
C    1                          (Y1BE+Y1EB) * (Y1DF+Y1FD)
C
  130 CONTINUE
  140 CONTINUE
  150 CONTINUE
  160 CONTINUE
C
      ENDIF
C
      ENDIF
C
  180 CONTINUE
C
      NDIS = IRPDPD(IRREP,2+ISPIN)
c     CALL CHKSUM(CORE(I010),NDIS*NDIS)
      CALL PUTLIST(CORE(I010),1,NDIS,1,IRREP,9+ISPIN)
C
  190 CONTINUE
  200 CONTINUE
C
      ENDIF
C
C     ABAB
C
C     I000 Y1(A,A) or Y1(B,B).
C     I010 Antisymmetrized I010 (ie first part of Y10)
C
      I000 = 1
      I005 = I000 + NFMI(1)
      I010 = I005 + NFMI(2)
C
      CALL GETLST(CORE(I000),1,1,1,1     ,91)
      CALL GETLST(CORE(I005),1,1,1,1+IUHF,91)
C
      DO  390 IRREP=1,NIRREP
      IRPEF = IRREP
C
      I020 = I010 + IRPDPD(IRREP,  14) * IRPDPD(IRREP,  14)
C
      NEED = I020 * IINTFP
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
C1020 FORMAT(' @Y10A-I, Insufficient memory. Need ',I15,' . Got ',I15)
      STOP 'Y10A'
      ENDIF
C
      CALL ZERO(CORE(I010),IRPDPD(IRREP,14)**2)
C
      DO  380 IRPF=1,NIRREP
C
      IRPE = DIRPRD(IRREP,IRPF)
C
      IRPB = IRPE
      IRPD = IRPF
      IRPBD = DIRPRD(IRPB,IRPD)
C
      IF(POP(IRPF,2).GT.0.AND.POP(IRPE,1).GT.0)THEN
C
      DO   360    F=1,POP(IRPF,2)
      DO   350    E=1,POP(IRPE,1)
      DO   340    D=1,POP(IRPD,2)
      DO   330    B=1,POP(IRPB,1)
C
      ELF = IOFFOO(IRPF,IRPEF,5) + (F-1)*POP(IRPE,1) + E
      BLD = IOFFOO(IRPD,IRPBD,5) + (D-1)*POP(IRPB,1) + B
C
      BLDELF = (ELF - 1) * IRPDPD(IRPBD,14) + BLD
C
      Y1BE = CORE(I000 - 1 + IOFFOO(IRPE,1,3) +
     1       (E-1)*POP(IRPB,1) + B)
      Y1EB = CORE(I000 - 1 + IOFFOO(IRPB,1,3) +
     1       (B-1)*POP(IRPE,1) + E)
      Y1DF = CORE(I005 - 1 + IOFFOO(IRPF,1,4) +
     1       (F-1)*POP(IRPD,2) + D)
      Y1FD = CORE(I005 - 1 + IOFFOO(IRPD,1,4) +
     1       (D-1)*POP(IRPF,2) + F)
C
      CORE(I010 - 1 + BLDELF) = CORE(I010 - 1 + BLDELF) +
     1                          Y1BE * Y1DF
C    1                          (Y1BE+Y1EB) * (Y1DF+Y1FD)
C
  330 CONTINUE
  340 CONTINUE
  350 CONTINUE
  360 CONTINUE
C
      ENDIF
C
  380 CONTINUE
C
      NDIS = IRPDPD(IRREP,14)
C     CALL CHKSUM(CORE(I010),NDIS*NDIS)
c     CALL SUMBLK(CORE(I010),NDIS*NDIS)
      CALL PUTLIST(CORE(I010),1,NDIS,1,IRREP,12)
C
  390 CONTINUE
C
      RETURN
      END
