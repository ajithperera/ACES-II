      SUBROUTINE ENABIJ(ICORE,MAXCOR,IUHF,ITYPE,E,NE,ESPAD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSIZ,POP,VRT,DIRPRD,
     1        SIZAAO,SIZAAV,SIZBBO,SIZBBV
      DIMENSION ICORE(MAXCOR),E(NE),
     1          SIZAAO(8),SIZAAV(8),SIZBBO(8),SIZBBV(8)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),
     &           NTAA,NTBB,NF1AA,NF1BB,NF2AA,NF2BB
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255),IRREPB(255),DIRPRD(8,8)
      COMMON /INFO/ NOCA,NOCB,NVRTA,NVRTB
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NJUNK(18)
C
      IF(ITYPE.EQ.1)THEN
C
      IF(IUHF.EQ.0)THEN
      ISTEP = 2
      ELSE
      ISTEP = 1
      ENDIF
C
      DO 20 ISPIN=1,3,ISTEP
C
      E(ISPIN) = 0.0D+00
C
      DO 10 IRREP=1,NIRREP
C
      DISSIZ = IRPDPD(IRREP,ISYTYP(1,47 + ISPIN))
      NDIS   = IRPDPD(IRREP,ISYTYP(2,47 + ISPIN))
C
      NSIZ   = DISSIZ * NDIS
C
      I000 = 1
      I010 = I000 + NSIZ * IINTFP
      I020 = I010 + NSIZ * IINTFP
C
      IF(I020.LT.MAXCOR)THEN
C
      CALL GETLST(ICORE(I000),1,NDIS,1,IRREP,47 + ISPIN)
      CALL GETLST(ICORE(I010),1,NDIS,1,IRREP,60 + ISPIN)
      E(ISPIN) = E(ISPIN) + SDOT(NSIZ,ICORE(I000),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENABIJ'
C
      ENDIF
C
   10 CONTINUE
   20 CONTINUE
C
C     Attempted spin adaptation for RHF cases.
C
      IF(IUHF.EQ.0)THEN
C
      ESPAD = 0.0D+00
      DO 30 IRREP=1,NIRREP
C
      DISSIZ = IRPDPD(IRREP,13)
      NDIS   = IRPDPD(IRREP,14)
C
      NSIZ   = DISSIZ * NDIS
C
      IF(NSIZ.EQ.0) GOTO 30
      I000 = 1
      I010 = I000 + NSIZ * IINTFP
      I020 = I010 + NSIZ * IINTFP
      I030 = I020 + MAX(DISSIZ,NDIS) * IINTFP
      I040 = I030 + MAX(DISSIZ,NDIS) * IINTFP
C
      IF(I040.LT.MAXCOR)THEN
C
      CALL GETLST(ICORE(I000),1,NDIS,1,IRREP,50)
      CALL GETLST(ICORE(I010),1,NDIS,1,IRREP,63)
      CALL SPINAD3(IRREP,VRT(1,1),DISSIZ,NDIS,ICORE(I000),
     1             ICORE(I020),ICORE(I030))
      ESPAD = ESPAD + SDOT(NSIZ,ICORE(I000),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENABIJ'
C
      ENDIF
   30 CONTINUE
C
c      WRITE(6,2010) ESPAD
c 2010 FORMAT(' @ENABIJ-I, Spin adapted energy is ',F20.12)
c      IF(IUHF.EQ.0) E(3) = ESPAD
C
      ENDIF
C
      ENDIF
C
      IF(ITYPE.EQ.2)THEN
C
      IF(IUHF.EQ.0)THEN
      IBOT = 3
      ELSE
      IBOT = 1
      ENDIF
C
      DO 120 ISPIN=IBOT,3
C
      E(ISPIN) = 0.0D+00
C
      DO 110 IRREP=1,NIRREP
C
      DISSIZ = IRPDPD(IRREP,ISYTYP(1,10 + ISPIN))
      NDIS   = IRPDPD(IRREP,ISYTYP(2,10 + ISPIN))
C
      NSIZ   = DISSIZ * NDIS
C
      IF(NSIZ.EQ.0) GOTO 110
C
      I000 = 1
      I010 = I000 + NSIZ * IINTFP
      I020 = I010 + NSIZ * IINTFP
C
      IF(I020.LT.MAXCOR)THEN
C
      CALL  GETLST(ICORE(I000),1,NDIS,1,IRREP,10 + ISPIN)
      CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP, 9 + ISPIN)
      E(ISPIN) = E(ISPIN) + SDOT(NSIZ,ICORE(I000),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENIJKL'
C
      ENDIF
C
  110 CONTINUE
  120 CONTINUE
C
C     Attempted spin adaptation for RHF.
C
      IF(IUHF.EQ.0)THEN
C
      ESPAD = 0.0D+00
      DO 130 IRREP=1,NIRREP
C
      DISSIZ = IRPDPD(IRREP,14)
      NDIS   = IRPDPD(IRREP,14)
C
      NSIZ   = DISSIZ * NDIS
C
      IF(NSIZ.EQ.0) GOTO 130
      I000 = 1
      I010 = I000 + NSIZ * IINTFP
      I020 = I010 + NSIZ * IINTFP
      I030 = I020 + MAX(DISSIZ,NDIS) * IINTFP
      I040 = I030 + MAX(DISSIZ,NDIS) * IINTFP
C
      IF(I040.LT.MAXCOR)THEN
C
      CALL  GETLST(ICORE(I000),1,NDIS,1,IRREP,13)
      CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP,12)
      CALL SPINAD3(IRREP,POP(1,1),DISSIZ,NDIS,ICORE(I000),
     1             ICORE(I020),ICORE(I030))
      ESPAD = ESPAD + SDOT(NSIZ,ICORE(I000),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENABIJ'
C
      ENDIF
  130 CONTINUE
C
c      WRITE(6,2010) ESPAD
c      IF(IUHF.EQ.0) E(3) = ESPAD
C
      ENDIF
C
      ENDIF
C
      IF(ITYPE.EQ.3)THEN
C
      IF(IUHF.EQ.0)THEN
      IBOT = 3
      ELSE
      IBOT = 1
      ENDIF
C
      DO 220 ISPIN=IBOT,3
C
      E(ISPIN) = 0.0D+00
C
      DO 210 IRREP=1,NIRREP
C
C     DISSIZ = IRPDPD(IRREP,ISYTYP(1,30 + ISPIN))
C     NDIS   = IRPDPD(IRREP,ISYTYP(2,30 + ISPIN))
      IF(ISPIN.EQ.1.OR.ISPIN.EQ.2)THEN
      DISSIZ = IRPDPD(IRREP,ISPIN)
      NDIS   = IRPDPD(IRREP,ISPIN)
      ELSE
      DISSIZ = IRPDPD(IRREP,   13)
      NDIS   = IRPDPD(IRREP,   13)
      ENDIF
C
      NSIZ   = DISSIZ * NDIS
      IF(NSIZ.EQ.0) GOTO 210
C
      I000 = 1
      I010 = I000 + NSIZ * IINTFP
      I020 = I010 + NSIZ * IINTFP
C
      IF(I020.LT.MAXCOR)THEN
C
      CALL  GETLST(ICORE(I000),1,NDIS,1,IRREP,230 + ISPIN)
      CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP,  3 + ISPIN)
c     CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP,      ISPIN)
c     CALL CHKSUM(ICORE(I010),NSIZ)
      E(ISPIN) = E(ISPIN) + SDOT(NSIZ,ICORE(I000),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENABCD'
C
      ENDIF
C
  210 CONTINUE
  220 CONTINUE
C
C     Attempted spin adaptation for RHF.
C
      IF(IUHF.EQ.0)THEN
C
      ESPAD = 0.0D+00
      DO 230 IRREP=1,NIRREP
C
      DISSIZ = IRPDPD(IRREP,13)
      NDIS   = IRPDPD(IRREP,13)
C
      NSIZ   = DISSIZ * NDIS
C
      IF(NSIZ.EQ.0) GOTO 230
      I000 = 1
      I010 = I000 + NSIZ * IINTFP
      I020 = I010 + NSIZ * IINTFP
      I030 = I020 + MAX(DISSIZ,NDIS) * IINTFP
      I040 = I030 + MAX(DISSIZ,NDIS) * IINTFP
C
      IF(I040.LT.MAXCOR)THEN
C
      CALL  GETLST(ICORE(I000),1,NDIS,1,IRREP,233)
      CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP,  6)
c     CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP,  3)
      CALL SPINAD3(IRREP,VRT(1,1),DISSIZ,NDIS,ICORE(I000),
     1             ICORE(I020),ICORE(I030))
      ESPAD = ESPAD + SDOT(NSIZ,ICORE(I000),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENABIJ'
C
      ENDIF
  230 CONTINUE
C
c      WRITE(6,2010) ESPAD
c      IF(IUHF.EQ.0) E(3) = ESPAD
C
      ENDIF
C
      ENDIF
C
      IF(ITYPE.EQ.4)THEN
C
C     Y8-Y13 contributions (only uhf at the moment).
C
      DO  300 IRREP=1,NIRREP
      SIZAAO(IRREP) = 0
      SIZAAV(IRREP) = 0
      SIZBBO(IRREP) = 0
      SIZBBV(IRREP) = 0
C
      DO  290 JRREP=1,NIRREP
      KRREP=DIRPRD(IRREP,JRREP)
C
      SIZAAO(IRREP) = SIZAAO(IRREP) + POP(JRREP,1)*POP(KRREP,1)
      SIZAAV(IRREP) = SIZAAV(IRREP) + VRT(JRREP,1)*VRT(KRREP,1)
      SIZBBO(IRREP) = SIZBBO(IRREP) + POP(JRREP,2)*POP(KRREP,2)
      SIZBBV(IRREP) = SIZBBV(IRREP) + VRT(JRREP,2)*VRT(KRREP,2)
C
  290 CONTINUE
  300 CONTINUE
C
      DO 320 ISPIN=1,6
C
      E(ISPIN) = 0.0D+00
C
      DO 310 IRREP=1,NIRREP
C
      IF(ISPIN.EQ.1)THEN
      DISSIZ = SIZAAV(IRREP)
      NDIS   = SIZAAO(IRREP)
      ENDIF
      IF(ISPIN.EQ.2)THEN
      DISSIZ = SIZBBV(IRREP)
      NDIS   = SIZBBO(IRREP)
      ENDIF
      IF(ISPIN.GE.3.AND.ISPIN.LE.6)THEN
      DISSIZ = IRPDPD(IRREP,   13)
      NDIS   = IRPDPD(IRREP,   14)
      ENDIF
C
      NSIZ   = DISSIZ * NDIS
C
      IF(NSIZ.LE.0) GOTO 310
C
      I000 = 1
      I010 = I000 + NSIZ * IINTFP
      I020 = I010 + NSIZ * IINTFP
C
      IF(I020.LT.MAXCOR)THEN
C
      CALL GETLIST(ICORE(I000),1,NDIS,1,IRREP,12 + ISPIN)
      CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP,18 + ISPIN)
C     CALL CHKSUM(ICORE(I010),NSIZ)
c     CALL SUMBLK(ICORE(I010),NSIZ)
      E(ISPIN) = E(ISPIN) + SDOT(NSIZ,ICORE(I000),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENCEMK'
C
      ENDIF
C
  310 CONTINUE
  320 CONTINUE
C
      ENDIF
C
      IF(ITYPE.EQ.5)THEN
C
C     <mb//le>-Y14 contributions (only uhf at the moment).
C
      DO 500 ISPIN=1,6,2-IUHF
C
      E(ISPIN) = 0.0D+00
C
C     Prepare integrals at I000.
C
      IF(ISPIN.EQ.1.OR.ISPIN.EQ.2)THEN
C
      LEN = 0
      DO 410 IRREP=1,NIRREP
      LEN = LEN + IRPDPD(IRREP,8+ISPIN) * IRPDPD(IRREP,8+ISPIN)
  410 CONTINUE
C
      I000 = 1
      I010 = I000 + LEN * IINTFP
      I020 = I010 + LEN * IINTFP
      I030 = I020 + 2 * (NOCA*NOCB + NVRTA*NVRTB) * IINTFP
C
      NEED = I030
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
 1020 FORMAT(' @ENABIJ-I, Insufficient memory. Need ',I15,' . Got ',I15)
      STOP 'ENABIJ'
      ENDIF
C
C     Get V(B,L,E,M)/V(b,l,e,m) at I010 and rearrange to 
C     V(B,E,L,M)/V(b,e,l,m) at I000.
C
      CALL GETALL(ICORE(I010),LEN,1,22+ISPIN)
      CALL SSTGEN(ICORE(I010),ICORE(I000),LEN,
     1            VRT(1,ISPIN),POP(1,ISPIN),VRT(1,ISPIN),POP(1,ISPIN),
     1            ICORE(I020),1,'1324')
C
      ENDIF
C
      IF(ISPIN.EQ.3.OR.ISPIN.EQ.4)THEN
C
      LEN = 0
      DO 420 IRREP=1,NIRREP
      LEN = LEN + IRPDPD(IRREP,13) * IRPDPD(IRREP,14)
  420 CONTINUE
C
      I000 = 1
      I010 = I000 + LEN * IINTFP
C
      NEED = I010
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
      STOP 'ENBELM'
      ENDIF
C
C     Get V(B,e,L,m)/V(E,b,M,l) at I000. Rearrange the latter to 
C     V(b,E,l,M). Negate to get <Ml//bE> or <mL//Be>
C
      CALL GETALL(ICORE(I000),LEN,1,16)
C
      IF(ISPIN.EQ.4)THEN
C
      IOFFV = I000
      DO 430 IRREP=1,NIRREP
C
      IF(IRPDPD(IRREP,13).EQ.0.OR.IRPDPD(IRREP,14).EQ.0) GOTO 430
      I000 = 1
      I010 = I000 + LEN * IINTFP
      I020 = I010 + MAX(IRPDPD(IRREP,13),IRPDPD(IRREP,14)) * IINTFP
      I030 = I020 + MAX(IRPDPD(IRREP,13),IRPDPD(IRREP,14)) * IINTFP
      I040 = I030 + MAX(IRPDPD(IRREP,13),IRPDPD(IRREP,14)) * IINTFP
C
      NEED = I010
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
      STOP 'ENBELM'
      ENDIF
C
      CALL SYMTR3(IRREP,VRT(1,1),VRT(1,2),
     1            IRPDPD(IRREP,13),IRPDPD(IRREP,14),
     1            ICORE(IOFFV),ICORE(I010),ICORE(I020),ICORE(I030))
      CALL SYMTR1(IRREP,POP(1,1),POP(1,2),IRPDPD(IRREP,13),ICORE(IOFFV),
     1            ICORE(I010),ICORE(I020),ICORE(I030))
      IOFFV = IOFFV + IRPDPD(IRREP,13) * IRPDPD(IRREP,14) * IINTFP
  430 CONTINUE
      ENDIF
C
      CALL VMINUS(ICORE(I000),LEN)
      ENDIF
C
      IOFFV = I000
      IF(ISPIN.EQ.5.OR.ISPIN.EQ.6)THEN
C
      LEN = 0
      DO 440 IRREP=1,NIRREP
      LEN = LEN + IRPDPD(IRREP, 6+ISPIN) * IRPDPD(IRREP, 6+ISPIN)
  440 CONTINUE
C
      I000 = 1
      I010 = I000 + LEN * IINTFP
      I020 = I010 + LEN * IINTFP
      I030 = I020 + 2 * (NOCA*NOCB + NVRTA*NVRTB) * IINTFP
C
      NEED = I030
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
      STOP 'ENBELM'
      ENDIF
C
C     Get V(B,l,E,m)/V(b,L,e,M) at I010 and rearrange to 
C     V(B,E,l,m)/V(b,e,L,M) at I000.
C
      CALL GETALL(ICORE(I010),LEN,1,20+ISPIN)
      CALL SSTGEN(ICORE(I010),ICORE(I000),LEN,
     1    VRT(1,ISPIN-4),POP(1,7-ISPIN),VRT(1,ISPIN-4),POP(1,7-ISPIN),
     1            ICORE(I020),1,'1324')
C
      ENDIF
C
      IOFFV = I000
      DO 450 IRREP=1,NIRREP
C
      IF(ISPIN.EQ.1.OR.ISPIN.EQ.2)THEN
      DISSIZ = IRPDPD(IRREP,18+ISPIN)
      NDIS   = IRPDPD(IRREP,20+ISPIN)
      ENDIF
      IF(ISPIN.EQ.3.OR.ISPIN.EQ.4)THEN
      DISSIZ = IRPDPD(IRREP,13)
      NDIS   = IRPDPD(IRREP,14)
      ENDIF
      IF(ISPIN.EQ.5.OR.ISPIN.EQ.6)THEN
      DISSIZ = IRPDPD(IRREP,14+ISPIN)
      NDIS   = IRPDPD(IRREP,27-ISPIN)
      ENDIF
C
      NSIZ   = DISSIZ * NDIS
      IF(NSIZ.EQ.0) GOTO 450
C
      I000 = 1
      I010 = I000 + LEN  * IINTFP
      I020 = I010 + NSIZ * IINTFP
C
      IF(I020.LT.MAXCOR)THEN
C
      CALL GETLIST(ICORE(I010),1,NDIS,1,IRREP,24 + ISPIN)
C     CALL CHKSUM(ICORE(I010),NSIZ)
      E(ISPIN) = E(ISPIN) + SDOT(NSIZ,ICORE(IOFFV),1,ICORE(I010),1)
C
      ELSE
C
      STOP 'ENBELM'
C
      ENDIF
C
      IOFFV = IOFFV + DISSIZ * NDIS * IINTFP
C
  450 CONTINUE
  500 CONTINUE
C
      ENDIF
C
      RETURN
      END
