      SUBROUTINE FMICONT(ICORE,MAXCOR,IUHF)
C
C     ARGUMENTS IN CALL ICORE,MAXCOR,IUHF
C
C THIS PROGRAM CALCULATES THE TERM
C
C  P(IJ) SUM M T(IM,EF) F(MJ)
C
C SYMMETRY ADAPTED 
C 
C
C IN RHF :
C
C - SUM m T(Im,Ab) F(mj) + SUM M T(Mj,Ab) F(MJ)
C
C IN UHF
C
C - SUM M T(IM,AB) F(MJ) + SUM M T(MJ,AB) F(MI)
C
C - SUM m T(Im,Ab) F(mj) + SUM M T(Mj,Ab) F(MI)
C
C - SUM m T(im,ab) F(mj) + SUM m T(mj,ab) F(mi)
C
C 
C FOR QCISD AND CCSD IN ADDITION THE TERMS
C
C - SUM M T(M,A) F(MI) 
C
C - SUM m T(m,a) F(mi)   (UHF only)
C
C ARE CALCULATED
C
C FFOR CCSD METHODS THE FOLLOWING TERM
C
C 1/2 SUM E F(E,M) T(E,I)
C
C HAS TO BE ADDED TO THE F(MI) BEFORE THE
C CONTRACTION WITH THE T2 AMPLITUDES IS PERFORMED
C
CEND
C
C CODED JG JUNE/90
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,DISSYZ,POP,VRT
      LOGICAL MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,QCISD,UCC
      LOGICAL LINCC,CICALC,ROHF4,ITRFLG
      DIMENSION ICORE(MAXCOR)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWO  
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,
     &             NF1AA,NF1BB,NF2AA,NF2BB
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /FLAGS/IFLAGS(100)
      COMMON /LINEAR/ LINCC,CICALC
      COMMON /SWITCH/ MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &                QCISD,UCC
      COMMON /ROHF/ ROHF4,ITRFLG
C
      EQUIVALENCE(METHOD,IFLAGS(2))
C
      DATA ONE,ONEM,HALF/1.0D0,-1.0D0,0.5D0/
C
C   CALCULATE SIZE OF F(M,I) ARRAY
C
      NFAA=NF1AA
      NFBB=NF1BB
      I0AA=MAXCOR+1-NFAA*IINTFP 
      MXCOR=MAXCOR-NFAA*IINTFP
      IF(IUHF.EQ.0) THEN
       I0BB=I0AA
      ELSE
       I0BB=I0AA-NFBB*IINTFP
       MXCOR=MXCOR-NFBB*IINTFP
      ENDIF
      CALL GETLST(ICORE(I0AA),1,1,1,1,91)
      IF(IUHF.EQ.1) THEN
       CALL GETLST(ICORE(I0BB),1,1,1,2,91)
      ENDIF
C
      GOTO 1000
C
C ADDITIONAL CODE FOR QCISD AND CCSD METHODS
C
      IF(METHOD.GT.9.AND.SING1.OR.METHOD.EQ.6.AND.SING1.OR.ROHF4)THEN
       I0TA=I0BB-NTAA*IINTFP
       I0ZA=I0TA-NTAA*IINTFP
       MXCOR=MXCOR-2*NTAA*IINTFP
       CALL GETLST(ICORE(I0TA),1,1,1,1,90)
       CALL GETLST(ICORE(I0ZA),1,1,1,3,90)
       IF(IUHF.EQ.0) THEN
        I0TB=I0TA
        I0ZB=I0ZA
       ELSE
        I0TB=I0ZA-NTBB*IINTFP
        I0ZB=I0TB-NTBB*IINTFP
        MXCOR=MXCOR-2*NTBB*IINTFP
        CALL GETLST(ICORE(I0TB),1,1,1,2,90)
        CALL GETLST(ICORE(I0ZB),1,1,1,4,90)
       ENDIF
C
       DO 300 ISPIN=1,IUHF+1
C 
        IF(ISPIN.EQ.1) THEN
         IOFFF=I0AA
         IOFFT=I0TA
         IOFFZ=I0ZA
         I0Z=I0ZA
        ELSE  
         IOFFF=I0BB
         IOFFT=I0TB
         IOFFZ=I0ZB
         I0Z=I0ZB
        ENDIF
        DO 250 IRREP=1,NIRREP
C
         NOCC=POP(IRREP,ISPIN)
         NVRT=VRT(IRREP,ISPIN)
         IF(MIN(NVRT,NOCC).GT.0) THEN 
         CALL XGEMM('N','N',NVRT,NOCC,NOCC,ONEM,ICORE(IOFFT),NVRT,
     &              ICORE(IOFFF),NOCC,ONE,ICORE(IOFFZ),NVRT)
         ENDIF
         IOFFF=IOFFF+NOCC*NOCC*IINTFP
         IOFFT=IOFFT+NOCC*NVRT*IINTFP
         IOFFZ=IOFFZ+NOCC*NVRT*IINTFP
250     CONTINUE
        CALL PUTLST(ICORE(I0Z),1,1,1,ISPIN+2,90)
300    CONTINUE
C
C  IF CCSD METHODS ADD TO FMI THE FOLLOWING TERM
C
C  1/2 SUM E  F(E,M) T(E,J)
C
       IF(.NOT.QCISD.AND..NOT.LINCC.OR.ROHF4) THEN
C
C  USE THE ALLOCATION FOR Z TO STORE F(E,M)
C
        CALL GETLST(ICORE(I0ZA),1,1,1,1,93)
C
        IOFFMI=I0AA
        IOFFEM=I0ZA
        IOFT=I0TA
        DO 20 IRREP=1,NIRREP
         NOCC=POP(IRREP,1)
         NVRT=VRT(IRREP,1)
         CALL XGEMM('T','N',NOCC,NOCC,NVRT,HALF,ICORE(IOFFEM),NVRT,
     &              ICORE(IOFT),NVRT,ONE,ICORE(IOFFMI),NOCC)
         IOFFMI=IOFFMI+NOCC*NOCC*IINTFP
         IOFFEM=IOFFEM+NOCC*NVRT*IINTFP
         IOFT=IOFT+NOCC*NVRT*IINTFP
20      CONTINUE
C
        IF(IUHF.EQ.1) THEN
         CALL GETLST(ICORE(I0ZB),1,1,1,2,93)
C
         IOFFMI=I0BB
         IOFFEM=I0ZB
         IOFT=I0TB
         DO 21 IRREP=1,NIRREP
          NOCC=POP(IRREP,2)
          NVRT=VRT(IRREP,2)
          CALL XGEMM('T','N',NOCC,NOCC,NVRT,HALF,ICORE(IOFFEM),NVRT,
     &               ICORE(IOFT),NVRT,ONE,ICORE(IOFFMI),NOCC)
          IOFFMI=IOFFMI+NOCC*NOCC*IINTFP
          IOFFEM=IOFFEM+NOCC*NVRT*IINTFP
          IOFT=IOFT+NOCC*NVRT*IINTFP
21       CONTINUE
        ENDIF
       ENDIF
      ENDIF
C
 1000 CONTINUE
C
C     AA AND BB SPIN CASES
C
      IF(IUHF.EQ.1) THEN
C
C
       DO 100 ISPIN=1,2
C
        IF(ISPIN.EQ.1) THEN
         I000=I0AA
        ELSE
         I000=I0BB
        ENDIF
        LISTT=ISPIN+43
        LISTZ=ISPIN+60
C
        DO 50 IRREP=1,NIRREP 
C
        NOCCSQ=0
        DO 45 IRREPJ=1,NIRREP
         IRREPI=DIRPRD(IRREP,IRREPJ)
         NOCCSQ=NOCCSQ+POP(IRREPJ,ISPIN)*POP(IRREPI,ISPIN)
45      CONTINUE

C
C       RETRIEVE T2 AMPLITUDES AND CALCLUATE NEW ONES
C
         DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT)) 
         DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
         NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
         NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
         I001=1
         I002=I001+IINTFP*NOCCSQ*DISSYT
         I003=I002+IINTFP*NOCCSQ*DISSYZ
         IF(MIN(NUMSYT,NUMSYZ,DISSYT,DISSYZ).NE.0) THEN
          I004=I003+IINTFP*MAX(DISSYT,DISSYZ)
          IF(I004.LT.MXCOR) THEN
C
C
C    IN CORE VERSION
C
          CALL FMIAA1(ICORE(I001),ICORE(I002),ICORE(I000),
     &                POP(1,ISPIN),NOCCSQ,DISSYT,DISSYZ,NUMSYT,
     &                NUMSYZ,NFAA,LISTT,LISTZ,IRREP,ICORE(I003))
          ELSE
           STOP 'FMIAA1'
          ENDIF
         ENDIF
50      CONTINUE
100    CONTINUE
      ENDIF
  
C
C      AB SPIN CASE
C
      LISTT=46
      LISTZ=63
C
C   LOOP OVER IRREPS
C
      DO 200 IRREP=1,NIRREP
C
C   RETRIEVE T2 AMPLITUDES AND CALCULATE Z-AMPLITUDES
C
       DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
       DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
       NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
       NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
       I001=1
       I002=I001+IINTFP*NUMSYT*DISSYT
       I003=I002+IINTFP*NUMSYZ*DISSYZ
       IF(MIN(NUMSYT,NUMSYZ,DISSYT,DISSYZ).NE.0) THEN
        I004=I003+IINTFP*MAX(DISSYT,DISSYZ,NUMSYT,NUMSYZ)*3
        IF(I004.LT.MXCOR) THEN
C
C       IN CORE ALGORITHM
C
         CALL FMIAB1(ICORE(I001),ICORE(I002),ICORE(I0AA),ICORE(I0BB),
     &               POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),DISSYT,
     &               DISSYZ,NUMSYT,NUMSYZ,NFAA,NFBB,LISTT,LISTZ,
     &               IRREP,IUHF,ICORE(I003))
        ELSE
C
C       OUT CORE ALGORITHM
C
         STOP 'FMIAB1'
        ENDIF
       ENDIF
200   CONTINUE
      RETURN
      END
