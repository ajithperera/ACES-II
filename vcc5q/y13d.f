      SUBROUTINE Y13D(CORE,MAXCOR,IUHF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DISSIZD,DISSIZT,DISSIZY
      INTEGER POP,VRT,DIRPRD
      DIMENSION CORE(1)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYM/    POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /INFO/   NOCA,NOCB,NVRTA,NVRTB
      COMMON /T3OFF/  IOFFVV(8,8,10),IOFFOO(8,8,10),IOFFVO(8,8,4)
C
      WRITE(6,1000)
 1000 FORMAT(' @Y13D-I, T2 * Y1 contributions. ')
C
C     CEKM = BE * BCKM
C     cekm = be * bckm
C
      DO  100 ISPIN=1,IUHF+1
C
      I000 = 1
      I010 = I000 + NFEA(ISPIN)
      CALL GETLST(CORE(I000),1,1,1,ISPIN,92)
C
      DO   40 IRPKM=1,NIRREP
C
      IRPCE = IRPKM
      IRPBC = IRPKM
C
      IF(IRPDPD(IRPKM,18+ISPIN).EQ.0.OR.
     1   IRPDPD(IRPKM,20+ISPIN).EQ.0) GOTO 40
C
      I020 = I010 + IRPDPD(IRPKM,18+ISPIN) * IRPDPD(IRPKM,20+ISPIN)
      I030 = I020 + IRPDPD(IRPKM,18+ISPIN) * IRPDPD(IRPKM,20+ISPIN)
      I040 = I030 + MAX(IRPDPD(IRPKM,18+ISPIN),IRPDPD(IRPKM,20+ISPIN))
      I050 = I040 + MAX(IRPDPD(IRPKM,18+ISPIN),IRPDPD(IRPKM,20+ISPIN))
      I060 = I050 + MAX(IRPDPD(IRPKM,18+ISPIN),IRPDPD(IRPKM,20+ISPIN))
      NEED = IINTFP * I060
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
 1020 FORMAT(' @Y13D-I, Insufficient memory. Need ',I15,' . Got ',I15)
      STOP 'Y13D'
      ENDIF
C
      DISSIZY = IRPDPD(IRPKM,18+ISPIN)
      NDISY   = IRPDPD(IRPKM,20+ISPIN)
C
C     T(B<C,K<M) or T(b<c,k<m)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPKM,2+ISPIN),1,
     1            IRPKM,43+ISPIN)
C     (B<C,K<M) ---> (B,C,K<M)
      CALL SYMEXP2(IRPKM,VRT(1,ISPIN),DISSIZY,
     1             IRPDPD(IRPKM,  ISPIN),
     1             IRPDPD(IRPKM,2+ISPIN),CORE(I010),CORE(I010))
C     (B,C,K<M) ---> (B,C,K,M)
      CALL  SYMEXP(IRPKM,POP(1,ISPIN),DISSIZY,CORE(I010))
C
      NSIZY   = DISSIZY * NDISY
C
      CALL ZERO(CORE(I020),NSIZY)
      DO   35   KM=1,IRPDPD(IRPKM,20+ISPIN)
      DO   30 IRPE=1,NIRREP
C
      IRPC = DIRPRD(IRPCE,IRPE)
      IRPB = IRPE
C
      IF(VRT(IRPC,ISPIN).EQ.0.OR.VRT(IRPE,ISPIN).EQ.0) GOTO 30
C
      IOFFD = I000 +                        IOFFVV(IRPE,    1,2+ISPIN)
      IOFFT = I010 + (KM-1)*IRPDPD(IRPKM,18+ISPIN) +
     1                                      IOFFVV(IRPC,IRPBC,2+ISPIN)
      IOFFY = I020 + (KM-1)*IRPDPD(IRPKM,18+ISPIN) +
     1                                      IOFFVV(IRPC,IRPCE,2+ISPIN)
C
      DISSIZT = VRT(IRPB,ISPIN)
      NDIST   = VRT(IRPC,ISPIN)
      DISSIZD = VRT(IRPB,ISPIN)
      NDISD   = VRT(IRPE,ISPIN)
C
      CALL XGEMM('T','N',NDISD,NDIST,DISSIZD,
     1             1.0D+00,
     1            CORE(IOFFD),DISSIZD,
     1            CORE(IOFFT),DISSIZT,1.0D+00,
     1            CORE(IOFFY),NDISD)
   30 CONTINUE
   35 CONTINUE
C
C     We have Y(E,C,K,M) at I020. Transpose to yield (C,E,K,M).
C
      CALL SYMTR3(IRPKM,VRT(1,ISPIN),VRT(1,ISPIN),
     1            IRPDPD(IRPKM,18+ISPIN),IRPDPD(IRPKM,20+ISPIN),
     1            CORE(I020),CORE(I030),CORE(I040),CORE(I050))
C
      CALL GETLIST(CORE(I010),1,NDISY,2,IRPKM,18+ISPIN)
      CALL    VADD(CORE(I010),CORE(I010),CORE(I020),NSIZY, 1.0D+00)
      CALL PUTLIST(CORE(I010),1,NDISY,2,IRPKM,18+ISPIN)
   40 CONTINUE
  100 CONTINUE
C
C     CeKm = be * bCKm
C     cEkM = BE * BckM
C
      DO  200 ISPIN=1,IUHF+1
C
      I000 = 1
      I010 = I000 + NFEA(3-ISPIN-1+IUHF)
      CALL GETLST(CORE(I000),1,1,1,3-ISPIN-1+IUHF,92)
C
      DO  140 IRPKM=1,NIRREP
C
      IRPCE = IRPKM
      IRPBC = IRPKM
C
      IF(IRPDPD(IRPKM,13).EQ.0.OR.IRPDPD(IRPKM,14).EQ.0) GOTO 140
C
      I020 = I010 + IRPDPD(IRPKM,13) * IRPDPD(IRPKM,14)
      I030 = I020 + IRPDPD(IRPKM,13) * IRPDPD(IRPKM,14)
      I040 = I030 + MAX(IRPDPD(IRPKM,13),IRPDPD(IRPKM,14))
      I050 = I040 + MAX(IRPDPD(IRPKM,13),IRPDPD(IRPKM,14))
      I060 = I050 + MAX(IRPDPD(IRPKM,13),IRPDPD(IRPKM,14))
      NEED = IINTFP * I060
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
      STOP 'Y13D'
      ENDIF
C
      DISSIZY = IRPDPD(IRPKM,13)
      NDISY   = IRPDPD(IRPKM,14)
C
C     T(C,b,K,m) or T(B,c,M,k)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPKM,14),1,IRPKM,46)
C
      IF(ISPIN.EQ.1)THEN
C     (C,b,K,m) ---> (b,C,K,m)
      CALL SYMTR3(IRPKM,VRT(1,1),VRT(1,2),IRPDPD(IRPKM,13),
     1            IRPDPD(IRPKM,14),CORE(I010),
     1            CORE(I030),CORE(I040),CORE(I050))
      ELSE
C     (B,c,M,k) ---> (B,c,k,M)
      CALL SYMTR1(IRPKM,POP(1,1),POP(1,2),IRPDPD(IRPKM,13),CORE(I010),
     1            CORE(I030),CORE(I040),CORE(I050))
      ENDIF
C
      NSIZY   = DISSIZY * NDISY
C
      CALL ZERO(CORE(I020),NSIZY)
      DO  135   KM=1,IRPDPD(IRPKM,14)
      DO  130 IRPE=1,NIRREP
C
      IRPC = DIRPRD(IRPCE,IRPE)
      IRPB = IRPE
C
      IF(VRT(IRPC,ISPIN).EQ.0.OR.VRT(IRPE,3-ISPIN).EQ.0) GOTO 130
C
      IOFFD = I000 +                        IOFFVV(IRPE,    1,5-ISPIN)
      IOFFT = I010 + (KM-1)*IRPDPD(IRPKM,13) +
     1                                      IOFFVV(IRPC,IRPBC,7-ISPIN)
      IOFFY = I020 + (KM-1)*IRPDPD(IRPKM,13) +
     1                                      IOFFVV(IRPC,IRPCE,7-ISPIN)
C
      DISSIZT = VRT(IRPB,3-ISPIN)
      NDIST   = VRT(IRPC,ISPIN)
      DISSIZD = VRT(IRPB,3-ISPIN)
      NDISD   = VRT(IRPE,3-ISPIN)
C
      CALL XGEMM('T','N',NDISD,NDIST,DISSIZD,
     1            -1.0D+00,
     1            CORE(IOFFD),DISSIZD,
     1            CORE(IOFFT),DISSIZT,1.0D+00,
     1            CORE(IOFFY),NDISD)
  130 CONTINUE
  135 CONTINUE
C
C     We have Y(e,C,K,m)/Y(E,c,k,M) at I020. Transpose to yield 
C     Y(C,e,K,m)/Y(c,E,k,M).
C
      CALL SYMTR3(IRPKM,VRT(1,3-ISPIN),VRT(1,ISPIN),
     1            IRPDPD(IRPKM,13),IRPDPD(IRPKM,14),
     1            CORE(I020),CORE(I030),CORE(I040),CORE(I050))
C
      CALL GETLIST(CORE(I010),1,NDISY,2,IRPKM,20+ISPIN)
      CALL    VADD(CORE(I010),CORE(I010),CORE(I020),NSIZY, 1.0D+00)
      CALL PUTLIST(CORE(I010),1,NDISY,2,IRPKM,20+ISPIN)
  140 CONTINUE
  200 CONTINUE
C
C     CekM = be * bCkM
C     cEKm = BE * BcKm
C
      DO  300 ISPIN=1,IUHF+1
C
      I000 = 1
      I010 = I000 + NFEA(3-ISPIN-1+IUHF)
      CALL GETLST(CORE(I000),1,1,1,3-ISPIN-1+IUHF,92)
C
      DO  240 IRPKM=1,NIRREP
C
      IRPCE = IRPKM
      IRPBC = IRPKM
C
      IF(IRPDPD(IRPKM,13).EQ.0.OR.IRPDPD(IRPKM,14).EQ.0) GOTO 240
C
      I020 = I010 + IRPDPD(IRPKM,13) * IRPDPD(IRPKM,14)
      I030 = I020 + IRPDPD(IRPKM,13) * IRPDPD(IRPKM,14)
      I040 = I030 + MAX(IRPDPD(IRPKM,13),IRPDPD(IRPKM,14))
      I050 = I040 + MAX(IRPDPD(IRPKM,13),IRPDPD(IRPKM,14))
      I060 = I050 + MAX(IRPDPD(IRPKM,13),IRPDPD(IRPKM,14))
      NEED = IINTFP * I060
      IF(NEED.GT.MAXCOR)THEN
      WRITE(6,1020) NEED,MAXCOR
      STOP 'Y13D'
      ENDIF
C
      DISSIZY = IRPDPD(IRPKM,13)
      NDISY   = IRPDPD(IRPKM,14)
C
C     T(C,b,M,k) or T(B,c,K,m)
      CALL GETLST(CORE(I010),1,IRPDPD(IRPKM,14),1,IRPKM,46)
C
      IF(ISPIN.EQ.1)THEN
C     (C,b,M,k) ---> (b,C,M,k)
      CALL SYMTR3(IRPKM,VRT(1,1),VRT(1,2),IRPDPD(IRPKM,13),
     1            IRPDPD(IRPKM,14),CORE(I010),
     1            CORE(I030),CORE(I040),CORE(I050))
C     (b,C,M,k) ---> (b,C,k,M)
      CALL SYMTR1(IRPKM,POP(1,1),POP(1,2),IRPDPD(IRPKM,13),CORE(I010),
     1            CORE(I030),CORE(I040),CORE(I050))
      ENDIF
C
      NSIZY   = DISSIZY * NDISY
C
      CALL ZERO(CORE(I020),NSIZY)
      DO  235   KM=1,IRPDPD(IRPKM,14)
      DO  230 IRPE=1,NIRREP
C
      IRPC = DIRPRD(IRPCE,IRPE)
      IRPB = IRPE
C
      IF(VRT(IRPC,ISPIN).EQ.0.OR.VRT(IRPE,3-ISPIN).EQ.0) GOTO 230
C
      IOFFD = I000 +                        IOFFVV(IRPE,    1,5-ISPIN)
      IOFFT = I010 + (KM-1)*IRPDPD(IRPKM,13) +
     1                                      IOFFVV(IRPC,IRPBC,7-ISPIN)
      IOFFY = I020 + (KM-1)*IRPDPD(IRPKM,13) +
     1                                      IOFFVV(IRPC,IRPCE,7-ISPIN)
C
      DISSIZT = VRT(IRPB,3-ISPIN)
      NDIST   = VRT(IRPC,ISPIN)
      DISSIZD = VRT(IRPB,3-ISPIN)
      NDISD   = VRT(IRPE,3-ISPIN)
C
      CALL XGEMM('T','N',NDISD,NDIST,DISSIZD,
     1             1.0D+00,
     1            CORE(IOFFD),DISSIZD,
     1            CORE(IOFFT),DISSIZT,1.0D+00,
     1            CORE(IOFFY),NDISD)
  230 CONTINUE
  235 CONTINUE
C
C     We have Y(e,C,k,M)/Y(E,c,K,m) at I020. Transpose to yield 
C     Y(C,e,k,M)/Y(c,E,K,m).
C
      CALL SYMTR3(IRPKM,VRT(1,3-ISPIN),VRT(1,ISPIN),
     1            IRPDPD(IRPKM,13),IRPDPD(IRPKM,14),
     1            CORE(I020),CORE(I030),CORE(I040),CORE(I050))
C
      CALL GETLIST(CORE(I010),1,NDISY,2,IRPKM,22+ISPIN)
      CALL    VADD(CORE(I010),CORE(I010),CORE(I020),NSIZY, 1.0D+00)
      CALL PUTLIST(CORE(I010),1,NDISY,2,IRPKM,22+ISPIN)
  240 CONTINUE
  300 CONTINUE
      RETURN
      END
