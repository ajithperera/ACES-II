C
C THIS ROUTINE AND DEPENDENTS COMPUTE THE RING-TYPE W(MBEJ)
C  INTERMEDIATE FOR ALL SIX POSSIBLE SPIN CASES.  THE ALGORITHM
C  ASSUMES IN-CORE STORAGE OF SYMMETRY PACKED TARGET, T2 AND W
C  VECTORS AND USES THE DPD SYMMETRY APPROACH TO EVALUATE THE
C  CONTRACTIONS.
C
C SPIN ORBITAL EQUATION FOR THIS INTERMEDIATE (EVENTUAL MODIFICATION
C                     TO INCLUDE T1 IS NECESSARY FOR CCSD):
C
C         W(mbej)=<mb||ej>-(1/2)*SUM T(jn,fb) <mn||ef>
C                                n,f
C
C Fixed some inconsistencies to DT call. They did not 
C have any effects on the answers but some compilers
C do complain about them 03/08/97, AP.
C 
      SUBROUTINE DWMBEJ(ICORE,MAXCOR,SPCASE,IUHF,C1,C2,C3,C4)
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION C1,C2,C3,C4,X,TWO,ONE,ONEM,HALF,ZILCH,TWOM
      CHARACTER*4 SPCASE,TAUTYP1,TAUTYP2
      DIMENSION ICORE(MAXCOR),IOFFT1(8,2)
      LOGICAL MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &                QCISD,UCC
      COMMON /SWITCH/ MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &                QCISD,UCC
      COMMON /INFO/ NOCA,NOCB,NVRTA,NVRTB
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT1AA,NT1BB,NF1AA,NF1BB,NF2AA,
     &             NF2BB
      DATA ZILCH /0.0/
      DATA ONE /1.0/
      DATA HALF/0.5/
      DATA TWO /2.0/
      DATA TWOM /-2.0/
      DATA ONEM/-1.0/
      NNP1O2(I)=I*(I+1)/2
      X=1.0
      IF(C3.NE.0.0)CALL GETT1(ICORE,MAXCOR,MXCOR,IUHF,IOFFT1)
C********************************************************************
C
C DO SPIN CASE AAAA AND BBBB:
C
C       W(MBEJ)=<MB||EJ>-(1/2)*SUM [T(JN,FB)<MN||EF>-T(Jn,fB)<Mn|Ef>]
C
C       W(mbej)=<mb||ej>-(1/2)*SUM [T(jn,fb)<mn||ef>-T(jN,Fb)<mN|eF>]
C
C TERMS A AND B BOTH HANDLED BELOW.
C
      IF(SPCASE.EQ.'AAAA'.OR.SPCASE.EQ.'BBBB')THEN
       IF(SPCASE.EQ.'AAAA')THEN
        ISPIN=1
        TAUTYP1='AAAA'
       ELSEIF(SPCASE.EQ.'BBBB')THEN
        ISPIN=2
        TAUTYP1='BBBB'
       ENDIF
       MAXSIZ=0
       LSTINT=22+ISPIN
       LISTQ =53+ISPIN
C      LISTWA=18+ISPIN
C     Lists 19 and 20 correspond to 34 and 35 but with a sign change
       LISTWA=33+ISPIN
       LISTTA=33+ISPIN
C      LISTWB=19-ISPIN  
C      Lists 17 and 18 correspond to lists 36 and 37
       LISTWB=38-ISPIN  
       LISTTB=35+ISPIN
       IF(IUHF.EQ.0)LISTTB=37
       DO 100 IRREP=1,NIRREP 
        DSSYWA=IRPDPD(IRREP,ISYTYP(1,LISTWA))
        DSSYTA=IRPDPD(IRREP,ISYTYP(1,LISTTA))
        NMSYWA=IRPDPD(IRREP,ISYTYP(2,LISTWA))
        NMSYTA=IRPDPD(IRREP,ISYTYP(2,LISTTA))
        DSSYWB=IRPDPD(IRREP,ISYTYP(1,LISTWB))
        DSSYTB=IRPDPD(IRREP,ISYTYP(1,LISTTB))
        NMSYWB=IRPDPD(IRREP,ISYTYP(2,LISTWB))
        NMSYTB=IRPDPD(IRREP,ISYTYP(2,LISTTB))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMSYQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        I000=1
        I010=I000+IINTFP*DISSYQ*NUMSYQ
        I020=I010+IINTFP*NMSYWA*DSSYWA
        I030=I020+IINTFP*NMSYTA*DSSYTA
        I030=MAX(I030,I010+DISSYQ*NUMSYQ*IINTFP)
        CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
        NSIZE=DISSYQ*NUMSYQ
        IF(C1.NE.0.0)THEN
         CALL GETLST(ICORE(I000),1,NUMSYQ,1,IRREP,LSTINT)
         IF(UCC) THEN
          CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
          CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
         ENDIF  
        ENDIF
        IF(C4.NE.0.0)THEN
         CALL GETLST(ICORE(I020),1,NMSYTA,1,IRREP,LISTTA)
         IF(C3.NE.0.0)THEN
          CALL GETARGS(LISTTA,I1,I2)
          CALL F2TAU(ICORE(I020),ICORE(IOFFT1(1,I1)),
     &                ICORE(IOFFT1(1,I2)),DSSYTA,NMSYTA,
     &                POP(1,I1),POP(1,I2),VRT(1,I1),VRT(1,I2),
     &                IRREP,TWO,TAUTYP1)
         ENDIF
C     sign change : -c4 --> c4
         CALL CNTRCT(ICORE(I000),ICORE(I010),ICORE(I020),
     &               DISSYQ,NUMSYQ,DSSYTA,NMSYTA,DSSYWA,NMSYWA,
     &               IRREP,LISTWA,LISTWA,LISTTA,'WxT',X, C4,0)
         IF(UCC) THEN
          CALL DT(TWO,ICORE(I000),DISSYQ,NUMSYQ,'ADD',icore(i030))
          CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
          CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
         ENDIF  
         I020=I010+IINTFP*NMSYWB*DSSYWB
         I030=I020+IINTFP*NMSYTB*DSSYTB
         CALL GETLST(ICORE(I020),1,NMSYTB,1,IRREP,LISTTB)
         CALL CNTRCT(ICORE(I000),ICORE(I010),ICORE(I020),
     &               DISSYQ,NUMSYQ,DSSYTB,NMSYTB,DSSYWB,NMSYWB,
     &               IRREP,LISTWB,LISTWB,LISTTB,'WxT',X,C4,0)
         IF(UCC) THEN
          CALL DT(TWO,ICORE(I000),DISSYQ,NUMSYQ,'ADD',icore(i030))
         ENDIF  
        ENDIF
        CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
100    CONTINUE
C
C DO SPIN CASES ABAB AND BABA:
C
C       W(MbEj)=<Mb|Ej>-(1/2)*SUM [T(jn,fb)<Mn|Ef>-T(jN,bF)<MN||EF>]
C
C       W(mBeJ)=<mB|eJ>-(1/2)*SUM [T(JN,FB)<mN|eF>-T(Jn,Bf)<mn||ef>]
C    
      ELSEIF(SPCASE.EQ.'ABAB'.OR.SPCASE.EQ.'BABA')THEN
       IF(IUHF.NE.0)THEN
       IF(SPCASE.EQ.'ABAB')THEN
        LSTINT=18
        LISTQ=56
        LISTQ1=57
        IF(IUHF.EQ.0)THEN
         LISTTA=34
        ELSE
         LISTTA=35
        ENDIF
        LISTTB=37
C       LISTWA=18
        LISTWA=37
C       LISTWB=19
C       sign change here
        LISTWB=34
        TAUTYP1='BBBB'
       ELSEIF(SPCASE.EQ.'BABA')THEN 
        LSTINT=17
        LISTQ=57
        LISTQ1=56
        LISTTA=34
C       LISTWA=17
        LISTWA=36
        LISTTB=36
C       LISTWB=20
C       sign change here
        LISTWB=35
        TAUTYP1='AAAA'
       ENDIF
       DO 200 IRREP=1,NIRREP 
        DSSYWA=IRPDPD(IRREP,ISYTYP(1,LISTWA))
        DSSYTA=IRPDPD(IRREP,ISYTYP(1,LISTTA))
        NMSYWA=IRPDPD(IRREP,ISYTYP(2,LISTWA))
        NMSYTA=IRPDPD(IRREP,ISYTYP(2,LISTTA))
        DSSYWB=IRPDPD(IRREP,ISYTYP(1,LISTWB))
        DSSYTB=IRPDPD(IRREP,ISYTYP(1,LISTTB))
        NMSYWB=IRPDPD(IRREP,ISYTYP(2,LISTWB))
        NMSYTB=IRPDPD(IRREP,ISYTYP(2,LISTTB))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMSYQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        I000=1
        I010=I000+IINTFP*DISSYQ*NUMSYQ
        I020=I010+IINTFP*NMSYWA*DSSYWA
        I030=I020+IINTFP*NMSYTA*DSSYTA
        CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
        NSIZE=DISSYQ*NUMSYQ
        IF(C1.NE.0.0)THEN
         CALL GETLST(ICORE(I000),1,NUMSYQ,1,IRREP,LSTINT)
         IF(UCC) THEN
          CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
          CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
         ENDIF  
        ENDIF
        IF(C4.NE.0.0)THEN
         CALL GETLST(ICORE(I020),1,NMSYTA,1,IRREP,LISTTA)
         IF(C3.NE.0.0)THEN
          CALL GETARGS(LISTTA,I1,I2)
          CALL F2TAU(ICORE(I020),ICORE(IOFFT1(1,I1)),
     &                ICORE(IOFFT1(1,I2)),DSSYTA,NMSYTA,
     &                POP(1,I1),POP(1,I2),VRT(1,I1),VRT(1,I2),
     &                IRREP,TWO,TAUTYP1)
         ENDIF
         CALL CNTRCT(ICORE(I000),ICORE(I010),ICORE(I020),
     &               DISSYQ,NUMSYQ,DSSYTA,NMSYTA,DSSYWA,NMSYWA,
     &               IRREP,LISTWA,LISTWA,LISTTA,'WxT',X,C4,0) 
         IF(UCC) THEN
          CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
          CALL DT(TWO,ICORE(I000),DISSYQ,NUMSYQ,'NSY',ICORE(I010))
          CALL SUMSYM2(ICORE(I010),ICORE(I000),NSIZE,1,IRREP,LISTQ1)
          CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
         ENDIF  
         I020=I010+IINTFP*NMSYWB*DSSYWB
         I030=I020+IINTFP*NMSYTB*DSSYTB
         I030=MAX(I030,I010+DISSYQ*NUMSYQ*IINTFP)
         CALL GETLST(ICORE(I020),1,NMSYTB,1,IRREP,LISTTB)
C       sign change here : -c4 --> c4
         CALL CNTRCT(ICORE(I000),ICORE(I010),ICORE(I020),
     &               DISSYQ,NUMSYQ,DSSYTB,NMSYTB,DSSYWB,NMSYWB,
     &               IRREP,LISTWB,LISTWB,LISTTB,'WxT',X, C4,0)
         IF(UCC) THEN
          CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
          CALL DT(TWO,ICORE(I000),DISSYQ,NUMSYQ,'NSY',ICORE(I010))
          CALL SUMSYM2(ICORE(I010),ICORE(I000),NSIZE,1,IRREP,LISTQ1)
         ENDIF  
        ENDIF
        IF(.NOT.UCC)
     &  CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
200    CONTINUE
C
C SPIN ADAPTED CODE FOR RHF "ABAB" SPIN CASE
C
       ELSE
C      LSTINT=18
       LSTINT=37
       LSTINTB=25
       LISTQ=56
       LISTTA=37
       LISTTB=39
C      LISTWA=18
       LISTWA=37
C      LISTWB=21
       LISTWB=39
       TAUTYP1='ABAB'
       DO 201 IRREP=1,NIRREP 
        DSSYWA=IRPDPD(IRREP,ISYTYP(1,LISTWA))
        DSSYTA=IRPDPD(IRREP,ISYTYP(1,LISTTA))
        NMSYWA=IRPDPD(IRREP,ISYTYP(2,LISTWA))
        NMSYTA=IRPDPD(IRREP,ISYTYP(2,LISTTA))
        DSSYWB=IRPDPD(IRREP,ISYTYP(1,LISTWB))
        DSSYTB=IRPDPD(IRREP,ISYTYP(1,LISTTB))
        NMSYWB=IRPDPD(IRREP,ISYTYP(2,LISTWB))
        NMSYTB=IRPDPD(IRREP,ISYTYP(2,LISTTB))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMSYQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        I000=1
        I010=I000+IINTFP*DISSYQ*NUMSYQ
        I020=I010+IINTFP*NMSYWA*DSSYWA
        I030=I020+IINTFP*NMSYTA*DSSYTA
        IF(C4.NE.0.0)THEN
C
C SPIN ADAPT THE T AMPLITUDES
C
         CALL GETLST(ICORE(I020),1,NMSYTA,1,IRREP,LISTTA)
         CALL GETLST(ICORE(I010),1,NMSYTA,1,IRREP,LISTTB)
         IF(C3.NE.0.0)THEN
          CALL GETARGS(LISTTA,I1,I2)
          CALL F2TAU(ICORE(I010),ICORE(IOFFT1(1,I1)),
     &                ICORE(IOFFT1(1,I2)),DSSYTA,NMSYTA,
     &                POP(1,I1),POP(1,I2),VRT(1,I1),VRT(1,I2),
     &                IRREP,TWO,TAUTYP1)
         ENDIF
         CALL SSCAL (NMSYTA*NMSYTA,TWO,ICORE(I020),1)
         CALL SAXPY (NMSYTA*NMSYTA,ONEM,ICORE(I010),1,ICORE(I020),1)
         CALL CNTRCT(ICORE(I000),ICORE(I010),ICORE(I020),
     &                DISSYQ,NUMSYQ,DSSYTA,NMSYTA,DSSYWA,NMSYWA,
     &                IRREP,LISTWA,LISTWB,LISTTA,'WxT',ZILCH,-C4,1)
         IF(UCC) THEN
          CALL DT(TWO,ICORE(I000),DISSYQ,NUMSYQ,'ADD',icore(i030))
         ENDIF  
        ENDIF
        NSIZE=DISSYQ*NUMSYQ
C
C NOW INCLUDE THE SPIN-ADAPTED INTEGRALS
C
        IF(C1.NE.0.0)THEN
         CALL GETLST(ICORE(I010),1,NUMSYQ,1,IRREP,LSTINT)
         CALL GETLST(ICORE(I020),1,NUMSYQ,1,IRREP,LSTINTB)
         CALL SSCAL (DISSYQ*DISSYQ,TWO,ICORE(I010),1)
         CALL SAXPY (DISSYQ*DISSYQ,ONEM,ICORE(I020),1,ICORE(I010),1) 
         IF(C4.NE.0.0)THEN
          CALL SAXPY (DISSYQ*DISSYQ,ONE,ICORE(I010),1,ICORE(I000),1)
         ELSE
c YAU : old
c         CALL ICOPY(DISSYQ*DISSYQ*IINTFP,ICORE(I010),1,ICORE(I000),1) 
c YAU : new
          CALL DCOPY(DISSYQ*DISSYQ,ICORE(I010),1,ICORE(I000),1) 
c YAU : end
         ENDIF
        ENDIF
C
C WE ALSO NEED SPIN-ADAPTED T1RING STUFF FOR CCSD
C
        IF(C3.NE.0.0)THEN
         CALL GETLST(ICORE(I010),1,NUMSYQ,1,IRREP,56)
         CALL GETLST(ICORE(I020),1,NUMSYQ,1,IRREP,58)
         CALL SSCAL(NSIZE,TWO,ICORE(I010),1)
         CALL SAXPY(NSIZE,ONEM,ICORE(I020),1,ICORE(I010),1)
         CALL SAXPY(NSIZE,ONE ,ICORE(I010),1,ICORE(I000),1)
         CALL PUTLST(ICORE(I000),1,NUMSYQ,1,IRREP,56)
        ELSE
         CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
        ENDIF
201    CONTINUE
       ENDIF
C
C
C
      ELSEIF(SPCASE.EQ.'ABBA'.OR.SPCASE.EQ.'BAAB')THEN
C
C DO SPIN CASES ABBA AND BAAB:
C
C       W(MbeJ) = -<Mb|Je>+(1/2)*SUM [T(Jn,Fb)<Mn|Fe>]
C
C       W(mBEj) = -<mB|jE>+(1/2)*SUM [T(jN,fB)<mN|fE>]
C
       IF(SPCASE.EQ.'ABBA')THEN
        LISTQ=58
        LSTINT=25
        LISTTA=38
        IF(IUHF.EQ.0)LISTTA=39
C       LISTWA=21
        LISTWA=39
        TAUTYP1='ABAB'
       ELSEIF(SPCASE.EQ.'BAAB')THEN
        LISTQ=59
        LSTINT=26
        LISTTA=39
C       LISTWA=22
        LISTWA=38
        TAUTYP1='BABA'
       ENDIF
       DO 300 IRREP=1,NIRREP 
        DSSYWA=IRPDPD(IRREP,ISYTYP(1,LISTWA))
        DSSYTA=IRPDPD(IRREP,ISYTYP(1,LISTTA))
        NMSYWA=IRPDPD(IRREP,ISYTYP(2,LISTWA))
        NMSYTA=IRPDPD(IRREP,ISYTYP(2,LISTTA))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMSYQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        I000=1
        I010=I000+IINTFP*DISSYQ*NUMSYQ
        I020=I010+IINTFP*NMSYWA*DSSYWA
        I030=I020+IINTFP*NMSYTA*DSSYTA
        I030=MAX(I030,I010+DISSYQ*NUMSYQ*IINTFP)
        CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
        NSIZE=DISSYQ*NUMSYQ
C
C LIST ORDERING OF TARGET IS SAME AS INTEGRAL INVOLVED IN
C  CONTRACTION, SO JUST USE THIS SET OF POINTERS TO FETCH 
C  PACKED INTEGRAL LISTS.
C
        IF(C1.NE.0.0)THEN
         CALL GETLST(ICORE(I000),1,NUMSYQ,2,IRREP,LSTINT)
         IF(UCC) THEN
          CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
          CALL IZERO(ICORE(I000),DISSYQ*NUMSYQ*IINTFP)
         ENDIF  
        ENDIF
        IF(C4.NE.0.0)THEN
         CALL GETLST(ICORE(I020),1,NMSYTA,1,IRREP,LISTTA)
         IF(C3.NE.0.0)THEN
          CALL GETARGS(LISTTA,I1,I2)
          CALL F2TAU(ICORE(I020),ICORE(IOFFT1(1,I1)),
     &                ICORE(IOFFT1(1,I2)),DSSYTA,NMSYTA,
     &                POP(1,I1),POP(1,I2),VRT(1,I1),VRT(1,I2),
     &                IRREP,TWO,TAUTYP1)
         ENDIF
         CALL CNTRCT(ICORE(I000),ICORE(I010),ICORE(I020),
     &               DISSYQ,NUMSYQ,DSSYTA,NMSYTA,DSSYWA,NMSYWA,
     &               IRREP,LISTWA,LISTWA,LISTTA,'WxT',X,C4,0)
         IF(UCC) THEN
c&          CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
c&          CALL DT(ONE,ICORE(I000),DISSYQ,NUMSYQ,'EXT',icore(i030))
          CALL DT(TWO,ICORE(I000),DISSYQ,NUMSYQ,'ADD',icore(i030))
         ENDIF  
        ENDIF
        CALL SUMSYM2(ICORE(I000),ICORE(I010),NSIZE,1,IRREP,LISTQ)
300    CONTINUE
      ENDIF
      RETURN
      END
