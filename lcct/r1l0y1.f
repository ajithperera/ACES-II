      SUBROUTINE R1L0Y1(ICORE,MAXCOR,IUHF,LISTR1,LISTR1OFF)
C
C Y1A(a,i) = R(em)*W(ea,mi)
C
C NOTE THAT ONLY THE IRREPX DISTRIBUTIONS OF (ai) and (em) CAN CONTRIBUTE HERE
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,TWO
      CHARACTER*4 SPCASE(2)
      DIMENSION ICORE(MAXCOR),I0R(2),I0Y(2)
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA SPCASE /'AAAA','BBBB'/
      DATA ONE,ONEM,TWO,ZILCH/1.0D0,-1.0D0,2.0D0,0.0D0/
C

      I0R(1)=1
      CALL GETLST(ICORE(I0R(1)),1,1,1,1+LISTR1OFF,LISTR1)
      IF(IUHF.NE.0)THEN
       I0R(2)=I0R(1)+IINTFP*IRPDPD(IRREPX,9)
       CALL GETLST(ICORE(I0R(2)),1,1,1,2+LISTR1OFF,LISTR1)
      ELSE
       I0R(2)=I0R(1)
      ENDIF
      I0Y(1)=I0R(2)+IINTFP*IRPDPD(IRREPX,10)
      IF(IUHF.NE.0)THEN
       I0Y(2)=I0Y(1)+IINTFP*NT(1)
      ELSE
       I0Y(2)=I0Y(1)
      ENDIF
      I000=I0Y(2)+IINTFP*NT(2)
      MXCOR=MAXCOR-I000+1
      IOFFLIST = 200
      IF(IUHF.EQ.0)THEN
C
C SPIN ADAPTED RHF CODE.
C
C  Q(b,j) = R(EM)*[2*W(Eb,Mj)-W(Eb,Jm)]
C
C FIRST FORM 2*W(Eb,Mj) - W(Eb,Jm) AND STORE IN A W(EM,bj) MATRIX
C
       LISTW1=18
       LISTW2=21
       DISSYW=IRPDPD(IRREPX,ISYTYP(1,LISTW1))
       NUMDSW=IRPDPD(IRREPX,ISYTYP(2,LISTW1))
       I010=I000+IINTFP*DISSYW*NUMDSW
       I020=I010+IINTFP*DISSYW*NUMDSW
       IF(I020.GE.MAXCOR) CALL INSMEM('R1L0Y1',I020,MAXCOR)
       CALL GETLST(ICORE(I000),1,NUMDSW,1,IRREPX,LISTW1)
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREPX,LISTW2)
       CALL SSCAL (NUMDSW*DISSYW,TWO,ICORE(I000),1)
       CALL SAXPY (NUMDSW*DISSYW,ONEM,ICORE(I010),1,ICORE(I000),1)
C
C CALCULATE R(EM)*W(EM,bj)=Q(bj)
C
       CALL XGEMM('N','N',1,NUMDSW,DISSYW,ONE,ICORE(I0R(1)),
     &            1,ICORE(I000),DISSYW,ZILCH,ICORE(I0Y(1)),1)
C Store as F(en)
       call updmoi(1,nt(1),1,93+iofflist,0,0)
       CALL PUTLST(ICORE(I0Y(1)),1,1,1,1,93+IOFFLIST)
C Augment Y
       CALL GETLST(ICORE(I000),1,1,1,3,90)
       CALL SAXPY (NT(1),ONE,ICORE(I000),1,ICORE(I0Y(1)),1)
       CALL PUTLST(ICORE(I0Y(1)),1,1,1,3,90)
C
      ELSE
C
C UHF CODE, FIRST THE AAAA AND BBBB SPIN CASES
C
C  Y(A,I) = R(EM) * W(EA,MI) + R(em) * W(eA,mI)
C
       DO 100 ISPIN=1,2
C
        LISTW1=18+ISPIN
        LISTW2=16+ISPIN
        DISSYW1=IRPDPD(IRREPX,ISYTYP(1,LISTW1))
        NUMDSW1=IRPDPD(IRREPX,ISYTYP(2,LISTW1))
        DISSYW2=IRPDPD(IRREPX,ISYTYP(1,LISTW2))
        NUMDSW2=IRPDPD(IRREPX,ISYTYP(2,LISTW2))

        IEND=I000+IINTFP*MAX(NUMDSW1*DISSYW1,NUMDSW2*DISSYW2)
        IF(IEND.GE.MAXCOR) CALL INSMEM('R1L0Y1',IEND,MAXCOR)
C
C CALCULATE R(EM)*W(EM,BJ) = Q(BJ)
C
        CALL GETLST(ICORE(I000),1,NUMDSW1,1,IRREPX,LISTW1)
C
        CALL XGEMM('N','N',1,NUMDSW1,DISSYW1,ONE,ICORE(I0R(ISPIN)),1,
     &             ICORE(I000),DISSYW1,ZILCH,ICORE(I0Y(ISPIN)),1)
C
C CALCULATE R(em)*W(em,BJ) => Q(BJ)
C
        CALL GETLST(ICORE(I000),1,NUMDSW2,1,IRREPX,LISTW2)
C
        CALL XGEMM('N','N',1,NUMDSW2,DISSYW2,ONE,ICORE(I0R(3-ISPIN)),1,
     &             ICORE(I000),DISSYW2,ONE,ICORE(I0Y(ISPIN)),1)

C Store as F(en)
        call updmoi(1,nt(ispin),ispin,93+iofflist,0,0)
        CALL PUTLST(ICORE(I0Y(ISPIN)),1,1,1,ISPIN,93+IOFFLIST)
C Augment Y
        CALL GETLST(ICORE(I000),1,1,1,2+ISPIN,90)
        CALL SAXPY (NT(ISPIN),ONE,ICORE(I000),1,ICORE(I0Y(ISPIN)),1)
        CALL PUTLST(ICORE(I0Y(ISPIN)),1,1,1,2+ISPIN,90)

100    CONTINUE
C
      ENDIF
C
      RETURN
      END
