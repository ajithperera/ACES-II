      SUBROUTINE DHBIAJK4_R(ICORE,MAXCOR,IUHF,IRREPT,IRREPW,LISTT,
     &                    LISTTOFF,LISTW0,LISTZ0)
C
C CALCULATES THE CONTRACTION
C
C    Z(IA,JK) = T(AM) * W(IM,JK)
C
C FOR EITHER DIFFERENTIATED OR UNDIFFERENTIATED INTEGRALS
C
C
C CONTRACTION :  T(AM)*W(IM,JK) [ISPIN=1,2]
C                T(AM)*W(Mi,Kj) [ISPIN=3]
C                T(am)*W(Im,Jk) [ISPIN=4]
C
CEND
      IMPLICIT INTEGER (A-Z)
      DIMENSION ICORE(MAXCOR),I0T(2)
      DOUBLE PRECISION ONE,ONEM,ZILCH
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      IRREPZ=DIRPRD(IRREPT,IRREPW)
      I0T(1)=1
      I0T(2)=I0T(1)+IINTFP*IRPDPD(IRREPT,9)*IUHF
      I000  =I0T(2)+IINTFP*IRPDPD(IRREPT,10)
      CALL GETLST(ICORE(I0T(1)),1,1,1,1+LISTTOFF,LISTT)
      IF(IUHF.NE.0)CALL GETLST(ICORE(I0T(2)),1,1,1,2+LISTTOFF,LISTT)
      DO 10 ISPIN=4,4-3*IUHF,-1
       LISTW=LISTW0+MIN(3,ISPIN)
       LISTZ=LISTZ0+ISPIN
       IF(ISPIN.LE.2)THEN
        ISPINT=ISPIN
        ISPINI=ISPIN
        WTYPE =20+ISPIN
        ZTYPE =15+ISPIN
       ELSEIF(ISPIN.EQ.3)THEN
        ISPINT=1
        ISPINI=2
        WTYPE=24
        ZTYPE=25
       ELSEIF(ISPIN.EQ.4)THEN
        ISPINT=2
        ISPINI=1
        WTYPE =14
        ZTYPE =18
       ENDIF
C
       DO 20 IRREPZR=1,NIRREP
        IRREPZL=DIRPRD(IRREPZR,IRREPZ)
        IRREPWR=IRREPZR
        IRREPWL=DIRPRD(IRREPWR,IRREPW)
        DISSYW=IRPDPD(IRREPWL,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREPWR,ISYTYP(2,LISTW))
        DISSYZ=IRPDPD(IRREPZR,ISYTYP(1,LISTZ))
        NUMDSZ=IRPDPD(IRREPZL,ISYTYP(2,LISTZ))
        IF(ISPIN.LE.2)THEN
         DISSYWX=IRPDPD(IRREPWL,20+ISPIN)
        ELSE
         DISSYWX=DISSYW
        ENDIF
        MAXTMP=MAX(DISSYWX,NUMDSW,DISSYZ,NUMDSZ)
        I010=I000+IINTFP*MAX(NUMDSW*DISSYWX,NUMDSZ*DISSYZ)
        I020=I010+IINTFP*NUMDSW*DISSYWX
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        CALL GETLST(ICORE(I000),1,NUMDSW,1,IRREPWR,LISTW)
        CALL TRANSP(ICORE(I000),ICORE(I010),NUMDSW,DISSYW)
        IF(ISPIN.EQ.3)THEN
         CALL SYMTR1(IRREPWL,POP(1,1),POP(1,2),NUMDSW,ICORE(I010),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ELSEIF(ISPIN.LE.2)THEN
         CALL SYMEXP(IRREPWL,POP(1,ISPIN),NUMDSW,ICORE(I010))
c         CALL VMINUS(ICORE(I010),DISSYWX*NUMDSW)
        ENDIF
C
C DO CONTRACTION : Z(JK,IA) <= W(JKI,M)*T(AM)
C
        DO 30 IRREPA=1,NIRREP
         IRREPM=DIRPRD(IRREPA,IRREPT)
         IRREPI=DIRPRD(IRREPM,IRREPWL)
         NUMA=VRT(IRREPA,ISPINT)
         NUMI=POP(IRREPI,ISPINI)
         NUMM=POP(IRREPM,ISPINT)
         NROW=DISSYZ*NUMI
         NCOL=NUMA
         NSUM=NUMM
         IOFFT=I0T(ISPINT)+IINTFP*(ISYMOFF(IRREPM,IRREPT,8+ISPINT)-1)
         IOFFW=I010+IINTFP*NUMDSW*(ISYMOFF(IRREPM,IRREPWL,WTYPE)-1)
         IOFFZ=I000+IINTFP*DISSYZ*(ISYMOFF(IRREPA,IRREPZL,ZTYPE)-1)
         CALL XGEMM('N','T',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NROW,
     &              ICORE(IOFFT),NUMA,ZILCH,ICORE(IOFFZ),NROW)
30      CONTINUE
C
        IF(ISPIN.EQ.3)THEN
         CALL SYMTR1(IRREPZL,POP(1,2),VRT(1,1),DISSYZ,ICORE(I000),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
C
        CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPZL,LISTZ)
        CALL SAXPY (NUMDSZ*DISSYZ,ONEM,ICORE(I000),1,ICORE(I010),1)
        CALL PUTLST(ICORE(I010),1,NUMDSZ,1,IRREPZL,LISTZ)
C
20     CONTINUE
C
10    CONTINUE
C
      RETURN
      END
