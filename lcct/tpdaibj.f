      SUBROUTINE TPDAIBJ(ICORE,MAXCOR,IUHF,LISTL1,LISTL1OFF,LISTL2RS,
     &   LISTR1,LISTR1OFF,LISTR2RS)
      IMPLICIT INTEGER (A-Z)
      LOGICAL MBPT2,CC
      LOGICAL SS, SD, DS, DD
      DOUBLE PRECISION ONE,ONEM,ZILCH,TWO
      DIMENSION ICORE(MAXCOR),I0R(2),I0L(2)
C
C DRIVER PROGRAM FOR THE G(AI,BJ) TERMS)
C
CEND
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/REFTYPE/MBPT2,CC
      COMMON/DRVHBAR/SS, SD, DS, DD
C
      DATA ZILCH,ONE,ONEM /0.0D0,1.0D0,-1.0D0/
C
C READ IN R1, L1 AND T1 AMPLITUDES
C
      I0L(1)=1
      I0L(2)=I0L(1)+IRPDPD(IRREPX,9)*IINTFP*IUHF
      I0R(1)=I0L(2)+IRPDPD(IRREPX,10)*IINTFP
      I0R(2)=I0R(1)+IRPDPD(IRREPX,9)*IINTFP*IUHF
      ISTART=I0R(2)+IRPDPD(IRREPX,10)*IINTFP
C
c      CALL GETLST(ICORE(I0L(1)),1,1,1,1,490)
c      CALL GETLST(ICORE(I0R(1)),1,1,1,3,490)
      CALL GETLST(ICORE(I0L(1)),1,1,1,LISTL1OFF+1,LISTL1)
      CALL GETLST(ICORE(I0R(1)),1,1,1,LISTR1OFF+1,LISTR1)
      IF(IUHF.EQ.1) THEN
c       CALL GETLST(ICORE(I0L(2)),1,1,1,2,490)
c       CALL GETLST(ICORE(I0R(2)),1,1,1,4,490)
       CALL GETLST(ICORE(I0L(2)),1,1,1,LISTL1OFF+2,LISTL1)
       CALL GETLST(ICORE(I0R(2)),1,1,1,LISTR1OFF+2,LISTR1)
      ENDIF
C
      I000=ISTART
      MXCOR=MAXCOR-ISTART+1
C
      IF(IUHF.EQ.1) THEN
       CALL NEWTYP2(1,56,9,10,.TRUE.)
       CALL NEWTYP2(1,57,10,9,.TRUE.)
      ENDIF
C
      CALL R2L2RNGD(ICORE(ISTART),MXCOR,IUHF,ZILCH,.FALSE.,LISTL2RS,
     &   LISTR2RS)
C
      IF(IUHF.EQ.1) THEN
       CALL NEWTYP2(IRREPX,416,9,10,.TRUE.)
       CALL NEWTYP2(IRREPX,417,10,9,.TRUE.)
      ENDIF
C
      CALL T2L2RNGD2(ICORE(ISTART),MXCOR,IUHF,ZILCH,LISTL2RS)
C
C
C ADD DISCO CONTRIBUTIONS TO EXISTING R2L2 STUFF ON DISK.
C
      DO 5 IRREP=1,NIRREP
       DO 20 ISPIN=1,1+IUHF
        LISTZ=122+ISPIN
        LISTG=53+ISPIN
        DISSYG=IRPDPD(IRREP,ISYTYP(1,LISTG))
        NUMDSG=IRPDPD(IRREP,ISYTYP(2,LISTG))
        IF (CC .OR. DD) THEN
          CALL GETLST(ICORE(I000),1,NUMDSG,1,IRREP,LISTG)
        ELSE
          CALL ZERO(ICORE(I000),IINTFP*DISSYG*NUMDSG)
        ENDIF
        IF(IRREP.EQ.IRREPX)THEN
         CALL XGEMM('N','N',DISSYG,NUMDSG,1,ONEM,ICORE(I0L(ISPIN)),
     &              DISSYG,ICORE(I0R(ISPIN)),1,ONE,ICORE(I000),DISSYG)
        ENDIF
        CALL PUTLST(ICORE(I000),1,NUMDSG,1,IRREP,LISTZ)
20     CONTINUE
C
       DO 30 ISPIN=1,1+IUHF
        LISTZ=119-ISPIN
        LISTG=55+ISPIN
        DISSYG=IRPDPD(IRREP,ISYTYP(1,LISTG))
        NUMDSG=IRPDPD(IRREP,ISYTYP(2,LISTG))
        IF (CC .OR. DD) THEN
          CALL GETLST(ICORE(I000),1,NUMDSG,1,IRREP,LISTG)
        ELSE
          CALL ZERO(ICORE(I000),IINTFP*DISSYG*NUMDSG)
        ENDIF
        IF(IRREP.EQ.IRREPX)THEN
         CALL XGEMM('N','N',DISSYG,NUMDSG,1,ONE,ICORE(I0L(ISPIN)),
     &              DISSYG,ICORE(I0R(3-ISPIN)),1,ONE,ICORE(I000),
     &              DISSYG)
        ENDIF
        CALL PUTLST(ICORE(I000),1,NUMDSG,1,IRREP,LISTZ)
30     CONTINUE
C
5     CONTINUE
C
      DO 40 ISPIN=1,1+IUHF
       LISTG=57+ISPIN
       LISTZ=124+ISPIN
       IF (CC .OR. DD) THEN
         CALL GETALL(ICORE(I000),MXCOR,1,LISTG)
         CALL PUTALL(ICORE(I000),1,1,LISTZ)
       ELSE
         CALL ZEROLIST(ICORE(I000),MXCOR,LISTZ)
       ENDIF
40    CONTINUE
C
C CALCULATE DISCO ENERGY CONTRIBUTION
C
      two=0.0d0
      CALL CHECKGAM(ICORE(I000),23,123,TWO)
      CALL CHECKGAM(ICORE(I000),25,125,TWO)
      CALL CHECKGAM(ICORE(I000),18,118,TWO)
      IF(IUHF.NE.0) THEN
       CALL CHECKGAM(ICORE(I000),24,124,TWO)
       CALL CHECKGAM(ICORE(I000),26,126,TWO)
       CALL CHECKGAM(ICORE(I000),17,117,TWO)
      ENDIF
C
C EVALUATE OTHER CONTRIBUTIONS
C
      I000 = 1
C Fully contracted R
c      IF (CC) CALL TPDAIBJ1(ICORE(I000),MAXCOR,IUHF,LISTL2RS,LISTR1,
c     &   LISTR1OFF)
      CALL CHECKGAM(ICORE(I000),23,123,TWO)
      CALL CHECKGAM(ICORE(I000),25,125,TWO)
      CALL CHECKGAM(ICORE(I000),18,118,TWO)
      IF(IUHF.NE.0) THEN
       CALL CHECKGAM(ICORE(I000),24,124,TWO)
       CALL CHECKGAM(ICORE(I000),26,126,TWO)
       CALL CHECKGAM(ICORE(I000),17,117,TWO)
      ENDIF
      IF (CC) CALL TPDAIBJ2(ICORE(I000),MAXCOR,IUHF,LISTL2RS,LISTR1,
     &   LISTR1OFF)
      CALL CHECKGAM(ICORE(I000),23,123,TWO)
      CALL CHECKGAM(ICORE(I000),25,125,TWO)
      CALL CHECKGAM(ICORE(I000),18,118,TWO)
      IF(IUHF.NE.0) THEN
       CALL CHECKGAM(ICORE(I000),24,124,TWO)
       CALL CHECKGAM(ICORE(I000),26,126,TWO)
       CALL CHECKGAM(ICORE(I000),17,117,TWO)
      ENDIF
      IF (CC) CALL TPDAIBJ3(ICORE(I000),MAXCOR,IUHF,LISTL2RS,LISTR1,
     &   LISTR1OFF)
      IF(IUHF.EQ.0)CALL QUIKAA(ICORE(I000),MAXCOR)
      TWO=2.0D0/DFLOAT(1+IUHF)
      call sym1718(icore(i000),maxcor,iuhf,r0)
      CALL CHECKGAM(ICORE(I000),23,123,TWO)
      CALL CHECKGAM(ICORE(I000),25,125,TWO)
      CALL CHECKGAM(ICORE(I000),18,118,TWO)
      IF(IUHF.NE.0) THEN
       CALL CHECKGAM(ICORE(I000),24,124,TWO)
       CALL CHECKGAM(ICORE(I000),26,126,TWO)
       CALL CHECKGAM(ICORE(I000),17,117,TWO)
      ENDIF
C
      RETURN
      END
