      SUBROUTINE RNGINT(ICORE,MAXCOR,IUHF,IRREPX,LISTL2,LISTL2RS,LISTR2,
     &   LISTR2RS,LISTZRS,LISTZRS2)
C
C THIS ROUTINE CALCULATES THE FOLLOWING RING INTERMEDIATES FOR
C EOM-CC METHODS:
C
C  R(AI,EM)*L(EM,BJ) + R(AI,em)*L(em,BJ) = Z(AI,BJ)  -> LIST LISTZRS    [UHF ONLY]
C  R(ai,em)*L(em,bj) + R(ai,EM)*L(EM,bj) = Z(ai,bj)  -> LIST LISTZRS+1  [UHF ONLY]
C  R(AI,em)*L(em,bj) + R(AI,EM)*L(EM,bj) = Z(AI,bj)  -> LIST LISTZRS+3
C  R(ai,EM)*L(EM,BJ) + R(ai,em)*L(em,BJ) = Z(ai,BJ)  -> LIST LISTZRS+2  [UHF ONLY]
C  R(Ai,eM)*L(eM,Bj)                     = Z(Ai,Bj)  -> LIST LISTZRS2
C  R(aI,Em)*L(Em,bJ)                     = Z(aI,bJ)  -> LIST LISTZRS2+1 [UHF ONLY]
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH
      DIMENSION ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
C
      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      CALL RESORT(ICORE,MAXCOR,IUHF,IRREPX,LISTL2,LISTL2RS)
      CALL RESORT(ICORE,MAXCOR,IUHF,IRREPX,LISTR2,LISTR2RS)
      IF(IUHF.NE.0)THEN
C
C DO AAAA AND BBBB SPIN CASES
C
       DO 10 ISPIN=1,2
        DO 11 IRREPR=1,NIRREP 
         IRREPL=DIRPRD(IRREPR,IRREPX)
         LISTZ=LISTZRS-1+ISPIN
         DISSYZ=IRPDPD(IRREPR,ISYTYP(1,LISTZ))
         NUMDSZ=IRPDPD(IRREPR,ISYTYP(2,LISTZ))
         I000=1
         I010=I000+IINTFP*DISSYZ*NUMDSZ
C
C R(AI,EM)*L(EM,BJ)  and R(ai,em)*L(em,bj) CONTRACTIONS
C
         LISTL=LISTL2RS-1+ISPIN
         LISTR=LISTR2RS-1+ISPIN
         DISSYR=IRPDPD(IRREPR,ISYTYP(1,LISTR)) 
         NUMDSR=IRPDPD(IRREPL,ISYTYP(2,LISTR)) 
         DISSYL=IRPDPD(IRREPL,ISYTYP(1,LISTL)) 
         NUMDSL=IRPDPD(IRREPR,ISYTYP(2,LISTL)) 
         I020=I010+IINTFP*DISSYR*NUMDSR
         I030=I020+IINTFP*DISSYL*NUMDSL
         CALL GETLST(ICORE(I010),1,NUMDSR,1,IRREPL,LISTR)
         CALL GETLST(ICORE(I020),1,NUMDSL,1,IRREPR,LISTL)
         CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYL,ONE,ICORE(I010),
     &              DISSYR,ICORE(I020),DISSYL,ZILCH,ICORE(I000),DISSYZ)
C
C R(AI,em)*L(em,BJ)  and R(ai,EM)*L(EM,bj) CONTRACTIONS
C
         LISTL=LISTL2RS+1+ISPIN
         LISTR=LISTR2RS+4-ISPIN
         DISSYR=IRPDPD(IRREPR,ISYTYP(1,LISTR)) 
         NUMDSR=IRPDPD(IRREPL,ISYTYP(2,LISTR)) 
         DISSYL=IRPDPD(IRREPL,ISYTYP(1,LISTL)) 
         NUMDSL=IRPDPD(IRREPR,ISYTYP(2,LISTL)) 
         I020=I010+IINTFP*DISSYR*NUMDSR
         I030=I020+IINTFP*DISSYL*NUMDSL
         CALL GETLST(ICORE(I010),1,NUMDSR,1,IRREPL,LISTR)
         CALL GETLST(ICORE(I020),1,NUMDSL,1,IRREPR,LISTL)
         CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYL,ONE,ICORE(I010),
     &              DISSYR,ICORE(I020),DISSYL,ONE,ICORE(I000),DISSYZ)
C
         CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPR,LISTZ)
C
11      CONTINUE
10     CONTINUE
C
      ENDIF
C 
C  R(AI,em)*L(em,bj) + R(AI,EM)*L(EM,bj) = Z(AI,bj)  -> LIST 137
C  R(ai,EM)*L(EM,BJ) + R(ai,em)*L(em,BJ) = Z(ai,BJ)  -> LIST 136
C        
      DO 20 ISPIN=1,1+IUHF
       DO 21 IRREPR=1,NIRREP 
        IRREPL=DIRPRD(IRREPR,IRREPX)
        LISTZ=LISTZRS+4-ISPIN
        DISSYZ=IRPDPD(IRREPR,ISYTYP(1,LISTZ))
        NUMDSZ=IRPDPD(IRREPR,ISYTYP(2,LISTZ))
        I000=1
        I010=I000+IINTFP*DISSYZ*NUMDSZ
C
C R(AI,em)*L(em,bj) and R(ai,EM)*L(EM,BJ) CONTRACTIONS
C
        LISTL=LISTL2RS+2-ISPIN
        LISTR=LISTR2RS+4-ISPIN
        DISSYR=IRPDPD(IRREPR,ISYTYP(1,LISTR)) 
        NUMDSR=IRPDPD(IRREPL,ISYTYP(2,LISTR)) 
        DISSYL=IRPDPD(IRREPL,ISYTYP(1,LISTL)) 
        NUMDSL=IRPDPD(IRREPR,ISYTYP(2,LISTL)) 
        I020=I010+IINTFP*DISSYR*NUMDSR
        I030=I020+IINTFP*DISSYL*NUMDSL
        CALL GETLST(ICORE(I010),1,NUMDSR,1,IRREPL,LISTR)
        CALL GETLST(ICORE(I020),1,NUMDSL,1,IRREPR,LISTL)
        CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYL,ONEM,ICORE(I010),
     &             DISSYR,ICORE(I020),DISSYL,ZILCH,ICORE(I000),DISSYZ)
C
C R(AI,EM)*L(EM,bj) and R(ai,em)*L(em,BJ) CONTRACTIONS
C
        LISTL=LISTL2RS+4-ISPIN
        LISTR=LISTR2RS-1+ISPIN
        DISSYR=IRPDPD(IRREPR,ISYTYP(1,LISTR)) 
        NUMDSR=IRPDPD(IRREPL,ISYTYP(2,LISTR)) 
        DISSYL=IRPDPD(IRREPL,ISYTYP(1,LISTL)) 
        NUMDSL=IRPDPD(IRREPR,ISYTYP(2,LISTL)) 
        I020=I010+IINTFP*DISSYR*NUMDSR
        I030=I020+IINTFP*DISSYL*NUMDSL
        CALL GETLST(ICORE(I010),1,NUMDSR,1,IRREPL,LISTR)
        CALL GETLST(ICORE(I020),1,NUMDSL,1,IRREPR,LISTL)
        CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYL,ONEM,ICORE(I010),
     &             DISSYR,ICORE(I020),DISSYL,ONE,ICORE(I000),DISSYZ)
C 
        CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPR,LISTZ)
C
21     CONTINUE
20    CONTINUE
C
C  R(Ai,eM)*L(eM,Bj)                     = Z(Ai,Bj)  -> LIST 139
C  R(aI,Em)*L(Em,bJ)                     = Z(aI,bJ)  -> LIST 138 [UHF ONLY]
C
      DO 30 ISPIN=1,1+IUHF
       DO 31 IRREPR=1,NIRREP 
        IRREPL=DIRPRD(IRREPR,IRREPX)
        LISTZ=LISTZRS2-1+ISPIN
        DISSYZ=IRPDPD(IRREPR,ISYTYP(1,LISTZ))
        NUMDSZ=IRPDPD(IRREPR,ISYTYP(2,LISTZ))
        I000=1
        I010=I000+IINTFP*DISSYZ*NUMDSZ
C
C R(Ai,eM)*L(eM,Bj) and R(aI,Em)*L(Em,bJ)
C
        LISTL=LISTL2RS+3+ISPIN
        LISTR=LISTR2RS+6-ISPIN
        DISSYR=IRPDPD(IRREPR,ISYTYP(1,LISTR)) 
        NUMDSR=IRPDPD(IRREPL,ISYTYP(2,LISTR)) 
        DISSYL=IRPDPD(IRREPL,ISYTYP(1,LISTL)) 
        NUMDSL=IRPDPD(IRREPR,ISYTYP(2,LISTL)) 
        I020=I010+IINTFP*DISSYR*NUMDSR
        I030=I020+IINTFP*DISSYL*NUMDSL
        CALL GETLST(ICORE(I010),1,NUMDSR,1,IRREPL,LISTR)
        CALL GETLST(ICORE(I020),1,NUMDSL,1,IRREPR,LISTL)
        CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYL,ONE,ICORE(I010),
     &             DISSYR,ICORE(I020),DISSYL,ZILCH,ICORE(I000),DISSYZ)
C 
        CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPR,LISTZ)
C
31     CONTINUE
30    CONTINUE
C
      RETURN
      END
