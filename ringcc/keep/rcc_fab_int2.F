      SUBROUTINE RCC_FAB_INT2(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE TERM
C
C  P(AB) SUM E T(IJ,AE) F(E,B)
C
C USING SYMMETRY PACKED ARRAYS
C 
C
C IN RHF :
C
C SUM e T(Ij,Ae) F(eb) - SUM E  T(Ij,Eb) F(EA)
C
C IN UHF
C
C SUM E T(IJ,AE) F(EB) - SUM E T(IJ,EB) F(EA)
C
C SUM e T(Ij,Ae) F(eb) - SUM E T(Ij,Eb) F(EA)
C
C SUM e T(ij,ae) F(eb) - SUM e T(ij,eb) F(ea)
C
C CODED JG JUNE/90 JULY/90
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINCC,CICALC,ROHF4,ITRFLG
      INTEGER DIRPRD,DISSYT,DISSYZ,POP,VRT
      LOGICAL AOBASIS,AOLOG
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,
     &            CC2,RCCD,DRCCD
      DIMENSION ICORE(MAXCOR)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWO
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,
     &             NF1AA,NF1BB,NF2AA,NF2BB
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /AOLOG/ AOLOG
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,
     &            CC2,RCCD,DRCCD
 
C
      EQUIVALENCE(IFLAGS(2),METHOD)
C
      DATA ONE,ONEM,HALFM /1.0D0,-1.0D0,-0.5D0/
C
      AOBASIS=IFLAGS(93).EQ.2.AND.AOLOG
C
C    CALCULATE SIZE OF F(A,E) ARRAY
C    AND GET THESE ARRAYS
C
      NFAA=NF2AA
      NFBB=NF2BB
      I0AA=MAXCOR+1-NFAA*IINTFP
      MXCOR=MAXCOR-NFAA*IINTFP
      IF(IUHF.EQ.0) THEN
       I0BB=I0AA
      ELSE
       I0BB=I0AA-NFBB*IINTFP
       MXCOR=MXCOR-NFBB*IINTFP
      ENDIF
      CALL GETLST(ICORE(I0AA),1,1,1,1,92)
      IF(IUHF.EQ.1) THEN
        CALL GETLST(ICORE(I0BB),1,1,1,2,92)
      ENDIF

C     AA AND BB SPIN CASES
C
      IF(IUHF.EQ.1) THEN
C
C      THESE CASES ARE ONLY NECCESARY IN THE UHF CASE
C      IN RHF THE AAAA AMPLITUDES ARE CALCULATED FROM
C      THE ABAB AMPLITUDES
C
       DO 100 ISPIN=1,2
C
        IF(ISPIN.EQ.1) THEN 
         I000=I0AA
        ELSE
         I000=I0BB
        ENDIF
        LISTT=ISPIN+43
        LISTZ=ISPIN+60
C
        DO 50 IRREP=1,NIRREP
C
        NVRTSQ=0
        DO 45 IRREPJ=1,NIRREP
         IRREPI=DIRPRD(IRREP,IRREPJ)
         NVRTSQ=NVRTSQ+VRT(IRREPJ,ISPIN)*VRT(IRREPI,ISPIN)
45      CONTINUE
C
C     RETRIEVE T2 AMPLITUDES AND CALCULATE THE CORRESPONDING CONTRIBUTION
C
        DISSYT=IRPDPD(IRREP,18+ISPIN)
        DISSYZ=IRPDPD(IRREP,18+ISPIN)
        NUMSYT=IRPDPD(IRREP,20+ISPIN)
        NUMSYZ=IRPDPD(IRREP,20+ISPIN)
        I001=1
        I002=I001+IINTFP*MAX(NUMSYT,NUMSYZ)*MAX(NVRTSQ,DISSYT,DISSYZ)
        I003=I002+IINTFP*MAX(NUMSYZ,NUMSYT)*MAX(NVRTSQ,DISSYZ,DISSYT)
        I004=I003+IINTFP*3*MAX(DISSYZ,DISSYT,NUMSYZ,NUMSYT)

        IF(MIN(NUMSYT,NUMSYZ,DISSYT,DISSYZ).NE.0) THEN
         IF(I004.LT.MXCOR) THEN
C
C     IN CORE VERSION
C
         CALL RCC_FEAAA1(ICORE(I001),ICORE(I002),ICORE(I002),
     &               ICORE(I001),ICORE(I000),VRT(1,ISPIN),
     &               POP(1,ISPIN),NVRTSQ,DISSYT,DISSYZ,NUMSYT,
     &               NUMSYZ,NFAA,LISTT,LISTZ,IRREP,ICORE(I003))
        ELSE
         STOP 'FEAAA1'
        ENDIF
       ENDIF
50    CONTINUE
100   CONTINUE
      ENDIF
  
      NMULT = 1
      IF (RCCD .AND. IUHF .EQ. 0) NMULT = 2
C
C      AB SPIN CASE
C
       DO IMULT = 1, NMULT
          IF (IMULT .EQ. 1) THEN
              LISTT=46
              LISTZ=63
          ELSE
              CALL GETLST(ICORE(I0AA),1,1,1,10,92)
              I0BB = I0AA
              LISTT=44
              LISTZ=61
          ENDIF

C    LOOP OVER IRREPS
C
       DO 200 IRREP=1,NIRREP
C
C    RETRIEVE AMPLITUDES AND CALCULATE CONTRIBUTION TO Z
C
        DISSYT=IRPDPD(IRREP,13)
        DISSYZ=IRPDPD(IRREP,13)
        NUMSYT=IRPDPD(IRREP,14)
        NUMSYZ=IRPDPD(IRREP,14)
        I001=1
        I002=I001+IINTFP*NUMSYT*DISSYT
        I003=I002+IINTFP*NUMSYZ*DISSYZ
        IF(MIN(NUMSYT,NUMSYZ,DISSYT,DISSYZ).NE.0) THEN
         I004=I003+IINTFP*MAX(NUMSYT,NUMSYZ,DISSYZ,DISSYT)*3
         if (I004.LT.0) call trap_intovf('FEACONT',2)
         IF(I004.LT.MXCOR) THEN
C
C       IN CORE ALGORITHM
C
         CALL RCC_FEAAB1(ICORE(I001),ICORE(I002),ICORE(I002),
     &               ICORE(I001),
     &               ICORE(I0AA),ICORE(I0BB),
     &               POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),DISSYT,
     &               DISSYZ,NUMSYT,NUMSYZ,NFAA,NFBB,
     &               LISTT,LISTZ,IRREP,IUHF,ICORE(I003))
        ELSE
C
C       OUT CORE ALGORITHM
C
        STOP 'FEAAB1'
        ENDIF
       ENDIF
200   CONTINUE
      ENDDO
      RETURN
      END
