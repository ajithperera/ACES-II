      SUBROUTINE DS16AB(ICORE,MAXCOR,ITYPE,IUHF,ICANT,NMO,IRRVEC)
C
C THIS ROUTINE DRIVES THE SORTING OF PPPP OR HHHH INTEGRALS
C  FOR THE A-B SPIN CASE.
C
CEND
C
C  CODED JULY/90   JG
C
      IMPLICIT INTEGER(A-Z)
      LOGICAL GRAD,REDUCE, COMPRESS
      CHARACTER*4 INTYPE(6)
      CHARACTER*2 SPCASE(3)
      DIMENSION ICORE(MAXCOR),IRRVEC(NMO,2)
      DIMENSION IPW(8),IPDSZ(8),IPDIS(8)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /BUFLEN/ ILNBUF
      COMMON /ABCD/ ABCDTYPE
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /FLAGS/IFLAGS(100)
      COMMON /FLAGS2/IFLAGS2(500)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON /MINTPC/REDUCE
C
      DATA INTYPE /'HHHH','PHHH','PPHH','PHPH','PPPH','PPPP'/
      DATA SPCASE /'AA','BB','AB'/

C
C  ITYPE=1  ..... HHHH INTEGRALS
C
      IF(ITYPE.EQ.1)THEN
       NORBA=NOCCO(1)
       NORBB=NOCCO(2)
       ISW1=14
       ISW2=14
       NOFFA=0
       NOFFB=0
       NWDIS=NORBA*NORBB
       NWDSZ=NWDIS
C
C  ITYPE=6  ...... PPPP INTEGRALS
C
      ELSEIF(ITYPE.EQ.6)THEN
       NORBA=NVRTO(1)
       NORBB=NVRTO(2)
       ISW1=13
       ISW2=13 
C
C  FOR RHF, WE STORE ONLY <AB//CD>  A<B C,D
C  SO WE NEED A DIFFERENT SYMMETRY VECTOR
C  TO GENERATE THE LIST
C
C  DETERMINE IF ABCD INTEGRALS ARE TO BE COMPRESSED OR NOT
C
       COMPRESS = IFLAGS2(107) .EQ. 2
       GRAD = .NOT. COMPRESS
C
       IF(IUHF.EQ.0.AND..NOT.GRAD) ISW1=5
       NOFFA=NOCCO(1)
       NOFFB=NOCCO(2)
       NWDIS=NORBA*NORBB
       NWDSZ=NWDIS 
       IF(IUHF.EQ.0.AND..NOT.GRAD) NWDSZ=NORBA*(NORBA+1)/2
      ENDIF
C
C GET INFORMATION NEEDED TO PREPARE SYMMETRY PACKED LISTS.
C (ACTUALLY, WE NEED HERE THE INVERSE SYMMETRY VECTORS,
C  SETUP3 WILL GET THOSE FOR US)
C
      CALL SETUP3(ICORE,MAXCOR,IR1,IR2,IR3,ISW1,ISW2,NWDIS,NWDSZ)
C
C   CALCULATE OFFSETS FOR W-ARRAY IN SYMMETRY PACKED VERSION
C
C    IPW ... OFFSET FOR EACH IRREP IN THE LIST OF INTEGRALS
C    IPDIS .. OFFSET FOR EACH IRREP WITHIN THE RIGHTMOST COLUMN    
C    IPDSZ .. OFFSET FOR EACH IRREP WITHIN THE LEFTMOST COLUMN
C
      IPW(1)=0
      IPDSZ(1)=0
      IPDIS(1)=0
      DO 2 IRREP=1,NIRREP-1
      IPW(IRREP+1)=IPW(IRREP)+ICORE(IR1+IRREP-1)* 
     &                        ICORE(IR1+NIRREP+IRREP-1)
      IPDSZ(IRREP+1)=IPDSZ(IRREP)+ICORE(IR1+IRREP+NIRREP-1)
      IPDIS(IRREP+1)=IPDIS(IRREP)+ICORE(IR1+IRREP-1)
2     CONTINUE
C
C  NSIZE .. TOTAL SIZE OF THE SYMMETRY PACKED LIST OF INTEGRALS
C
      NSIZE=IPW(NIRREP)+ICORE(IR1+NIRREP-1)*ICORE(IR1+2*NIRREP-1)
C
C  ALLOCATE MEMORY, TRY FIRST FOR IN CORE ALGORITHM
C
      IF(ITYPE.EQ.1.OR.ABCDTYPE.EQ.0)THEN
       IR4=IR3+NSIZE*IINTFP
       IR5=IR4+ILNBUF*IINTFP
       IR6=IR5+ILNBUF
       IF(IR6.LT.MAXCOR)THEN
        IF(IFLAGS(1).GT.1)
     &  WRITE(LUOUT,200)INTYPE(ITYPE),SPCASE(3),IR5,MAXCOR
200     FORMAT(T3,'@DS16AB-I, Sort of ',A4,A2,' will be done in core.',
     &       /,T3,' Words required:',I8,' Words available:',I8,'.')
        CALL ST16AB(ICORE(IR3),ICORE(IR4),ICORE(IR5),ICORE(IR1),
     &              ICORE(IR2),IPW,IPDIS,IPDSZ,NSIZE,NORBA,NOFFA,
     &              NOFFB,NWDIS,ITYPE,IUHF,GRAD,IRRVEC(1,1),
     &              IRRVEC(1,2))
       ELSE
        IF(ITYPE.EQ.1)THEN
         WRITE(6,3333)
3333     FORMAT(T3,'@DS16AB-F, Insufficient core to sort ijkl ',
     &             'MO integrals!')
         CALL INSMEM('DS16AB',MAXCOR,IR6)
        ENDIF
        MEMUSE=MAXCOR-IR3
        IF(REDUCE) MEMUSE=MEMUSE/2  
        CALL DABCD0(ICORE(IR3),MEMUSE,ICORE(IR1),ICORE(IR2),IPW,
     &              IPDIS,IPDSZ,NWDIS,IUHF,GRAD,NMO,IRRVEC)
       ENDIF
      ELSE
       IR4=IR3+ILNBUF*IINTFP
       IR5=IR4+ILNBUF
       MXCOR=MAXCOR-IR5+1
       CALL ST16AB2(ICORE(IR5),ICORE(IR3),ICORE(IR4),ICORE(IR1),
     &              ICORE(IR2),IPW,IPDIS,IPDSZ,MXCOR,NORBA,NOFFA,
     &              NOFFB,NWDIS,ITYPE,IUHF,
     &              IRRVEC(1,1),IRRVEC(1,2),GRAD,600)
      ENDIF
C
C  ALL DONE
C
      RETURN
      END
