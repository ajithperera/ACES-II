#include "flags.h"
      SUBROUTINE STT3AA(W,BUF,IBUF,ISYMVV,ISYMOO,ISIZVV,ISIZOO,
     &                  IOFFVV,IOFFOO,IOFFW,WFUL,
     &                  LENW,LENWF,ISPIN,IUHF,NMO,IRREPS)
C
C THIS SUBROUTINE PROCESSES THE <AB||IJ> INTEGRALS FOR SPIN CASES AAAA
C  AND BBBB, PUTS THEM INTO A SYMMETRY PACKED LIST, AND WRITES THEM TO
C  DISK AS AN ANTISYMMETRIZED SYMMETRY PACKED LIST.  THIS ROUTINE 
C  ALSO HANDLES THE ABAB SPIN CASE FOR RHF.
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER A,B,DIRPRD,POP,VRT,AND
      CHARACTER*4 SPCASE(2)
      CHARACTER*8 INAME
      CHARACTER*80 FNAME
      LOGICAL DRCCD
      DIMENSION BUF(ILNBUF),IBUF(ILNBUF),W(LENW)
      DIMENSION IRREPS(NMO,2)
      DIMENSION ISYMOO(1),ISYMVV(1),WFUL(LENWF)
      DIMENSION ISIZVV(NIRREP),ISIZOO(NIRREP),IOFFVV(NIRREP)
      DIMENSION IOFFOO(NIRREP),IOFFW(NIRREP)
C
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /BUFLEN/ ILNBUF
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /SHIFT/ ISHIFT,NDRGEO

C Parameters for parametrized CC
#include "parcc.com"

      DATA SPCASE /'AAAA','BBBB'/
C
      IUPKI(INT)=AND(INT,IALONE)
      IUPKJ(INT)=AND(ISHFT(INT,-IBITWD),IALONE)
      IUPKK(INT)=AND(ISHFT(INT,-2*IBITWD),IALONE)
      IUPKL(INT)=AND(ISHFT(INT,-3*IBITWD),IALONE)
      INDXF(I,J,N)=I+(J-1)*N
C
      NOCC=NOCCO(ISPIN)
      NVRT=NVRTO(ISPIN)
      DRCCD = (IFLAGS(h_IFLAGS_calclevel) .EQ. 49)
C
      IF(IFLAGS(1).GE.1)WRITE(LUOUT,2000)SPCASE(ISPIN)
2000  FORMAT(T3,'@STT3AA-I, Processing integral type PPHH ', 
     &       'spin case ',A4,'.')
      INAME='PPHH'//SPCASE(ISPIN)(1:2)//'  '
      CALL GFNAME(INAME,FNAME,ILENGTH)
      OPEN(UNIT=15,FILE=FNAME(1:ILENGTH),
     &FORM='UNFORMATTED',ACCESS='SEQUENTIAL',STATUS='OLD')
      CALL ZERO(W,LENW)
C
C PICK UP A BUFFER OF INTEGRALS
C
1     READ(15)BUF,IBUF,NUT
      DO 10 INT=1,NUT
       I=IUPKI(IBUF(INT))
       J=IUPKJ(IBUF(INT))
       A=IUPKK(IBUF(INT))
       B=IUPKL(IBUF(INT))
       X=BUF(INT)
       IRRI=IRREPS(I,ISPIN)
       IRRJ=IRREPS(J,ISPIN)
       IRDPD=DIRPRD(IRRI,IRRJ)
C
C GET IJ AND AB ABSOLUTE OFFSETS
C
       IOFFIJ=INDXF(I,J,NOCC)
       IOFFAB=INDXF(A,B,NVRT)
C
C NOW GET RELATIVE IJ SYMMETRY OFFSET WITHIN THE DPD BLOCK AND DO SAME
C  FOR AB
C
       IOFIJS=ISYMOO(IOFFIJ)-IOFFOO(IRDPD)
       IOFABS=ISYMVV(IOFFAB)-IOFFVV(IRDPD)
C
C NOW CALCULATE ABSOLUTE POSITION IN W VECTOR WHERE THIS ELEMENT
C  BELONGS
C
       IABSOF=IOFFW(IRDPD)
       IRELOF=INDXF(IOFABS,IOFIJS,ISIZVV(IRDPD))
       IOFF=IRELOF+IABSOF
       W(IOFF)=X
10    CONTINUE
C
C REVERSE SENSE OF A-B ; I-J AND DO IT AGAIN
C
      DO 20 INT=1,NUT
       I=IUPKI(IBUF(INT))
       J=IUPKJ(IBUF(INT))
       A=IUPKK(IBUF(INT))
       B=IUPKL(IBUF(INT))
       X=BUF(INT)
       IRRI=IRREPS(I,ISPIN)
       IRRJ=IRREPS(J,ISPIN)
       IRDPD=DIRPRD(IRRI,IRRJ)
C
C GET IJ AND AB ABSOLUTE OFFSETS
C
       IOFFIJ=INDXF(J,I,NOCC)
       IOFFAB=INDXF(B,A,NVRT)
C
C NOW GET RELATIVE IJ SYMMETRY OFFSET WITHIN THE DPD BLOCK AND DO SAME
C  FOR AB
C
       IOFIJS=ISYMOO(IOFFIJ)-IOFFOO(IRDPD)
       IOFABS=ISYMVV(IOFFAB)-IOFFVV(IRDPD)
C
C NOW CALCULATE ABSOLUTE POSITION IN W VECTOR WHERE THIS ELEMENT
C  BELONGS
C
       IABSOF=IOFFW(IRDPD)
       IRELOF=INDXF(IOFABS,IOFIJS,ISIZVV(IRDPD))
       IOFF=IRELOF+IABSOF
       W(IOFF)=X
20    CONTINUE
      IF(NUT.EQ.ILNBUF)GOTO 1
C
C WRITE THESE INTEGRALS TO DISK IF THIS IS RHF AND SAVE IN WFUL
C  FOR ANTISYMMETRIZATION OF <AI|BJ> INTEGRALS.
C
      CALL SCOPY(LENWF,W,1,WFUL,1)
      IF(IUHF.EQ.0)THEN
       CALL PUTALL(W,LENW,1,16 + ISHIFT) 
      ENDIF
CSSS      CALL CHECKSUM("WABIJ",W,LENW)
C
C Store the unpacked unsymmetrized integrals for parametrized CC orderd
C as AB,IJ. This will get reorderd to AI,BJ in rnabij.F
C 
       IF ((ISPAR .AND. COULOMB) .OR. DRCCD) THEN
CSSS          LISTWC=113+ISPIN + ISHIFT
          LISTWC=213+ISPIN + ISHIFT
          CALL PUTALL(W,LENW,1,LISTWC) 

#ifdef _DEBUG_LVLM
      Write(6,"(a,I2)") "Printing from STT3AA ordered as <ABIJ>"
CSSS      LISTW = 113+ISPIN + ISHIFT
      LISTW = 213+ISPIN + ISHIFT

      Write(6,"(a,I2,1x,a,1x,i3)")"The spin-label: ",Ispin,"list: ",
     &          listw
      ISZTOT=ISYMSZ(18+ISPIN,20+ISPIN)
      CALL GETALL(W,ISZTOT,1,213+ISPIN)
      CALL CHECKSUM("WABIJ",W,ISZTOT)
CSSS      CALL OUTPUT(W, 1,ISZTOT, 1,1, ISZTOT, 1,1)
      Write(*,*)
#endif
      ENDIF 

C NOW ANTISYMMETRIZE THE KET INDICES, FORMING W(AB,I<J).
C
      LISTW=13+ISPIN + ISHIFT 
      IOFF=1
      DO 30 IRREP=1,NIRREP
       NUMDIS=IRPDPD(IRREP,ISYTYP(2,LISTW))
       NDSSIZ=IRPDPD(IRREP,ISYTYP(1,LISTW))
#ifdef _DEBUG_LVLM
       If (ispin .eq.1)  Write(6,*) "<AB|IJ> AAAA integrals"
       If (ispin .eq.2)  Write(6,*) "<AB|IJ> BBBB integrals"
       call output(w(ioff),1,NDSSIZ,1,NUMDIS,NDSSIZ,NUMDIS,1)
#endif 
       CALL ASSYM2(IRREP,POP(1,ISPIN),ISIZVV(IRREP),W(IOFF))
CSSS       CALL CHECKSUM("INT1",W(IOFF),ISIZVV(IRREP)*NUMDIS)
 
C
C PREVIOUS CALL FREES UP SOME SPACE AT THE TOP OF THIS IRREP BLOCK
C  OF W.  USE THIS TO STORE COMPRESSED W(A<B) DISTRIBUTIONS
C
       ITMP1=IOFF
       IOFF=IOFF+ISIZOO(IRREP)*ISIZVV(IRREP)
       ITMP2=IOFF-ISIZVV(IRREP)
       DO 31 IDIS=1,NUMDIS 
        CALL SQSYM(IRREP,VRT(1,ISPIN),NDSSIZ,ISIZVV(IRREP),
     &             1,W(ITMP2),W(ITMP1))
        CALL PUTLST(W(ITMP2),IDIS,1,1,IRREP,LISTW)
CSSS        CALL CHECKSUM("INT2",W(ITMP2),NDSSIZ)
        ITMP1=ITMP1+ISIZVV(IRREP)
31     CONTINUE
30    CONTINUE
C
#ifdef _DEBUG_LVLM
      Write(6,"(a,I2)") "Printing from STT3AA ordered as <A<B||I<J>"
      LISTW = 13+ISPIN + ISHIFT
      Write(6,"(a,I2,1x,a,1x,i3)")"The spin-label: ",Ispin,"list: ",
     &          listw
      ISZTOT=ISYMSZ(1+ISPIN,2+ISPIN)
      CALL GETALL(W,ISZTOT,1,13+ISPIN)
      CALL CHECKSUM("WABIJ",W,ISZTOT)
      CALL OUTPUT(W, 1,ISZTOT, 1,1, ISZTOT, 1,1)
#endif 
      CLOSE(UNIT=15,STATUS='DELETE')
      RETURN
      END
