      SUBROUTINE DS4AA(ICORE,MAXCOR,ITYPE,IUHF,ISPIN,NMO,IRRVEC)
C
C DRIVER FOR THE PROCESSING OF <AI||BJ> INTEGRALS, SPIN CASES
C   AAAA AND BBBB.  THIS IS A LITTLE BIT TRICKY BECAUSE
C   THE ANTISYMMETRIZATION IS:
C
C      <AI||BJ> = <AI|BJ> - <AB|JI>
C
C STORED AS
C  
C      W(AJ,BI) = W(AJ,BI) - W(AB,JI)
C
C AND WE THEREFORE NEED THE FULL SET OF <AB|JI> INTEGRALS FOR EACH 
C  SPIN CASE, AND THEY MUST BE REORDERED FROM W(AB,JI) TO
C  W(AJ,BI) AS WELL.  ONE ENTRY, THE W(AB,JI) INTEGRALS ARE
C  LOCATED AT THE BOTTOM OF CORE AND THE FIRST ORDER OF BUSINESS
C  IS TO REORDER THESE.
C
CEND
      IMPLICIT INTEGER(A-Z)
      CHARACTER*4 INTYPE(6)
      CHARACTER*2 SPCASE(3)
C
      DIMENSION ICORE(MAXCOR),IRRVEC(NMO,2)
C
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /BUFLEN/ ILNBUF
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON /SHIFT/ ISHIFT,NDRGEO
C
      DATA INTYPE /'HHHH','PHHH','PPHH','PHPH','PPPH','PPPP'/
      DATA SPCASE /'AA','BB','AB'/
C
C SET POINTERS IN CORE FOR FULL EXPANDED <AB|JI> ARRAY AS WELL AS THE
C  W(AJ,BI) MATRIX WHICH IS FORMED BELOW.
C
      ISYNM1=18+ISPIN
      ISYNM2=20+ISPIN
      LENW=ISYMSZ(ISYNM1,ISYNM2)
      I000=1
      I010=I000+IINTFP*LENW
      I020=I010+IINTFP*LENW
C
C NOW REORDER FROM W(AB,JI) TO W(AJ,BI)
C
      CALL SST004(ICORE,ICORE(I010),LENW,LENW,ICORE(I020),
     &            SPCASE(ISPIN)//SPCASE(ISPIN))
C
C WRITE THESE TO DISK SINCE THEY ARE SMALL AND POTENTIALLY USEFUL.
C THEY ARE CERTAINLY WORTHWHILE TO HAVE FOR QRHF GRADIENT CALCULATIONS!
C
      CALL PUTALL(ICORE(I010),LENW,1,4+ISPIN+ISHIFT) 
C
C NOW WE HAVE WHAT WE WANT IN THE I010 POSITION.  GO ON WITH THE
C   ALLOCATION.  ALLOCATE SPACE FOR THE INTEGRAL BUFFERS
C
      I030=I020+ILNBUF*IINTFP
      I040=I030+ILNBUF
C
C
C NOW PICK UP THE REQUIRED SYMMETRY VECTORS AND SYMMETRY POPULATION
C   VECTORS.
C 
      LEN=NVRTO(ISPIN)*NOCCO(ISPIN)
      I050=I040+LEN
      I060=I050+NIRREP
      IF(ISPIN.EQ.1)THEN
       CALL GETREC(20,'JOBARC','SVAOA2I ',LEN,ICORE(I040))
       CALL GETREC(20,'JOBARC','SVAOA2X ',NIRREP,ICORE(I050))
      ELSE
       CALL GETREC(20,'JOBARC','SVBOB2I ',LEN,ICORE(I040))
       CALL GETREC(20,'JOBARC','SVBOB2X ',NIRREP,ICORE(I050))
      ENDIF
C
C NOW COMPUTE OFFSET VECTORS NEEDED FOR ROUTINE
C
      I070=I060+NIRREP
      I080=I070+NIRREP
      IOFF1=0
      IOFF2=0
      DO 20 IRREP=1,NIRREP
       ICORE(I060+IRREP-1)=IOFF1
       ICORE(I070+IRREP-1)=IOFF2
       INC=ICORE(I050+IRREP-1)
       IOFF1=IOFF1+INC
       IOFF2=IOFF2+INC*INC
20    CONTINUE
C
C NOW ALLOCATE TEMPORARY INDEX ARRAYS
C
      I090=I080+ILNBUF
      I100=I090+ILNBUF
      I110=I100+ILNBUF
      I120=I110+ILNBUF
      IF(I080.GT.MAXCOR)THEN
       CALL INSMEM('DS4AA',I080,MAXCOR)
      ENDIF
      IF(IFLAGS(1).GT.10)THEN
       WRITE(LUOUT,1002)INTYPE(ITYPE),SPCASE(ISPIN)
1002   FORMAT(T3,'@DS4AA-I, ',A4,A2,' integrals will be sorted ',
     &        'in core.')
       WRITE(LUOUT,1001)I080,MAXCOR
1001   FORMAT(T3,'   Words required: ',I8,'  Words available: ',I8)
      ENDIF
C
      CALL STT4AA(ICORE(I000),ICORE(I010),ICORE(I020),ICORE(I030),
     &            ICORE(I040),ICORE(I050),ICORE(I060),ICORE(I070),
     &            ICORE(I080),ICORE(I090),ICORE(I100),ICORE(I110),
     &            LENW,ISPIN,IUHF,NMO,IRRVEC)
C
      RETURN
      END
