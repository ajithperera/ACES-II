      SUBROUTINE ST16AA(W,W2,BUF,IBUF,NUMIRW,ISYM,IPW,IPDIS,IPDSZ,
     &                  NSIZE,ITYPE,ISPIN,
     &                  NMO,IRREPA)
C
C THIS ROUTINE DOES AN IN-CORE SORT AND SYMMETRY PACKED
C  LIST GENERATION FOR <ij|kl> OR <ab|cd> INTEGRALS (AA AND BB SPIN
C  CASES).
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,POP,VRT,AND
      CHARACTER*4 SPCASE(3)
      CHARACTER*4 INTYPE(6)
      CHARACTER*8 INAME
      CHARACTER*80 FNAME
      DIMENSION W(NSIZE),W2(1),NUMIRW(1),IPW(8),IPDSZ(8),IPDIS(8)
      DIMENSION IOFFSET(8),NORB(8),ISYM(1),BUF(ILNBUF),IBUF(ILNBUF)
      DIMENSION IRREPA(NMO,2)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON /BUFLEN/ ILNBUF
      COMMON /SYMINF/ NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NJUNK(6)
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /SHIFT/ ISHIFT,NDRGEO
      DATA INTYPE /'HHHH','PHHH','PPHH','PHPH','PPPH','PPPP'/
      DATA SPCASE /'AA  ','BB  ','AB  '/
      NNM1O2(IX)=(IX*(IX-1))/2
      IUPKI(INTX)=AND(INTX,IALONE)
      IUPKJ(INTX)=AND(ISHFT(INTX,-IBITWD),IALONE)
      IUPKK(INTX)=AND(ISHFT(INTX,-2*IBITWD),IALONE)
      IUPKL(INTX)=AND(ISHFT(INTX,-3*IBITWD),IALONE)
      INDX(I,J)=I+(J*(J-1)/2)
      IF(IFLAGS(1).GT.1)THEN
       WRITE(LUOUT,2000)INTYPE(ITYPE),SPCASE(ISPIN)
2000   FORMAT(T3,'@ST16AA-I, Processing integral type ',
     & A4,' spin case ',A2,'.')
      ENDIF
C
C  ZERO THE OUTPUT ARRAY
C
      CALL ZERO(W,NSIZE)
C
C  CALCULATE OFFSETS FOR ORBITALS (DIFFERENT FOR THE TWO TYPES)
C
      IF(ITYPE.EQ.1) THEN
       IOFFSET(1)=0
       DO 2 IRREP=1,NIRREP-1
        IOFFSET(IRREP+1)=IOFFSET(IRREP)+POP(IRREP,ISPIN)
2      CONTINUE
       DO 3 IRREP=1,NIRREP
        NORB(IRREP)=POP(IRREP,ISPIN)
3      CONTINUE
       NOFF=0
       NLIST=10+ISPIN + ISHIFT 
      ELSE IF(ITYPE.EQ.6) THEN
       IOFFSET(1)=0
       DO 4 IRREP=1,NIRREP-1
        IOFFSET(IRREP+1)=IOFFSET(IRREP)+VRT(IRREP,ISPIN)
4      CONTINUE
       DO 5 IRREP=1,NIRREP
        NORB(IRREP)=VRT(IRREP,ISPIN)
5      CONTINUE 
       NOFF=NOCCO(ISPIN)
       NLIST=230+ISPIN
      ENDIF
C
      INAME=INTYPE(ITYPE)//SPCASE(ISPIN)
      CALL GFNAME(INAME,FNAME,ILENGTH)
      OPEN(UNIT=15,FILE=FNAME(1:ILENGTH),
     &FORM='UNFORMATTED',ACCESS='SEQUENTIAL',STATUS='OLD')
C
C PICK UP INTEGRALS ONE BY ONE AND PLACE THEM IN A TRIANGULAR ARRAY.
C  <ij|kl> (OR <ab|cd>) ARE STORED i<=k;j<=l (a<=c;b<=d) IN W.
C
1     READ(15)BUF,IBUF,NUT
      DO 100 INTGRL=1,NUT
       I=IUPKI(IBUF(INTGRL))
       J=IUPKJ(IBUF(INTGRL))
       K=IUPKK(IBUF(INTGRL))
       L=IUPKL(IBUF(INTGRL))
       I1=INDX(I,K)
       I2=INDX(J,L)
       IRREPIJ=DIRPRD(IRREPA(I+NOFF,ISPIN),IRREPA(K+NOFF,ISPIN))
       IOFF=IPW(IRREPIJ)
       NN=NUMIRW(IRREPIJ+NIRREP)
       IADR1=IOFF+ISYM(I1)-IPDSZ(IRREPIJ)
     &          +NN*(ISYM(I2)-1-IPDIS(IRREPIJ))
       W(IADR1)=BUF(INTGRL)
       IADR2=IOFF+ISYM(I2)-IPDSZ(IRREPIJ)
     &          +NN*(ISYM(I1)-1-IPDIS(IRREPIJ))
       W(IADR2)=BUF(INTGRL)
100   CONTINUE
      IF(NUT.EQ.ILNBUF)GOTO 1
C
C FORM SYMMETRY-BLOCKED ANTISYMMETRIZED INTEGRALS AND WRITE THESE
C  TO DISK ONE BUFFER AT A TIME.
C
      DO 10 IRREP=1,NIRREP
       IX=0
       IY=0 
       DO 11 IRREP1=1,NIRREP
        IRREP2=DIRPRD(IRREP,IRREP1)
        IF(IRREP2.LE.IRREP1) THEN
        IOFF1=IOFFSET(IRREP1)
        NORB1=NORB(IRREP1)
        IOFF2=IOFFSET(IRREP2)
        NORB2=NORB(IRREP2)
        IF(IRREP1.EQ.IRREP2) THEN
         ISTART1=2
        ELSE
         ISTART1=1
        ENDIF
        IEND2=IOFF2+NORB2
        DO 111 I1=IOFF1+ISTART1,IOFF1+NORB1
        IF(IRREP1.EQ.IRREP2) THEN
         IEND2=I1-1
        ENDIF
        DO 111 I2=IOFF2+1,IEND2
        IY=IY+1
        DO 111 IRREP3=1,NIRREP
        IOFF3=IOFFSET(IRREP3)
        NORB3=NORB(IRREP3)
        IRREP4=DIRPRD(IRREP,IRREP3)
        IF(IRREP4.LE.IRREP3) THEN
        IOFF4=IOFFSET(IRREP4)
        NORB4=NORB(IRREP4)
        IRREP13=DIRPRD(IRREP1,IRREP3)
        IRREP23=DIRPRD(IRREP2,IRREP3)
        IF(IRREP3.EQ.IRREP4) THEN
         ISTART3=2
        ELSE
         ISTART3=1
        ENDIF
        IEND4=IOFF4+NORB4
        DO 12 I3=IOFF3+ISTART3,IOFF3+NORB3
         IF(IRREP3.EQ.IRREP4) THEN
          IEND4=I3-1
         ENDIF
         DO 12 I4=IOFF4+1,IEND4
         I13=INDX(MIN(I1,I3),MAX(I1,I3))
         I24=INDX(MIN(I2,I4),MAX(I2,I4))
         I23=INDX(MIN(I2,I3),MAX(I2,I3))
         I14=INDX(MIN(I1,I4),MAX(I1,I4))
         IOFF=IPW(IRREP13)
         NN=NUMIRW(IRREP13+NIRREP)
         IADR1=IOFF+ISYM(I13)-IPDSZ(IRREP13)
     &             +NN*(ISYM(I24)-1-IPDIS(IRREP13))
         IOFF=IPW(IRREP23)
         NN=NUMIRW(IRREP23+NIRREP)
         IADR2=IOFF+ISYM(I23)-IPDSZ(IRREP23)
     &             +NN*(ISYM(I14)-1-IPDIS(IRREP23))
         IX=IX+1
         W2(IX)=W(IADR1)-W(IADR2)
12      CONTINUE
        ENDIF
111    CONTINUE
       ENDIF
11     CONTINUE
       CALL PUTLST(W2,1,IY,2,IRREP,NLIST)
10    CONTINUE
      CLOSE(UNIT=15,STATUS='DELETE')
      RETURN
      END
