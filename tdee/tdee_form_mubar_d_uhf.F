C
      SUBROUTINE TDEE_FORM_MUBAR_D_UHF(MIJBAR,MABBAR,MIABAR,ICORE,
     &                                 MAXCOR,IUHF,IRREPX,ISIDE,
     &                                 MBAR00)
C
C SOLVES FOR THE TWO-PARTICLE PART OF THE CANONICALLY TRANSFORMED DIPOLE
C MOMENT OPERATOR
C
C           _
C           M = exp(-T) M exp (T)
C     
C   _                     _                  _
C   M(ab,ij) = T(ae,ij) * M(be) - T(ab,im) * M(mj)
C
C THE CONTRACTIONS ARE CARRIED OUT USING RING-ORDERED LISTS :
C
C   RHS(ai,bj) = - T(ai,bm) * M(mj) + T(ai,ej) * M(be) [Iside = 1]
C
C   LHS(ai,bj) = - L(ia,mb) * M(jm) + L(ia,je) * M(eb) [Iside = 2]
C
C This code is UHF reference only. Also notice that we can straightly
C use the same code for antisymmetric perturbations. 
C
      IMPLICIT INTEGER (A-Z)
      CHARACTER*4 SPCASE(2)
      DOUBLE PRECISION ONE,ONEM,ZILCH,SNRM2,HALF,TWO
      DOUBLE PRECISION MABBAR(*),MIJBAR(*),MIABAR(*)
      DOUBLE PRECISION MBAR00,SDOT
      LOGICAL RHF
C
      DIMENSION ICORE(MAXCOR),IDID(8),IOFFAB(3)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYMLOC/ ISYMOFF(8,8,25)
C
      DATA ONE  /1.0/
      DATA TWO  /1.0/
      DATA ONEM /-1.0/
      DATA ZILCH/0.0/
      DATA HALF/0.5/
      DATA SPCASE/'AAAA','BBBB'/
C     
      LSTTMP=302
      LISTT0=100*(ISIDE-1)+34
C
C LOOP OVER IRREPS 
C
      DO 100 IRREPZR=1,NIRREP
       IRREPZL=DIRPRD(IRREPZR,IRREPX)
       IRREPTR=IRREPZL
       IRREPTL=IRREPZL
       LISTT=LISTT0-1+4
       DISSYZ=IRPDPD(IRREPZL,ISYTYP(1,LISTT))
       NUMDSZ=IRPDPD(IRREPZR,ISYTYP(2,LISTT))
       DISSYT=IRPDPD(IRREPZL,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREPZL,ISYTYP(2,LISTT))
       DISSYT1=IRPDPD(IRREPZR,ISYTYP(1,LISTT))
       NUMDST1=IRPDPD(IRREPZR,ISYTYP(2,LISTT))
       MAXT=MAX(DISSYT,NUMDST,DISSYZ,NUMDSZ,DISSYT1,NUMDST1)
C
       I000=1
       I010=I000+IINTFP*NUMDSZ*DISSYZ
       I020=I010+IINTFP*MAX(NUMDST*DISSYT,NUMDST1*DISSYT1)
       I030=I020+IINTFP*IRPDPD(IRREPX,22)
       I040=I030+IINTFP*IRPDPD(IRREPX,20)
       I050=I040+IINTFP*MAXT
       I060=I050+IINTFP*MAXT
       I070=I060+IINTFP*MAXT
C 
C 07/95 Memory checks were added by Ajith
C   
       IF (I070 .GE. MAXCOR) CALL INSMEM('OPRBAR2U', I070, MAXCOR)
C
       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
C
       CALL ZERO(ICORE(I000),NUMDSZ*DISSYZ)
       IF(IRREPX .EQ. 1 .AND. ISIDE .EQ. 2) THEN
          CALL SAXPY(DISSYT*NUMDST,MBAR00,ICORE(I010),1,
     &               ICORE(I000),1)
      ENDIF
C
C CARRY OUT  -T(AI,bm) * Q(mj) CONTRACTION
C
       IOFFT0=I010
       IOFFZ0=I000
       DO 110 IRREPM=1,NIRREP
        IRREPJ=DIRPRD(IRREPM,IRREPX)
        IRREPB=DIRPRD(IRREPM,IRREPTR)
        NUMM=POP(IRREPM,2)
        NUMJ=POP(IRREPJ,2)
        NUMB=VRT(IRREPB,2)
        NROW=DISSYT*NUMB
        NCOL=NUMJ
        NSUM=NUMM
        IOFFT=IOFFT0+IINTFP*DISSYT*(ISYMOFF(IRREPM,IRREPTR,10)-1)
        IOFFZ=IOFFZ0+IINTFP*DISSYZ*(ISYMOFF(IRREPJ,IRREPZR,10)-1)
        IF(ISIDE.EQ.1)THEN
         IOFFM=1+(ISYMOFF(IRREPJ,IRREPX,22)-1)+IRPDPD(IRREPX,21)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFT),NROW,
     &              MIJBAR(IOFFM),NSUM,ONE,ICORE(IOFFZ),NROW)
        ELSEIF(ISIDE.EQ.2)THEN
         IOFFM=1+(ISYMOFF(IRREPM,IRREPX,22)-1)+IRPDPD(IRREPX,21)
         CALL XGEMM('N','T',NROW,NCOL,NSUM,ONEM,ICORE(IOFFT),NROW,
     &              MIJBAR(IOFFM),NCOL,ONE,ICORE(IOFFZ),NROW)
        ENDIF
110    CONTINUE
C
C NOW TRANSPOSE KET INDICES
C
       CALL SYMTR1(IRREPZR,VRT(1,2),POP(1,2),DISSYT,ICORE(I000),
     &             ICORE(I040),ICORE(I050),ICORE(I060))
       CALL SYMTR1(IRREPTR,VRT(1,2),POP(1,2),DISSYT,ICORE(I010),
     &             ICORE(I040),ICORE(I050),ICORE(I060))
C
C NOW CARRY OUT T(AI,je) * F(eb) CONTRACTION
C
       IOFFT0=I010
       IOFFZ0=I000
       DO 120 IRREPE=1,NIRREP
        IRREPB=DIRPRD(IRREPE,IRREPX)
        IRREPJ=DIRPRD(IRREPE,IRREPTR)
        NUMJ=POP(IRREPJ,2)
        NUME=VRT(IRREPE,2)
        NUMB=VRT(IRREPB,2)
        NROW=DISSYT*NUMJ
        NCOL=NUMB
        NSUM=NUME
        IOFFT=IOFFT0+IINTFP*DISSYT*(ISYMOFF(IRREPE,IRREPTR,17)-1)
        IOFFZ=IOFFZ0+IINTFP*DISSYZ*(ISYMOFF(IRREPB,IRREPZR,17)-1)
        IF(ISIDE.EQ.1)THEN
         IOFFM=1+(ISYMOFF(IRREPB,IRREPX,20)-1)+IRPDPD(IRREPX,19)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &              MABBAR(IOFFM),NSUM,ONE,ICORE(IOFFZ),NROW)
        ELSEIF(ISIDE.EQ.2)THEN
         IOFFM=1+(ISYMOFF(IRREPE,IRREPX,20)-1)+IRPDPD(IRREPX,19)
         CALL XGEMM('N','T',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &              MABBAR(IOFFM),NCOL,ONE,ICORE(IOFFZ),NROW)
        ENDIF
120    CONTINUE
C
C DO TRANSPOSITIONS
C
C       Z(AM,jb) -> Z(jb,AM)
C
       CALL TRANSP(ICORE(I000),ICORE(I020),NUMDSZ,DISSYZ)
c YAU : old
c      CALL ICOPY(NUMDSZ*DISSYZ*IINTFP,ICORE(I020),1,ICORE(I000),1)
c YAU : new
       CALL DCOPY(NUMDSZ*DISSYZ,ICORE(I020),1,ICORE(I000),1)
c YAU : end
       CALL GETLST(ICORE(I010),1,NUMDST1,1,IRREPZR,LISTT)   
       CALL SYMTR1(IRREPZR,VRT(1,2),POP(1,2),DISSYT1,ICORE(I010),
     &             ICORE(I040),ICORE(I050),ICORE(I060))
       CALL TRANSP(ICORE(I010),ICORE(I020),NUMDST1,DISSYT1)
c YAU : old
c      CALL ICOPY(NUMDST1*DISSYT1*IINTFP,ICORE(I020),1,ICORE(I010),1)
c YAU : new
       CALL DCOPY(NUMDST1*DISSYT1,ICORE(I020),1,ICORE(I010),1)
c YAU : end
C
C CARRY OUT  -T(jb,AM) * Q(MI) CONTRACTION
C
       IOFFT0=I010
       IOFFZ0=I000
       DO 210 IRREPM=1,NIRREP
        IRREPI=DIRPRD(IRREPM,IRREPX)
        IRREPA=DIRPRD(IRREPM,IRREPZR)
        NUMM=POP(IRREPM,1)
        NUMI=POP(IRREPI,1)
        NUMA=VRT(IRREPA,1)
        NROW=NUMDST1*NUMA
        NCOL=NUMI
        NSUM=NUMM
        IOFFT=IOFFT0+IINTFP*NUMDST1*(ISYMOFF(IRREPM,IRREPZR,9)-1)
        IOFFZ=IOFFZ0+IINTFP*NUMDSZ*(ISYMOFF(IRREPI,IRREPZL,9)-1)
        IF(ISIDE.EQ.1)THEN
         IOFFM=1+(ISYMOFF(IRREPI,IRREPX,21)-1)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFT),NROW,
     &              MIJBAR(IOFFM),NSUM,ONE,ICORE(IOFFZ),NROW)
        ELSEIF(ISIDE.EQ.2)THEN
         IOFFM=1+(ISYMOFF(IRREPM,IRREPX,21)-1)
         CALL XGEMM('N','T',NROW,NCOL,NSUM,ONEM,ICORE(IOFFT),NROW,
     &              MIJBAR(IOFFM),NCOL,ONE,ICORE(IOFFZ),NROW)
        ENDIF
210    CONTINUE
C
C NOW TRANSPOSE KET INDICES
C
       CALL SYMTR1(IRREPZL,VRT(1,1),POP(1,1),NUMDSZ,ICORE(I000),
     &             ICORE(I040),ICORE(I050),ICORE(I060))
       CALL SYMTR1(IRREPZR,VRT(1,1),POP(1,1),NUMDST1,ICORE(I010),
     &             ICORE(I040),ICORE(I050),ICORE(I060))
C
C NOW CARRY OUT T(jb,IE) * Q(EA) CONTRACTION
C
       IOFFT0=I010
       IOFFZ0=I000
       DO 220 IRREPE=1,NIRREP
        IRREPA=DIRPRD(IRREPE,IRREPX)
        IRREPI=DIRPRD(IRREPE,IRREPZR)
        NUMI=POP(IRREPI,1)
        NUME=VRT(IRREPE,1)
        NUMA=VRT(IRREPA,1)
        NROW=NUMDST1*NUMI
        NCOL=NUMA
        NSUM=NUME
        IOFFT=IOFFT0+IINTFP*NUMDST1*(ISYMOFF(IRREPE,IRREPZR,16)-1)
        IOFFZ=IOFFZ0+IINTFP*NUMDSZ*(ISYMOFF(IRREPA,IRREPZL,16)-1)
        IF(ISIDE.EQ.1)THEN
         IOFFM=1+(ISYMOFF(IRREPA,IRREPX,19)-1)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &              MABBAR(IOFFM),NSUM,ONE,ICORE(IOFFZ),NROW)
        ELSEIF(ISIDE.EQ.2)THEN
         IOFFM=1+(ISYMOFF(IRREPE,IRREPX,19)-1)
         CALL XGEMM('N','T',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &              MABBAR(IOFFM),NCOL,ONE,ICORE(IOFFZ),NROW)
        ENDIF
220    CONTINUE
C
C REORDER INCREMENTS Z(jb,IA) -> Z(IA,jb) -> Z(AI,bj)
C
       CALL TRANSP(ICORE(I000),ICORE(I010),DISSYZ,NUMDSZ)
       CALL SYMTR1(IRREPZR,POP(1,2),VRT(1,2),DISSYZ,ICORE(I010),
     &             ICORE(I040),ICORE(I050),ICORE(I060))
       CALL SYMTR3(IRREPZL,POP(1,1),VRT(1,1),DISSYZ,NUMDSZ,ICORE(I010),
     &             ICORE(I040),ICORE(I050),ICORE(I060))
C
       IF(IRREPZR .EQ. IRREPX .AND. ISIDE .EQ. 2)
     &    THEN
          CALL GETLST(ICORE(I020),1,1,1,1,190)
          CALL XGEMM ('N','N',DISSYZ,NUMDSZ,1,ONE,ICORE(I020),DISSYZ,
     &                 MIABAR(1+IRPDPD(IRREPX,9)),1,ONE,ICORE(I010),
     &                 DISSYZ)
       ENDIF 
C
       IF(IRREPZL .EQ. IRREPX .AND. ISIDE .EQ. 2) 
     &    THEN
          CALL GETLST(ICORE(I020),1,1,1,2,190)
          CALL XGEMM ('N','N',DISSYZ,NUMDSZ,1,ONE,MIABAR(1),DISSYZ,
     &                 ICORE(I020),1,ONE,ICORE(I010),DISSYZ)
       ENDIF                  
C
       CALL PUTLST(ICORE(I010),1,NUMDSZ,1,IRREPZR,LSTTMP)

100   CONTINUE
C                
C NOW REORDER INCREMENTS
C       
C        Z(AI,bj) => Z(Ab,Ij)
C
      ISIZE=IDSYMSZ(IRREPX,ISYTYP(1,LSTTMP),ISYTYP(2,LSTTMP))
      I000=1
      I010=I000+ISIZE*IINTFP
      I020=I010+ISIZE*IINTFP
C   
       IF (I020 .GE. MAXCOR) CALL INSMEM('OPRBAR2U', I020, MAXCOR)

      CALL GETALL(ICORE(I000),ISIZE,IRREPX,LSTTMP)
C
      CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &            VRT(1,2),POP(1,2),ICORE(I020),IRREPX,'1324')
C
C  PUT RESULT ON A PROPER LIST
C
#ifdef _DEBUG_LVL0
       If (iside .eq.1)  call Checksum("tdee_form_mubar_d_uhf_r(f)  :",
     +                                  icore(I010),isize,S)
       If (iside .eq.2)  call Checksum("tdee_form_mubar_d_uhf_l(f)  :",
     +                                  icore(I010),isize,S)
#endif
      IF (ISIDE .EQ. 1) THEN 
          CALL PUTALL(ICORE(I010), ISIZE, IRREPX,316)
      ELSEIF (ISIDE .EQ. 2) THEN
          CALL PUTALL(ICORE(I010), ISIZE, IRREPX,326)
      ENDIF 
C
C Z(AI,BJ) = T(AI,EJ)*M(EB) - T(AI,EM)*M(MJ) + ANTISYMMETRIZATION
C
      DO 200 ISPIN=1,2
       LSTTMP=299+ISPIN
       LISTT0=100*(ISIDE-1)+34
C
C LOOP OVER IRREPS 
C
       DO 300 IRREPZR=1,NIRREP
        IRREPZL=DIRPRD(IRREPZR,IRREPX)
        IRREPTR=IRREPZL
        IRREPTL=IRREPZL
        LISTT=LISTT0-1+ISPIN
        DISSYZ=IRPDPD(IRREPZL,ISYTYP(1,LISTT))
        NUMDSZ=IRPDPD(IRREPZR,ISYTYP(2,LISTT))
        DISSYT=IRPDPD(IRREPZL,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(IRREPZL,ISYTYP(2,LISTT))
        MAXT=MAX(DISSYT,NUMDST,DISSYZ,NUMDSZ,DISSYT1,NUMDST1)
C
        I000=1
        I010=I000+IINTFP*NUMDSZ*DISSYZ
        I020=I010+IINTFP*MAX(NUMDST*DISSYT,NUMDST1*DISSYT1)
        I030=I020+IINTFP*IRPDPD(IRREPX,22)
        I040=I030+IINTFP*IRPDPD(IRREPX,20)
        I050=I040+IINTFP*MAXT
        I060=I050+IINTFP*MAXT
        I070=I060+IINTFP*MAXT
C 
C 07/95 Memory checks were added by Ajith
C   
       IF (I070 .GE. MAXCOR) CALL INSMEM('OPRBAR2U', I070, MAXCOR)
C
C 06/2010 ISIZE was not correctly set, Ajith
C
       ISIZE=IDSYMSZ(IRREPX,ISYTYP(1,LSTTMP),ISYTYP(2,LSTTMP))
       CALL GETALL(ICORE(I000),ISIZE,IRREPX,LSTTMP)

       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
C
C CARRY OUT  -T(AI,BM) * Q(MJ) CONTRACTION
C
        IOFFT0=I010
        IOFFZ0=I000
        IOFFM0=1+(ISPIN-1)*IRPDPD(IRREPX,21)
        CALL ZERO(ICORE(I000),NUMDSZ*DISSYZ)
        TTYPE=8+ISPIN
        DO 310 IRREPM=1,NIRREP
         IRREPJ=DIRPRD(IRREPM,IRREPX)
         IRREPB=DIRPRD(IRREPM,IRREPTR)
         NUMM=POP(IRREPM,ISPIN)
         NUMJ=POP(IRREPJ,ISPIN)
         NUMB=VRT(IRREPB,ISPIN)
         NROW=DISSYT*NUMB
         NCOL=NUMJ
         NSUM=NUMM
         IOFFT=IOFFT0+IINTFP*DISSYT*(ISYMOFF(IRREPM,IRREPTR,TTYPE)-1)
         IOFFZ=IOFFZ0+IINTFP*DISSYZ*(ISYMOFF(IRREPJ,IRREPZR,TTYPE)-1)
         IF (ISIDE.EQ.1) THEN
            IOFFM=IOFFM0+(ISYMOFF(IRREPJ,IRREPX,20+ISPIN)-1)
            IF (NSUM.EQ.0) THEN
               CALL ZERO(ICORE(IOFFZ),NROW*NCOL)
            ELSE
               CALL XGEMM('N','N',NROW,NCOL,NSUM,
     &                    ONEM, ICORE(IOFFT), NROW,
     &                          MIJBAR(IOFFM),NSUM,
     &                    ZILCH,ICORE(IOFFZ), NROW)
            END IF
         ELSE
            IF (ISIDE.EQ.2) THEN
               IOFFM=IOFFM0+(ISYMOFF(IRREPM,IRREPX,20+ISPIN)-1)
               CALL XGEMM('N','T',NROW,NCOL,NSUM,
     &                    ONEM, ICORE(IOFFT), NROW,
     &                          MIJBAR(IOFFM),NCOL,
     &                    ZILCH,ICORE(IOFFZ), NROW)
            END IF
         END IF
310     CONTINUE
C
C NOW TRANSPOSE KET INDICES
C
        CALL SYMTR1(IRREPZR,VRT(1,ISPIN),POP(1,ISPIN),DISSYT,
     &              ICORE(I000),ICORE(I040),ICORE(I050),ICORE(I060))
        CALL SYMTR1(IRREPTR,VRT(1,ISPIN),POP(1,ISPIN),DISSYT,
     &              ICORE(I010),ICORE(I040),ICORE(I050),ICORE(I060))
C
C NOW CARRY OUT T(AI,JE) * F(EB) CONTRACTION
C
        IOFFT0=I010
        IOFFZ0=I000
        IOFFM0=1+(ISPIN-1)*IRPDPD(IRREPX,19)
        DO 320 IRREPE=1,NIRREP
         IRREPB=DIRPRD(IRREPE,IRREPX)
         IRREPJ=DIRPRD(IRREPE,IRREPTR)
         NUMJ=POP(IRREPJ,ISPIN)
         NUME=VRT(IRREPE,ISPIN)
         NUMB=VRT(IRREPB,ISPIN)
         NROW=DISSYT*NUMJ
         NCOL=NUMB
         NSUM=NUME
         TTYPE=15+ISPIN
         IOFFT=IOFFT0+IINTFP*DISSYT*(ISYMOFF(IRREPE,IRREPTR,TTYPE)-1)
         IOFFZ=IOFFZ0+IINTFP*DISSYZ*(ISYMOFF(IRREPB,IRREPZR,TTYPE)-1)
         IF(ISIDE.EQ.1)THEN
          IOFFM=IOFFM0+(ISYMOFF(IRREPB,IRREPX,18+ISPIN)-1)
          CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &               MABBAR(IOFFM),NSUM,ONE,ICORE(IOFFZ),NROW)
         ELSEIF(ISIDE.EQ.2)THEN
          IOFFM=IOFFM0+(ISYMOFF(IRREPE,IRREPX,18+ISPIN)-1)
          CALL XGEMM('N','T',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &               MABBAR(IOFFM),NCOL,ONE,ICORE(IOFFZ),NROW)
         ENDIF
320     CONTINUE
C
C DO TRANSPOSITION Z(AI,JB) -> Z(AI,BJ) AND WRITE TO DISK
C
        CALL SYMTR1(IRREPZR,POP(1,ISPIN),VRT(1,ISPIN),DISSYZ,
     &              ICORE(I000),ICORE(I040),ICORE(I050),ICORE(I060))
C
        IF(IRREPZR .EQ. IRREPX .AND. ISIDE .EQ. 2)
     &     THEN
           IOFFAI=1+(ISPIN-1)*IRPDPD(IRREPX,9)
           CALL GETLST(ICORE(I020),1,1,1,ISPIN,190)
           CALL XGEMM ('N','N',DISSYZ,NUMDSZ,1,-2.0D0,ICORE(I020),
     &                  DISSYZ,MIABAR(IOFFAI),1,ONE,ICORE(I000),
     &                  DISSYZ)
        ENDIF 
C
        IF(IRREPX .EQ. 1 .AND. ISIDE .EQ. 2) THEN
           CALL SYMTR1(IRREPTR,POP(1,ISPIN),VRT(1,ISPIN),DISSYT,
     &                 ICORE(I010),ICORE(I040),ICORE(I050),
     &                 ICORE(I060))
           CALL SAXPY(DISSYT*NUMDST,HALF*MBAR00,ICORE(I010),1,
     &                ICORE(I000),1)
        ENDIF
C
        CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LSTTMP)
C     
300    CONTINUE
C
       ISIZE=IDSYMSZ(IRREPX,ISYTYP(1,LSTTMP),ISYTYP(2,LSTTMP))
       ISIZE2=IDSYMSZ(IRREPX,ISYTYP(1,43+ISPIN),ISYTYP(2,43+ISPIN))
C
       I000=1
       I010=I000+ISIZE*IINTFP
       I020=I010+ISIZE*IINTFP
C 
       IF (I020 .GE. MAXCOR) CALL INSMEM('OPRBAR2U', I020, MAXCOR)

       CALL GETALL(ICORE(I000),ISIZE,IRREPX,LSTTMP)
C
       CALL SSCAL (ISIZE,-HALF,ICORE(I000),1)

       CALL DSST03I(ICORE(I000),ICORE(I010),ISIZE,ISIZE,ICORE(I020),
     &              SPCASE(ISPIN),IRREPX)
#ifdef _DEBUG_LVL0
       If (iside .eq.1)  call Checksum("tdee_form_mubar_d_uhf_r(f)  :",
     +                                  icore(I010),isize2,S)
       If (iside .eq.2)  call Checksum("tdee_form_mubar_d_uhf_l(f)  :",
     +                                  icore(I010),isize2,S)
#endif
C
C  PUT ON A PROPER LIST
C
       IF (ISIDE .EQ. 1) THEN
           CALL PUTALL(ICORE(I010),ISIZE2,IRREPX,313+ISPIN)
       ELSEIF (ISIDE .EQ. 2) THEN
           CALL PUTALL(ICORE(I010),ISIZE2,IRREPX,323+ISPIN)
       ENDIF 

200   CONTINUE

      RETURN
      END
