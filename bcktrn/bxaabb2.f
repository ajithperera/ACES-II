      SUBROUTINE BXAABB2(EVEC,BUF,BUF1,BUFTMP,LENBUF,LNBUF1,LENTMP,
     &                   IUHF,ALASKA)
C
C THIS ROUTINE TRANSFORMS ELEMENTS OF THE MO TWO-PARTICLE DENSITY
C  MATRIX TO THE ATOMIC ORBITAL BASIS.  THIS ROUTINE DEALS SPECIFICALLY
C  WITH THOSE ELEMENTS OF SYMMETRY TYPE AABB.
C
C    G(P<Q,R<S) -> G(XX,R<S) -> G(X<X,R<S) -> G(X<X,XX) -> G(X<X,X<X)
C
C  (THE SYMBOL "<" IS UNDERSTOOD TO BE "LESS THAN OR EQUAL TO" 
C   THROUGHOUT THIS ROUTINE)
C
C EVEC IS THE SYMMETRY PACKED EIGENVECTOR MATRIX AS PREPARED BY SYPKEV.
C
C REQUIRED SPIN CASES:
C             PQRS
C             ----
C             AAAA (UHF ONLY, COMBINED WITH BBAA)
C             BBBB (UHF ONLY, COMBINED WITH AABB)
C             AABB (RHF AND UHF)
C             BBAA (UHF ONLY, COMBINED WITH AAAA)
C
C MEMORY REQUIREMENTS:
C       
C       BUF   = MAX[SQUARE CANON AO LIST(IRR)] OVER ALL IRREPS.
C       BUF1  =
C       BUFTMP= 3*NAO*NAO
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL SPHHRM,MOEQAO,ALASKA
      INTEGER DIRPRD,AOPOP,MOPOP
      DIMENSION BUF(LENBUF),BUFTMP(LENTMP),EVEC(1),BUF1(LNBUF1)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /AOPOPS/ AOPOP(8),MOPOP(8),NAO,NAOSPH,NMO
      COMMON /AOOFS2/ INDAO(8,2)
      COMMON /BASTYP/ SPHHRM,MOEQAO
      DATA ONE   /1.0/
      DATA ZILCH /0.0/
      DATA FOURTH/0.25/
      NNP1O2(I)=(I*(I+1))/2
C
C  LISTG : LIST ON WHICH THE TRANSFORMED GAMMAS ARE WRITTEN BACK
C
      LISTG=2
C
C LOOP OVER THE DIFFERENT TYPES
C
      DO 1000 ITYPE=1,IUHF+1
C
      IF(ITYPE.EQ.1) THEN
C
C AABB AND BBBB SPIN CASES
C
C  LISTW : FIRST LIST PROCESSED
C  LISTW2 : SECOND LIST PROCESSED
C
       LISTW=2
       LOFFW=0
       LISTW2=7
       LOFFW2=50
       ISL=1
       ISR=2
C
      ELSE
C
       LISTW=2
       LOFFW=50
       LISTW2=7
       LOFFW2=0
       ISL=2
       ISR=1
C
      ENDIF
C
C LOOP OVER IRREP PAIRS AND DO THE TRANSFORMATION.
C
      ITHRU=0
      DO 100 IRREPR=2,NIRREP
       DO 101 IRREPL=1,IRREPR-1
        ITHRU=ITHRU+1 
        NSIZAOR=AOPOP(IRREPR)
        NSIZMOR=MOPOP(IRREPR)
        NSZTRIRA=NNP1O2(NSIZAOR)
        NSZTRIRM=NNP1O2(NSIZMOR)
        NSZFULRA=NSIZAOR*NSIZAOR
        NSZFULRM=NSIZMOR*NSIZMOR
        NSIZAOL=AOPOP(IRREPL)
        NSIZMOL=MOPOP(IRREPL)
        NSZTRILA=NNP1O2(NSIZAOL)
        NSZTRILM=NNP1O2(NSIZMOL)
        NSZFULLA=NSIZAOL*NSIZAOL
        NSZFULLM=NSIZMOL*NSIZMOL
        IF(MOEQAO .OR. ALASKA)THEN
         CALL GETLST(BUF,1,NSZTRIRM,1,LISTW,ITHRU+LOFFW)
        ELSE
         IOFF=1
         DO 5 I=1,NSZTRIRM
          CALL GETLST(BUF(IOFF),I,1,1,LISTW,ITHRU+LOFFW)
          IOFF=IOFF+NSZTRILA
5        CONTINUE
        ENDIF
C
C  CHANGE THE TYPE ONLY IN THE FIRST PASS, SINCE IN THE
C  SECOND PASSS LISTW IS DIFFERENT FROM LISTG.
C
        IF(ITYPE.EQ.1) CALL ACES_LIST_XPOSE(LISTG,ITHRU,.FALSE.)
        IOFF  =1
        IOFFB =1+NSIZAOL*NSIZAOL
        IOFFB2=IOFFB+NSIZAOL*NSIZAOL
        IOFFE =INDAO(IRREPL,ISL)
        DO 110 INDXRS=1,NSZTRIRM
C
C FIRST HALF TRANSFORM THE AMPLITUDES TO G(XX,R<S).  HALF TRANSFORMED
C  GAMMAS ARE WRITTEN BACK OVER BUF.
C                                             +
C            G(XX,R<S) = C(XP) * G(PQ,R<S) * C (XQ)
C
         CALL EXPND2(BUF(IOFF),BUFTMP(IOFFB),NSIZMOL)
         CALL SYTRAA(BUFTMP(IOFFB),EVEC(IOFFE),EVEC(IOFFE),
     &               NSIZAOL,NSIZMOL,NSIZMOL,BUFTMP(IOFFB2),BUFTMP,0)
         CALL SQUEZ2(BUFTMP,BUF(IOFF),NSIZAOL)
         IOFF=IOFF+NSZTRILA
110     CONTINUE
C
C  FOR UHF DO HERE THE AABB OR BBAA STUFF
C 
        IF(IUHF.EQ.1) THEN
        IOFF  =1
        IOFFB =1+NSIZAOL*NSIZAOL
        IOFFB2=IOFFB+NSIZAOL*NSIZAOL
        IOFFE =INDAO(IRREPL,ISR)
        DO 111 INDXRS=1,NSZTRIRM
C
C FIRST HALF TRANSFORM THE AMPLITUDES TO G(XX,R<S).  HALF TRANSFORMED
C  GAMMAS ARE WRITTEN BACK OVER BUF.
C                                             +
C            G(XX,R<S) = C(XP) * G(PQ,R<S) * C (XQ)
C
         CALL GETLST(BUF1,INDXRS,1,1,LISTW2,ITHRU+LOFFW2)
         CALL EXPND2(BUF1,BUFTMP(IOFFB),NSIZMOL)
         CALL SYTRAA(BUFTMP(IOFFB),EVEC(IOFFE),EVEC(IOFFE),
     &               NSIZAOL,NSIZMOL,NSIZMOL,BUFTMP(IOFFB2),BUFTMP,0)
         CALL SQUEZ3(BUFTMP,BUF(IOFF),NSIZAOL)
         IOFF=IOFF+NSZTRILA
111     CONTINUE
        ENDIF
C
C NOW DO SECOND HALF TRANSFORMATION, COPYING HALF-TRANSFORMED GAMMAS 
C  FROM BUF.
C                                             +
C            G(X<X,XX) = C(XR) * G(X<X,RS) * C (XS)
C
C
        IF(ITYPE.EQ.1) THEN
        IOFF =1
        IOFFB =1+NSIZAOR*NSIZAOR
        IOFFB2=IOFFB+NSIZAOR*NSIZAOR
        IOFFE =INDAO(IRREPR,ISR)
        DO 120 INDXPQ=1,NSZTRILA
         CALL SCOPY(NSZTRIRM,BUF(IOFF),NSZTRILA,BUFTMP(IOFFB2),1)
         CALL EXPND2(BUFTMP(IOFFB2),BUFTMP(IOFFB),NSIZMOR)
         CALL SYTRAA(BUFTMP(IOFFB),EVEC(IOFFE),EVEC(IOFFE),
     &               NSIZAOR,NSIZMOR,NSIZMOR,BUFTMP(IOFFB2),BUFTMP,0)
         CALL SQUEZ2(BUFTMP,BUFTMP(IOFFB),NSIZAOR)
         CALL SSCAL(NSZTRIRA,FOURTH,BUFTMP(IOFFB),1)
         CALL PUTLST(BUFTMP(IOFFB),IOFF,1,1,LISTG,ITHRU)
         IOFF=IOFF+1
120     CONTINUE
        ELSE
        IOFF =1
        IOFFB =1+NSIZAOR*NSIZAOR
        IOFFB2=IOFFB+NSIZAOR*NSIZAOR
        IOFFE =INDAO(IRREPR,ISR)
        DO 121 INDXPQ=1,NSZTRILA
         CALL SCOPY(NSZTRIRM,BUF(IOFF),NSZTRILA,BUFTMP(IOFFB2),1)
         CALL EXPND2(BUFTMP(IOFFB2),BUFTMP(IOFFB),NSIZMOR)
         CALL SYTRAA(BUFTMP(IOFFB),EVEC(IOFFE),EVEC(IOFFE),
     &               NSIZAOR,NSIZMOR,NSIZMOR,BUFTMP(IOFFB2),BUFTMP,0)
         CALL SSCAL(NSIZAOR*NSIZAOR,FOURTH,BUFTMP,1)
         CALL GETLST(BUFTMP(IOFFB),IOFF,1,1,LISTG,ITHRU)
         CALL SQUEZ3(BUFTMP,BUFTMP(IOFFB),NSIZAOR)
         CALL PUTLST(BUFTMP(IOFFB),IOFF,1,1,LISTG,ITHRU)
         IOFF=IOFF+1
121     CONTINUE
        ENDIF
101    CONTINUE
100   CONTINUE
C
1000  CONTINUE
      RETURN
      END 
