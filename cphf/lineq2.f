      SUBROUTINE LINEQ2(IRREP,NPERT,AMAT,BIAA,BIAB,BIANEWA,
     &                  BIANEWB,UPDATA,UPDATB,ASMALL,
     &                  ASQUARE,ASCALE,ICONV,EVALA,EVALB,CONV,
     &                  NA,NB,KMAX,NOCCA,NOCCB,
     &                  INCORE,ROHF)
C
C  THIS PROGRAM SOLVES THE LINEAR CPHF EQUATION
C
C  SUM A I(A(BJ,AI) + (EA-EI) DELTA(BA) DELTA(IJ)) U(A,I)  = B(B,J)
C
C  USING AN ITERATIVE EXPANSION IN A SUBSPACE SPANNED BY THE
C  VECTORS B(AI) A'**N (BJ,AI). THE METHOD HAS BEEN FIRST USED
C  BY POPLE AND COWORKERS FOR SOLVING THE CPHF-EQUATIONS.
C 
C  THIS VERSION USES EXPLICITELY SYMMETRY (ONLY THE BLOCK OF 
C  THE A-MATRIX WHICH CORRESPONDS TO IRREP 1 IS NEEDED) AND
C  IS EFFICIENTLY VECTORIZED. 
C
C  THIS IS THE VERSION FOR UHF, ROHF !
C
C  IRREP ... IRREP OF THE PERTURBATION
C  NPERT ... NUMBER OF PERTURBATIONS TREATED
C  AMAT .... CONTAINS THE MODIFIED A-MATRIX AS PROVIDED BY MKARHF
C  BIA  .... B(AI) AS INPUT, U(AI) AS OUTPUT
C  BIANEW .. SCRATCH VECTOR OF LENGTH MAX(N,2*KMAX)
C  UPDATE . CONTAINS ALL THE EXPANSION VECTOR (LENGTH KMAX*N*NPERT)
C  ASMALL .. THE A MATRIX WITHIN THE ITERATIVE SUBSPACE
C            (LENGTH KMAX**2*NPERT)
C  ASQUARE . A VECTOR OF LENGTH (KMAX+1)*LENGTH WHICH HOLDS THE NORMS OF THE 
C            EXPANSION VECTORS
C  ASCALE ..  A VECTOR OF LENGTH 2*NPERT
C  CONV ....  A VECTOR OF LENGTH 2*NPERT
C  EVALA .... EIGENVALUES (ALPHA)
C  EVALB .... EIGENVALUES (BETA)
C  CONV .... CONVERGENCE CRITERION
C  NA ....... NUMBER OF ELEMENTS IN X(AI) OR D(AI) (ALPHA)
C  NB ....... NUMBER OF ELEMENTS IN X(AI) OR D(AI) (BETA)
C  KMAX .... MAXIMUM NUMBER OF ITERATION ALLOWED IN THE ITERATIVE EXPANSION
C  NOCCA .... NUMBER OF OCCUPIED ORBITALS (ALPHA)
C  NOCCB .... NUMBER OF OCCUPIED ORBITALS (BETA)
C  INCORE ... LOGICAL VARIABLE WHICH TELLS IF INCORE ALGORITHM IS POSSIBLE
C  ROHF ..... ROHF FLAG
C
CEND
C 
C CODED AUGUST/90  JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL INCORE,ROHF
      INTEGER DIRPRD,POP,VRT
      DIMENSION DET(2)
      DIMENSION AMAT(1),BIAA(NA,NPERT), BIANEWA(NA,NPERT),
     &          UPDATA(NA,NPERT,KMAX),
     &          BIAB(NB,NPERT),BIANEWB(NB,NPERT),
     &          UPDATB(NB,NPERT,KMAX),
     &          ASMALL(KMAX,KMAX,NPERT),ASQUARE(KMAX+1,NPERT),EVALA(1),
     &          EVALB(1),ICONV(NPERT),ASCALE(NPERT)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NJUNK(6)
C
      DATA AZERO,ONE,ONEM,TWO/0.D+0,1.0D+0,-1.0D+0,2.D+0/
C
      CUTOFF=CONV*CONV
      TOL=AZERO
      N=NA+NB
C
C     CLEAR SMALL A MATRIX
C
      CALL IZERO(ICONV,NPERT)
      CALL ZERO(ASMALL,KMAX*KMAX*NPERT)
C
C     NORMALIZE INITIAL VECTOR XIA AND COPY INTIAL VECTOR TO XUPDATE
C
      DO 10 IPERT=1,NPERT
      ANORM=SDOT(NA,BIAA(1,IPERT),1,BIAA(1,IPERT),1)
      ANORM=ANORM+SDOT(NB,BIAB(1,IPERT),1,BIAB(1,IPERT),1)
C
C     DETERMINE SCALE FACTOR
C
      ASCALE(IPERT)=SQRT(ANORM)
C
C  IF INITIAL VECTOR EQUAL ZERO, WRITE WARNING
C
      IF(ASCALE(IPERT)/N.LT.CUTOFF) THEN
       WRITE(6,*) ' Warning form lineq2 : the initial vector is zero.'
       ASCALE(IPERT)=ONE
      ENDIF
C
C     SCALE INITIAL VECTOR WITH ASCALE
C
      SCALE=ONE/ASCALE(IPERT)
      CALL SSCAL(NA,SCALE,BIAA(1,IPERT),1)
      CALL SSCAL(NB,SCALE,BIAB(1,IPERT),1)
C
      ASQUARE(1,IPERT)=ONE
10    CONTINUE
C
c YAU : old
c     CALL ICOPY(IINTFP*NA*NPERT,BIAA(1,1),1,UPDATA(1,1,1),1)
c     CALL ICOPY(IINTFP*NB*NPERT,BIAB(1,1),1,UPDATB(1,1,1),1)
c YAU : new
      CALL DCOPY(NA*NPERT,BIAA(1,1),1,UPDATA(1,1,1),1)
      CALL DCOPY(NB*NPERT,BIAB(1,1),1,UPDATB(1,1,1),1)
c YAU : end
C
C    LOOP OVER K UNTIL THE NEW VECTOR IS LINEAR DEPENDENT OR
C    KMAX IS REACHED
C
      DO 1000 K=1,KMAX
C
C  HERE THE LOGIC IS A LITTLE BIT MORE COMPLICATED
C
C  ACTUALLY WE HAVE TO DO FOUR MULTIPLICATION
C
      IF(INCORE) THEN
      DO 15 IPERT=1,NPERT
      CALL XGEMM('N','N',NA,1,NA,ONE,AMAT,NA,BIAA(1,IPERT),NA,
     &           AZERO,BIANEWA(1,IPERT),NA)
      CALL XGEMM('N','N',NB,1,NB,ONE,AMAT(1+NA*NA),NB,
     &           BIAB(1,IPERT),NB,AZERO,BIANEWB(1,IPERT),NB)
      CALL XGEMM('N','T',1,NA,NB,ONE,BIAB(1,IPERT),1,
     &           AMAT(1+NA*NA+NB*NB),NA,ONE,BIANEWA(1,IPERT),1)
      CALL XGEMM('N','N',1,NB,NA,ONE,BIAA(1,IPERT),1,
     &           AMAT(1+NA*NA+NB*NB),NA,ONE,BIANEWB(1,IPERT),1)
15    CONTINUE
      ELSE
       DO 90 ISPIN=1,2
       IF(ISPIN.EQ.1) THEN
        N1=NA 
       ELSE
        N1=NB
       ENDIF
       LISTW=18+ISPIN
       CALL GETLST(AMAT,1,N1,2,1,LISTW)
       LISTW=22+ISPIN
       IOFFA=1+N1*N1
       CALL GETLST(AMAT(IOFFA),1,N1,2,1,LISTW)
       CALL SAXPY(N1*N1,ONEM,AMAT(IOFFA),1,AMAT,1)
       DO 85 IPERT=1,NPERT
       IF(ISPIN.EQ.1) THEN
       CALL XGEMM('N','N',1,N1,N1,ONE,BIAA(1,IPERT),
     &            1,AMAT,N1,AZERO,BIANEWA(1,IPERT),1)
       ELSE
       CALL XGEMM('N','N',1,N1,N1,ONE,BIAB(1,IPERT),
     &            1,AMAT,N1,AZERO,BIANEWB(1,IPERT),1)
       ENDIF
85     CONTINUE
90     CONTINUE
       LISTW=18
       CALL GETLST(AMAT,1,NB,2,1,LISTW)
       DO 95 IPERT=1,NPERT
       CALL XGEMM('N','T',1,NA,NB,TWO,BIAB(1,IPERT),1,AMAT,
     &            NA,ONE,BIANEWA(1,IPERT),1)
       CALL XGEMM('N','N',1,NB,NA,TWO,BIAA(1,IPERT),1,AMAT,NA,
     &            ONE,BIANEWB(1,IPERT),1)
95     CONTINUE
      ENDIF
      IF(ROHF) THEN
C
C ROHF CASE
C
       CALL ROHFU(IRREP,NPERT,NA,NB,BIANEWA,BIANEWB,EVALA,EVALB,
     &            POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),NOCCA,
     &            NOCCB)
      ELSE
C
C UHF CASE
C
       CALL FORMU(IRREP,NPERT,NA,BIANEWA,EVALA,POP(1,1),VRT(1,1),
     &            NOCCA)
       CALL FORMU(IRREP,NPERT,NB,BIANEWB,EVALB,POP(1,2),VRT(1,2),
     &            NOCCB)
      ENDIF
C
C    FORM ELEMENTS OF MATRIX ASMALL
C
      DO 20 IPERT=1,NPERT
      DO 100 L=1,K
      ASMALL(L,K,IPERT)=
     &       SDOT(NA,UPDATA(1,IPERT,L),1,BIANEWA(1,IPERT),1)
      ASMALL(L,K,IPERT)=ASMALL(L,K,IPERT)+
     &       SDOT(NB,UPDATB(1,IPERT,L),1,BIANEWB(1,IPERT),1)
100   CONTINUE
      IF(K.GT.1) ASMALL(K,K-1,IPERT)=ASQUARE(K,IPERT)
C
C    ORTHOGONALIZE XIANEW TO PREVIOUS VECTORS
C
      DO 200 L=1,K
      SCALE=-ASMALL(L,K,IPERT)/ASQUARE(L,IPERT)
      CALL SAXPY(NA,SCALE,UPDATA(1,IPERT,L),1,BIANEWA(1,IPERT),1)
      CALL SAXPY(NB,SCALE,UPDATB(1,IPERT,L),1,BIANEWB(1,IPERT),1)
200   CONTINUE
C
      ASQUARE(K+1,IPERT)=
     &      SDOT(NA,BIANEWA(1,IPERT),1,BIANEWA(1,IPERT),1)
      ASQUARE(K+1,IPERT)=ASQUARE(K+1,IPERT)+
     &      SDOT(NB,BIANEWB(1,IPERT),1,BIANEWB(1,IPERT),1)
20    CONTINUE
c YAU : old
c     CALL ICOPY(IINTFP*NA*NPERT,BIANEWA,1,BIAA,           1)
c     CALL ICOPY(IINTFP*NB*NPERT,BIANEWB,1,BIAB,           1)
c     CALL ICOPY(IINTFP*NA*NPERT,BIANEWA,1,UPDATA(1,1,K+1),1)
c     CALL ICOPY(IINTFP*NB*NPERT,BIANEWB,1,UPDATB(1,1,K+1),1)
c YAU : new
      CALL DCOPY(NA*NPERT,BIANEWA,1,BIAA,           1)
      CALL DCOPY(NB*NPERT,BIANEWB,1,BIAB,           1)
      CALL DCOPY(NA*NPERT,BIANEWA,1,UPDATA(1,1,K+1),1)
      CALL DCOPY(NB*NPERT,BIANEWB,1,UPDATB(1,1,K+1),1)
c YAU : end
C
C  CHECK FOR CONVERGENCE OF THE CREATED ITERATIVE SUBSPACE
C
      SUM=AZERO 
      DO 30 IPERT=1,NPERT
      TEST=ASQUARE(K+1,IPERT)/N
c      IF(TEST.LE.SMALL) THEN
c       ASQUARE(K+1,IPERT)=ONE
c       IF(ICONV(IPERT).EQ.0) ICONV(IPERT)=K
c      ENDIF
      SUM=SUM+TEST
30    CONTINUE
      IF(SUM.LE.CUTOFF) THEN
C
C      ITERATIVE EXPANSION HAS CONVERGED, EXIT THE LOOP
C
       GO TO 300
      ENDIF
1000  CONTINUE
C
C  IF WE REACH THIS POINT, THE ITERATIVE EXPANSION HAS NOT CONVERGED
C
      WRITE(6,3000)
3000  FORMAT(' CPHF did not converge after ',I4,
     &       ' cycles,',' abort !')
      WRITE(6,3001)TEST
3001  FORMAT(' The convergence is : ',E20.10) 
      CALL ERREX
C
C   NOW INVERT THE ASMALL MATRIX
C
  300 CONTINUE
C
      WRITE(6,3002) K 
3002  FORMAT(' CPHF converged after ',I3,' iterations.')
C
C  SUBTRACT THE DIAGONAL PART 
C
C  NOTE THE ASMALL MATRIX CONSISTS OF SEVERAL PARTS
C
C  FIRST THE UPPER TRIANGLE WITH L LT K
C 
C    THAT'S SIMPLY    Y(L)  A Y(K)
C
C  THE DIAGONAL ELEMENTS
C
C   THAT'S   Y(K) A Y(K) - Y(K) Y(K)
C
C  THE LOWER TRIANGLE WITH L GT K+1
C
C  THESE ARE ZERO SINCE Y(L) SPANS A DIMENSION NOT COVERED BY A Y(K)
C
C  THE LOWER TRIANGLE WITH L EQ K+1
C
C  THESE ARE  Y(K+1) A(K) Y(K) =  Y(K+1) Y(K+1) = ASQUARE(K+1)
C
      CALL ZERO(BIAA,NA*NPERT)
      CALL ZERO(BIAB,NB*NPERT)
C
      DO 40 IPERT=1,NPERT
C
      K1=K
      IF(ICONV(IPERT).NE.0) K1=ICONV(IPERT)
C
      DO 310 I=1,K1
       ASMALL(I,I,IPERT)=ASMALL(I,I,IPERT)-ASQUARE(I,IPERT)
310   CONTINUE
C
C  INVERT A (XIANEW IS HERE USED AS SCRATCH AND NO LONGER USED
C  FOR HOLDING A*Y
C
      CALL MINV(ASMALL(1,1,IPERT),K1,KMAX,BIANEWA,DET,TOL,0,1)
C
      DO 330 I=1,K1
       ASQUARE(I,IPERT)=-ASCALE(IPERT)*ASMALL(I,1,IPERT)
330   CONTINUE
C
C     NOW FORM SOLUTION IN XIA
C
      DO 340 I=1,K1
       CALL SAXPY(NA,ASQUARE(I,IPERT),UPDATA(1,IPERT,I),
     &            1,BIAA(1,IPERT),1)
       CALL SAXPY(NB,ASQUARE(I,IPERT),UPDATB(1,IPERT,I),
     &            1,BIAB(1,IPERT),1)
340   CONTINUE
40    CONTINUE
C
C   ALL DONE, RETURN
C
      RETURN
      END
