      PROGRAM VCPHF
C
C THIS PROGRAM DRIVES THE SOLUTION OF THE CPHF
C EQUATIONS. SYMMETRY IS EXPLICITLY USED.
C
C POSSIBLE PERTURBATIONS ARE CURRENTLY:
C
C   GEOMETRIC PERTURBATIONS
C   ELECTRICAL FIELD COMPONENTS
C   MAGNETIC FIELD COMPONENTS (GIAO ANSATZ)
C   MAGNETIC FIELD COMPONENTS (CONVENTIONAL, GAUGE-DEPENDENT ANSATZ)
C    ALTERNATIVELY, USING GEERTSEN'S APPROACH TO CALCULATE
C    THE DIAMAGNETIC CONTRIBUTIONS (NOT RECOMMENDED)
C   INDIRECT SPIN-SPIN COUPLING CONSTANTS
C
C  TO BE EXTENDED FOR :  SPIN DENSITY DERIVATIVES
C                        QUADRUPOLE DERIVATIVES
C                        TIME-DEPENDENT PROPERTIES
C
CEND
C
C WRITTEN BY J. GAUSS AND J.F. STANTON,
C                 QTP, UNIVERSITY OF FLORIDA, 1991
C                 UNIVERSITY KARLSRUHE, 1991 
C VARIOUS UPDATES,  J. GAUSS, UNIVERSITY KARLSRUHE, 1992, 1993
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DIRPRD,POP,VRT,XYZSYM,XYZSYM2
      LOGICAL SCF,NONHF,GEOM,FIELD,THIRD,MAGN,ROHF,SEMI,LAST,SPIN,
     &        TRAINV,SWITCH,JSO,JFC,JSD,PMSZ,GEERTSEN 
C
      DIMENSION XYZSYM(3),XYZSYM2(3)
C
      COMMON//ICORE(1)
      COMMON/ISTART/I0
      COMMON/IOPOS/ICRSIZ,ICHSIZ,IOFF1(2),LENREC
      COMMON/BASSYM/NBAS(8),NBASIS,NBASSQ,NBASTT
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NJUNK(18)
      COMMON/METHOD/IUHF,SCF,NONHF
      COMMON/OPENSH/ROHF,SEMI
      COMMON/INVAR/TRAINV
      COMMON/MODE/SWITCH
      COMMON/JNMR/JSO,JFC,JSD
      COMMON/PERT/NTPERT,NPERT(8),IPERT(8),IXPERT,IYPERT,IZPERT,
     &            IYZPERT,IXZPERT,IXYPERT,ITRANSX,ITRANSY,ITRANSZ,
     &            NUCIND
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/PERT2/FIELD,GEOM,THIRD,MAGN,SPIN
      COMMON/PERT3/PMSZ
      COMMON/DIAMAG/GEERTSEN
C
      CALL CRAPSI(ICORE,IUHF,0)
C
      MAXCOR=ICRSIZ
C
      CALL SETBAS
      CALL SETMET
C
      MXCOR=MAXCOR
C
      CALL GETREC(20,'JOBARC','NSYMPERT',27,NTPERT)
C
      IF(TRAINV) THEN
C
C READ INFORMATION ABOUT TRANSLATIONAL INVARIANCE RELATIONS
C
       ITRANS=I0
       IMAP=ITRANS+3*(NUCIND-1)+MOD(3*(NUCIND-1),2)
       I0=IMAP+NTPERT+MOD(NTPERT,2)
       MXCOR=MXCOR-3*(NUCIND-1)-MOD(3*(NUCIND-1),2)
     &       -NTPERT-MOD(NTPERT,2)
       CALL GETREC(20,'JOBARC','TRANSINV',3*(NUCIND-1),
     &             ICORE(ITRANS))
       ICOUNT=0
       IOFF=0
       DO 1 IRREP=1,NIRREP
        N=NPERT(IRREP)
        IF(IXPERT.EQ.IRREP) N=N+1
        IF(IYPERT.EQ.IRREP) N=N+1
        IF(IZPERT.EQ.IRREP) N=N+1
        DO 2 IP=1,N
         ICOUNT=ICOUNT+1
         IF(((IRREP.NE.IXPERT).OR.(IP.NE.ITRANSX)).AND.
     &      ((IRREP.NE.IYPERT).OR.(IP.NE.ITRANSY)).AND.
     &      ((IRREP.NE.IZPERT).OR.(IP.NE.ITRANSZ))) THEN
          IOFF=IOFF+1 
          ICORE(IMAP+IOFF-1)=ICOUNT
         ENDIF
2       CONTINUE
1      CONTINUE
      ELSE 
       IMAP=I0
       I0=IMAP+NTPERT+MOD(NTPERT,2)
       MXCOR=MXCOR-NTPERT-MOD(NTPERT,2)
       DO 6 IP=1,NTPERT
        ICORE(IMAP+IP-1)=IP
6      CONTINUE
      ENDIF
      ISTART=I0
C
C  CREATE LISTS FOR S(chi) AND F(chi)
C  (CONSIDER THE ELECTRICAL FIELD PERTURBATIONS AS WELL !)
C
      IENTER=0
      IOFF=0
      DO 10 IRREPX=1,NIRREP
C
       NTP=NPERT(IRREPX)
       IF(GEOM) THEN 
        CALL CMOI(IRREPX,IUHF,NTP,169,.TRUE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        IF(.NOT.SCF) CALL CMOI(IRREPX,IUHF,NTP,185,.TRUE.,
     &                         .FALSE.,.TRUE.,IENTER,IOFF)
        IF(.NOT.SCF) CALL CMOI(IRREPX,IUHF,NTP,155,.TRUE.,
     &                         .FALSE.,.TRUE.,IENTER,IOFF)
        IF(IXPERT.EQ.IRREPX) NTP=NTP+1
        IF(IYPERT.EQ.IRREPX) NTP=NTP+1
        IF(IZPERT.EQ.IRREPX) NTP=NTP+1
        CALL CMOI(IRREPX,IUHF,NTP,175,.TRUE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        CALL CMOI(IRREPX,IUHF,NTP,177,.FALSE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        IF(.NOT.SCF.AND.ROHF) THEN
         CALL CMROHF(IRREPX,NTP,198)
        ENDIF
c
c for debugging purposes only
c
c        call cmoi(irrepx,iuhf,ntp,192,.true.,.true.,.true.,
c                  ienter,ioff)
C
       ELSE IF(FIELD) THEN 
C
        CALL IZERO(NPERT,NIRREP)
        NTP=0
        IF(IXPERT.EQ.IRREPX) NTP=NTP+1
        IF(IYPERT.EQ.IRREPX) NTP=NTP+1
        IF(IZPERT.EQ.IRREPX) NTP=NTP+1
        CALL CMOI(IRREPX,IUHF,NTP,175,.TRUE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        CALL CMOI(IRREPX,IUHF,NTP,177,.FALSE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        IF(.NOT.SCF) CALL CMOI(IRREPX,IUHF,NTP,185,.TRUE.,
     &                         .TRUE.,.FALSE.,IENTER,IOFF)
c
c for debugging purposes only
c
c        call cmoi(irrepx,iuhf,ntp,192,.true.,.true.,.true.,
c     &            ienter,ioff)
C
       ELSE IF(MAGN) THEN
C
        NTPS=0
C
C LISTS FOR ALL MAGNETIC PERTURBATIONS
C CREATE ALSO LISTS FOR TRANSFORMED DERIVATIVES WITH RESPECT
C TO THE NUCLEAR MAGNETIC MOMENTS
C (FOR SCF CALCULATIONS ONLY, IT IS OF COURSE MORE
C ADVANTAGEOUS TO TRANSFORM THE PERTURBED DENSITY MATRIX
C BACK TO THE AO BASIS (3 TRANSFORMATIONS) INSTEAD
C OF TRANSFORMING THE DERIVATIVES (NCOORD TRANSFORMATIONS).
C HOWEVER, IN CASE OF A CORRELATED CALCULATION, THOSE
C DERIVATIVES HAVE TO BE TRANSFORMED ANYWAY.
C
        IF(IYZPERT.EQ.IRREPX) NTPS=NTPS+1
        IF(IXZPERT.EQ.IRREPX) NTPS=NTPS+1
        IF(IXYPERT.EQ.IRREPX) NTPS=NTPS+1
        CALL CMOI(IRREPX,IUHF,NTPS,169,.TRUE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        NTP=NTPS
C
C ADD HERE CORRESPONDING NUMBER OF PERTURBATIONS
C WHICH CORRESPOND TO THE NUCLEAR MAGNETIC MOMENTS
C
        NTP=NTP+NPERT(IRREPX)
        IF(GEERTSEN) THEN
         IF(IXPERT.EQ.IRREPX) NTP=NTP+2
         IF(IYPERT.EQ.IRREPX) NTP=NTP+2
         IF(IZPERT.EQ.IRREPX) NTP=NTP+2
        ENDIF
        CALL CMOI(IRREPX,IUHF,NTP,175,.TRUE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        CALL CMOI(IRREPX,IUHF,NTP,177,.FALSE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        IF(.NOT.SCF) CALL CMOI(IRREPX,IUHF,NTPS,185,.TRUE.,
     &                         .TRUE.,.FALSE.,IENTER,IOFF)
C
       ELSE IF(JSO.OR.JFC.OR.JSD) THEN
C
        NTP=NPERT(IRREPX)
        CALL CMOI(IRREPX,IUHF,NTP,175,.TRUE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        CALL CMOI(IRREPX,IUHF,NTP,177,.FALSE.,.TRUE.,.TRUE.,
     &            IENTER,IOFF)
        IF(.NOT.SCF.AND.JSO) CALL CMOI(IRREPX,IUHF,NTP,185,.TRUE.,
     &                                .TRUE.,.FALSE.,IENTER,IOFF)
C
       ENDIF
C
       IF(SPIN) THEN
C
C The idea is here the following:
C
C    we solve the cphf equations for the nuclear perturbations
C    and calculate in addition to frequencies and ir intensities
C    spin density derivatives (the theoretical equations are the
C    same as for an electrical field). There are two contributions
C    to the spin density derivatives, one which involves derivatives
C    of the one-electron integrals with respect to nuclear coordinates
C    and the spin density perturbation and a second which involve
C    the CPHF coeficients with respect to nuclear coordinates and
C    spin density integrals
C
        write(*,*) ' Currently not implemented'
        call errex
       ENDIF
10    CONTINUE
C
      IF(GEOM)  THEN
C
C TRANSFORM FIRST ALL OVERLAP MATRIX DERIVATIVES FROM
C AO TO MO BASIS
C
       CALL FORMSD(ICORE(ISTART),MXCOR)
C
C TRANSFORM ALL FOCK MATRIX DERIVATIVES FROM AO TO MO
C BASIS
C
       CALL FORMFD(ICORE(ISTART),MXCOR)
C
C FOR CORRELATED SECOND DERIVATIVES TRANSFORM ALSO A^(chi)*D(P,Q)
C
       IF(.NOT.SCF) CALL FORMRD(ICORE(ISTART),MXCOR)
C
      ENDIF
C
      IF(GEOM.OR.FIELD) THEN
C
C TRANSFORM ALL DIPOLE MATRICES FROM AO TO MO 
C BASIS
C
       CALL FORMDD(ICORE(ISTART),MXCOR)
C
      ENDIF
C
      IF(SPIN) THEN
C
C IF REQUIRED TRANSFORM ALL SPIN DENSITY MATRICES FROM AO TO
C MO BASIS
C
c       CALL FORMSS(ICORE(ISTART),MXCOR)
C
      ENDIF
C
      IF(MAGN) THEN
C
C FOR MAGNETIC FIELD PERTURBATION, TRANSFORM OVERLAP AND
C FOCK MATRIX DERIVATIVES FROM AO TO MO
C
       CALL FORMSD(ICORE(ISTART),MXCOR)
       CALL FORMFD(ICORE(ISTART),MXCOR)
C
C FOR CORRELATED SECOND DERIVATIVES TRANSFORM ALSO
C A^(B)*D(P,Q)
C 
C   NOT REQUIRED FOR CORRELATED NMR SHIFTS
C
c       IF(.NOT.SCF) CALL FORMRD(ICORE(ISTART),MXCOR)
C
      ENDIF
C
      IF(JSO) THEN
C
C FOR SPIN-ORBIT CONTRIBUTIONS TO J, TREAT ONLY J-PART
C
       CALL FORMSOD(ICORE(ISTART),MXCOR)
C
      ENDIF
C
      IF(JFC.OR.JSD) THEN
C
C FOR FC AND SD PERTURBATIONS, TRANSFORM FERMI-CONTACT INTEGRALS
C OR SPIN-DIPOLAR INETGRALS FROM AO TO MO BASIS
C
       CALL FORMFC(ICORE(ISTART),MXCOR)
C
      ENDIF
C
C ALLOCATE MEMORY FOR SECOND DERIVATIVES
C
      IF(GEOM) THEN
C
C ALLOCATE MEMORY FOR HESSIAN AND DIPOLE DERIVATIVES
C
       NTPERT1=NTPERT
       IF(TRAINV) NTPERT1=NTPERT1+3
       IHES=ISTART
       IDDP=IHES+IINTFP*NTPERT1*NTPERT1
       ISTART=IDDP+IINTFP*3*NTPERT1
       MXCOR=MXCOR-IINTFP*((3+NTPERT1)*NTPERT1)
       CALL ZERO(ICORE(IHES),NTPERT1*NTPERT1)
       CALL ZERO(ICORE(IDDP),3*NTPERT1)
C
      ELSE IF(MAGN) THEN
C
C ALLOCATE MEMORY FOR MAGNETIC SUSZEPTIBILITY AND CHEMICAL SHIELDING
C TENSORS
C
       IMSZ=ISTART
       ICSH=IMSZ+9*IINTFP
       ISTART=ICSH+IINTFP*3*NTPERT
       MXCOR=MXCOR-IINTFP*(9+3*NTPERT)
C
       CALL ZERO(ICORE(IMSZ),9)
       CALL ZERO(ICORE(ICSH),3*NTPERT)
C
      ELSE IF(JSO) THEN
C
C ALLOCATE MEMORY FOR COUPLING CONSTANT (TENSOR) 
C
       IJPSO=ISTART
       ISTART=IJPSO+IINTFP*NTPERT*NTPERT
       MXCOR=MXCOR-IINTFP*NTPERT*NTPERT
C
       CALL ZERO(ICORE(IJPSO),NTPERT*NTPERT)
C
      ELSE IF(JFC) THEN
C  
C ALLOCATE MEMORY FOR FULL COUPLING TENSOR
C
       IJFC=ISTART
       ISTART=IJFC+IINTFP*NTPERT*NTPERT
       MXCOR=MXCOR-IINTFP*NTPERT*NTPERT
C
       CALL ZERO(ICORE(IJFC),NTPERT*NTPERT)   
C
      ELSE IF(JSD) THEN
C
       IJSD=ISTART
       ISTART=IJSD+IINTFP*NTPERT*NTPERT
       MXCOR=MXCOR-IINTFP*NTPERT*NTPERT
C
       CALL ZERO(ICORE(IJSD),NTPERT*NTPERT)   
C
      ENDIF
C
      LAST=.FALSE.
      NFTOT=0
C
C LOOP FIRST OVER THE IRREPS OF THE POSSIBLE PERTURBATION
C
      DO 1000 IRREP=1,NIRREP
C
C      DETERMINE THE NUMBER OF PERTURBATION WHICH TRANSFORM LIKE 
C      IRREP
C
       IF(GEOM.OR.FIELD) THEN
C
        IF(FIELD) THEN
         IOFFX=0
         MPERT=0
        ELSE IF(GEOM) THEN
         IOFFX=0
         MPERT=NPERT(IRREP)
        ENDIF
C
C  CHECK ELECTRICAL FIELD COMPONENTS
C
        XYZSYM(1)=IXPERT-1
        XYZSYM(2)=IYPERT-1
        XYZSYM(3)=IZPERT-1
C
        DO 11 IXYZ=1,3
         IF(XYZSYM(IXYZ).EQ.(IRREP-1)) MPERT=MPERT+1
11      CONTINUE
        NX=IOFFX+MPERT
C
       ELSE IF(MAGN) THEN  
C
        IOFFX=0
        MPERT=0
C
C CHECK MAGNETIC FIELD COMPONENTS
C
        XYZSYM(1)=IYZPERT-1
        XYZSYM(2)=IXZPERT-1
        XYZSYM(3)=IXYPERT-1
C
        DO 12 IXYZ=1,3
         IF(XYZSYM(IXYZ).EQ.(IRREP-1)) MPERT=MPERT+1
12      CONTINUE
        MPERT2=MPERT
        IF(GEERTSEN) THEN
         IF(IXPERT.EQ.IRREP) MPERT=MPERT+2
         IF(IYPERT.EQ.IRREP) MPERT=MPERT+2
         IF(IZPERT.EQ.IRREP) MPERT=MPERT+2
         XYZSYM2(1)=IXPERT-1
         XYZSYM2(2)=IYPERT-1
         XYZSYM2(3)=IZPERT-1
        ENDIF
        MPERT3=MPERT-MPERT2
        NX=IOFFX+MPERT
C
C THE FOLLOWING CODE APPLIES WHEN CHEMICAL SHIFTS ARE
C CALCULATED BY SOLVING THE CPHF EQUATIONS FOR THE NUCLEAR
C MAGNETIC MOMENTS 
C
        IF(SWITCH) THEN 
         IOFFX=0
         MPERT=0
         MPERTB=0
         DO 13 IXYZ=1,3
          IF(XYZSYM(IXYZ).EQ.(IRREP-1)) THEN
           IOFFX=IOFFX+1
           MPERTB=MPERTB+1
          ENDIF
13       CONTINUE 
         MPERT=NPERT(IRREP)
         NX=IOFFX+MPERT
        ENDIF
C
       ELSE IF(JFC.OR.JSD.OR.JSO) THEN
C
C FERMI-CONTACT, SPIN-DIPOLAR AND SPIN-ORBIT PERTURBATION
C FOR NMR COUPLING CONSTANTS
C
        IOFFX=0
        MPERT=NPERT(IRREP)
        NX=IOFFX+MPERT
C
       ENDIF
C
       IF(MPERT.EQ.0) GO TO 1000
       if(mpert.eq.1) then
        write(6,6001) mpert,irrep
6001    FORMAT(' There is ',
     &        I1,' perturbation within irrep ',
     &        I1,'.')
       else if(mpert.lt.10) then
        write(6,6002) mpert,irrep
6002    FORMAT(' There are ',
     &        I1,' perturbations within irrep ',
     &        I1,'.')
       else if(mpert.lt.100) then
        write(6,6003) mpert,irrep
6003    FORMAT(' There are ',
     &        I2,' perturbations within irrep ',
     &        I1,'.')
       else
        write(6,6004) mpert,irrep
6004    FORMAT(' There are ',
     &        I3,' perturbations within irrep ',
     &        I1,'.')
       endif
C
C  ALLOCATE MEMORY FOR THE BAI ARRAYS
C
       LENAA=IRPDPD(IRREP,ISYTYP(1,18))
       LENIJA=IRPDPD(IRREP,21)
       LENGAA=MPERT*LENAA
       IF(IUHF.EQ.0) THEN
        LENBB=LENAA
        LENGBB=LENGAA 
        LENIJB=LENIJA
       ELSE
        LENBB=IRPDPD(IRREP,ISYTYP(1,17))
        LENGBB=MPERT*LENBB
        LENIJB=IRPDPD(IRREP,22)
       ENDIF
C
       IBAIAA=ISTART
C
       IBAIBB=IBAIAA+IUHF*LENGAA*IINTFP
C
       IEND=IBAIBB+LENGBB*IINTFP
       MXCOR=MXCOR-IINTFP*(LENGAA+LENGBB*IUHF)
       IF(MXCOR.LE.0) CALL ERREX
C
       MXCOR1=MXCOR
C
C  READ IN NOW THE B(A,I) MATRICES, IN CASE OF THE
C 
       DO 15 IX=IOFFX+1,NX
        CALL GETLST(ICORE(IBAIAA+(IX-IOFFX-1)*LENAA*IINTFP),
     &              IX,1,1,IRREP,180)
        IF(IUHF.NE.0) THEN
         CALL GETLST(ICORE(IBAIBB+(IX-IOFFX-1)*LENBB*IINTFP),
     &               IX,1,1,IRREP,181)
        ENDIF
15     CONTINUE
C
C FORM NOW THE A MATRIX AND SOLVE THE CPHF EQUATIONS
C
       CALL SOLVER(IRREP,MPERT,ICORE(IBAIAA),ICORE(IEND),MXCOR,IUHF)
C
C SAVE THE CPHF COEFFICIENTS ON DISK
C 
       DO 400 ISPIN=1,1+IUHF
       IB=IBAIAA+(ISPIN-1)*LENGAA*IINTFP
       LENG=IRPDPD(IRREP,ISYTYP(1,19-ISPIN))
       DO 400 JPERT=IOFFX+1,NX
        CALL PUTLST(ICORE(IB+IINTFP*(JPERT-IOFFX-1)*LENG),
     &              JPERT,1,1,IRREP,181+ISPIN)
400    CONTINUE
C
       MXCOR=MXCOR1
C
       IF(GEOM) THEN
C
C CALCULATE CONTRIBUTION TO SCF FORCE CONSTANTS
C
        IUAIA=IBAIAA
        IUAIB=IBAIBB
        ISIJA=IEND
        ISIJB=ISIJA+IUHF*LENIJA*NPERT(IRREP)*IINTFP
        IBAIA=ISIJB+IINTFP*LENIJB*NPERT(IRREP)
        IBAIB=IBAIA+IINTFP*LENAA*NPERT(IRREP)*IUHF
        IBIJA=IBAIB+IINTFP*LENBB*NPERT(IRREP)
        IBIJB=IBIJA+IINTFP*LENIJA*NPERT(IRREP)*IUHF
        IDFIJA=IBIJB+IINTFP*LENIJB*NPERT(IRREP)
        IDFIJB=IDFIJA+IINTFP*IUHF*LENIJA*NPERT(IRREP)
        IHES2=IDFIJB+IINTFP*LENIJB*NPERT(IRREP)
        ISCR1=IHES2+IINTFP*NTPERT1*NTPERT1
        ISCR2=ISCR1+IINTFP*NTPERT1*NTPERT1
        IEND2=ISCR2+IINTFP*NTPERT1*NTPERT1
        IF(IEND2.GE.MXCOR) CALL ERREX
C
        CALL GETLST(ICORE(ISIJA),1,NPERT(IRREP),1,IRREP,170)
        CALL GETLST(ICORE(IBIJA),1,NPERT(IRREP),1,IRREP,176)
        CALL GETLST(ICORE(IDFIJA),1,NPERT(IRREP),1,IRREP,184)
        CALL GETLST(ICORE(IBAIA),1,NPERT(IRREP),1,IRREP,180)
C
        IF(IUHF.NE.0) THEN
         CALL GETLST(ICORE(ISIJB),1,NPERT(IRREP),1,IRREP,171)
         CALL GETLST(ICORE(IBIJB),1,NPERT(IRREP),1,IRREP,177)
         CALL GETLST(ICORE(IDFIJB),1,NPERT(IRREP),1,IRREP,185)
         CALL GETLST(ICORE(IBAIB),1,NPERT(IRREP),1,IRREP,181)
        ENDIF
C
        CALL SCFFCM(IRREP,NPERT(IRREP),ICORE(IUAIA),
     &              ICORE(IUAIB),ICORE(IBAIA),ICORE(IBAIB),
     &              ICORE(ISIJA),ICORE(ISIJB),ICORE(IBIJA),
     &              ICORE(IBIJB),ICORE(IDFIJA),ICORE(IDFIJB),
     &              ICORE(IHES),ICORE(IHES2),ICORE(ISCR1),
     &              ICORE(ISCR2),ICORE(IMAP),NTPERT1,IPERT(IRREP),
     &              NTPERT,ICORE(ITRANS))
C
C CALCULATE SCF DIPOL DERIVATIVES
C
        NFPERT=NX-NPERT(IRREP)
        NFTOT=NFTOT+NFPERT
        IF(NFTOT.EQ.3) LAST=.TRUE.
        IF(NFPERT.NE.0) THEN
C
         IBAIB=IBAIA+NFPERT*IINTFP*LENAA*IUHF
         IBIJA=IBAIB+NFPERT*IINTFP*LENBB
         IBIJB=IBIJA+NFPERT*IINTFP*LENIJA*IUHF
         IDDP2=IBIJB+NFPERT*IINTFP*LENIJB
         ISCR1=IDDP2+IINTFP*NTPERT1*NTPERT1
         ISCR2=ISCR1+IINTFP*NTPERT1*NTPERT1
         ICHG=ISCR2+IINTFP*3*NTPERT1
         IEND2=ICHG+IINTFP*NTPERT1
         IF(IEND2.GE.MXCOR) CALL ERREX 
C       
         CALL GETLST(ICORE(IBAIA),NPERT(IRREP)+1,NFPERT,1,IRREP,180)
         CALL GETLST(ICORE(IBIJA),NPERT(IRREP)+1,NFPERT,1,IRREP,176)
         IF(IUHF.NE.0) THEN
          CALL GETLST(ICORE(IBAIB),NPERT(IRREP)+1,NFPERT,1,IRREP,181)
          CALL GETLST(ICORE(IBIJB),NPERT(IRREP)+1,NFPERT,1,IRREP,177)
         ENDIF
C
         CALL SCFDDP(IRREP,NPERT(IRREP),ICORE(IUAIA),ICORE(IUAIB),
     &               ICORE(ISIJA),ICORE(ISIJB),ICORE(IBAIA),
     &               ICORE(IBAIB),ICORE(IBIJA),ICORE(IBIJB),
     &               ICORE(IDDP),ICORE(IDDP2),ICORE(ISCR1),
     &               ICORE(ISCR2),ICORE(IMAP),ICORE(ICHG),
     &               NTPERT1,IPERT(IRREP),NFPERT,XYZSYM,LAST,
     &               ICORE(ITRANS))
C
        ENDIF
       ENDIF
C
       IF(SPIN) THEN
C
C  ALLOCATE MEMORY
C
c         CALL SCFSDP(IRREP,NPERT(IRREP),NSD(IRREP),ICORE(IUAIA),
c      &              ICORE(IUAIB),ICORE(ISIJA),ICORE(ISIJB),             
c      &              ICORE(IBAIA),ICORE(IBAIB),ICORE(IBIJA),
c      &              ICORE(IBIJB),ICORE(ISD),ICORE(ISD2),ICORE(ISCR1),
c      &              ICORE(ISCR2))
C
        ENDIF 
C
        IF(MAGN) THEN
C
C ALLOCATE MEMORY
C  
         IF(.NOT.SWITCH) THEN
         NFTOT=NFTOT+MPERT2
         IF(NFTOT.EQ.3) LAST=.TRUE.
C
         IUAIA=IBAIAA
         IUAIB=IBAIBB
         ISIJA=IEND
         ISIJB=ISIJA+IUHF*LENIJA*MPERT*IINTFP
         IBAIA=ISIJB+IINTFP*LENIJB*MPERT
         IBAIB=IBAIA+IINTFP*LENAA*NPERT(IRREP)*IUHF
         IBIJA=IBAIB+IINTFP*LENBB*NPERT(IRREP)
         IBIJB=IBIJA+IINTFP*LENIJA*NPERT(IRREP)*IUHF
         ICSH2=IBIJB+IINTFP*LENIJB*NPERT(IRREP)
         IMSZ2=ICSH2+IINTFP*NTPERT*3
         ISCR1=IMSZ2+IINTFP*9
         ISCR2=ISCR1+IINTFP*NTPERT*NTPERT
         ISCR3=ISCR2+IINTFP*NTPERT*NTPERT
         IEND2=ISCR3+IINTFP*NTPERT*NTPERT
         IF(IEND2.GE.MXCOR) CALL ERREX
C
         CALL GETLST(ICORE(ISIJA),1,MPERT2,1,IRREP,170)
         CALL GETLST(ICORE(IBIJA),MPERT+1,NPERT(IRREP),1,IRREP,176)
         CALL GETLST(ICORE(IBAIA),MPERT+1,NPERT(IRREP),1,IRREP,180)
         IF(PMSZ) THEN
          IBAIA2=IEND2
          IEND3=IBAIA2+IINTFP*LENAA*MPERT
          IF(IEND3.GE.MXCOR) CALL ERREX
          CALL GETLST(ICORE(IBAIA2),1,MPERT,1,IRREP,180)
         ENDIF
C
         IF(IUHF.NE.0) THEN
          CALL GETLST(ICORE(ISIJB),1,MPERT2,1,IRREP,171)
          CALL GETLST(ICORE(IBIJB),MPERT+1,NPERT(IRREP),1,IRREP,177)
          CALL GETLST(ICORE(IBAIB),MPERT+1,NPERT(IRREP),1,IRREP,181)
          IF(PMSZ) THEN
           IBAIB2=IEND3
           IEND4=IBAIB2+IINTFP*LENBB*MPERT
           IF(IEND4.GE.MXCOR) CALL ERREX
           CALL GETLST(ICORE(IBAIB2),1,MPERT,1,IRREP,181)
          ENDIF
         ENDIF
C
         CALL SCFMAG(IRREP,MPERT2,MPERT3,NPERT(IRREP),
     &               ICORE(IUAIA),ICORE(IUAIB),
     &               ICORE(ISIJA),ICORE(ISIJB),ICORE(IBAIA),
     &               ICORE(IBAIA2),ICORE(IBAIB),ICORE(IBAIB2),
     &               ICORE(IBIJA),ICORE(IBIJB),
     &               ICORE(IMSZ),ICORE(IMSZ2),ICORE(ICSH),
     &               ICORE(ICSH2),ICORE(ISCR1),ICORE(ISCR2),
     &               ICORE(ISCR3),NTPERT,IPERT(IRREP),
     &               XYZSYM,XYZSYM2,LAST)
         ELSE
          NFTOT=NFTOT+MPERT
          IF(NFTOT.EQ.NTPERT) LAST=.TRUE.
C 
          IUAIA=IBAIAA
          IUAIB=IBAIBB
          ISIJA=IEND
          ISIJB=ISIJA+IUHF*LENIJA*MPERTB*IINTFP
          IBAIA=ISIJB+IINTFP*LENIJB*MPERTB
          IBAIB=IBAIA+IINTFP*LENAA*MPERTB*IUHF
          IBIJA=IBAIB+IINTFP*LENBB*MPERTB
          IBIJB=IBIJA+IINTFP*LENIJA*MPERT*IUHF
          ICSH2=IBIJB+IINTFP*LENIJB*MPERT
          IMSZ2=ICSH2+IINTFP*NTPERT*3
          ISCR1=IMSZ2+IINTFP*9
          ISCR2=ISCR1+IINTFP*NTPERT*NTPERT
          ISCR3=ISCR3+IINTFP*NTPERT*NTPERT
          IEND2=ISCR3+IINTFP*NTPERT*NTPERT
          IF(IEND2.GE.MXCOR) CALL ERREX
C 
          CALL GETLST(ICORE(ISIJA),1,MPERTB,1,IRREP,170)
          CALL GETLST(ICORE(IBIJA),IOFFX+1,MPERT,1,IRREP,176)
          CALL GETLST(ICORE(IBAIA),1,MPERTB,1,IRREP,180)
          IF(IUHF.NE.0) THEN
           CALL GETLST(ICORE(ISIJB),1,MPERTB,1,IRREP,171)
           CALL GETLST(ICORE(IBIJB),IOFFX+1,MPERT,1,IRREP,177)
           CALL GETLST(ICORE(IBAIB),1,MPERTB,1,IRREP,181)
          ENDIF
C 
          CALL SCFMG2(IRREP,MPERTB,MPERT,ICORE(IUAIA),ICORE(IUAIB),
     &                ICORE(ISIJA),ICORE(ISIJB),ICORE(IBAIA),
     &                ICORE(IBAIB),ICORE(IBIJA),ICORE(IBIJB),
     &                ICORE(IMSZ),ICORE(IMSZ2),ICORE(ICSH),
     &                ICORE(ICSH2),ICORE(ISCR1),ICORE(ISCR2),
     &                ICORE(ISCR3),NTPERT,IPERT(IRREP),XYZSYM,LAST)
C
         ENDIF 
        ENDIF
C
        IF(JSO) THEN
C
C CALCULATE THE PSO CONTRIBUTION TO THE 
C INDIRECT SPIN-SPIN COUPLING CONSTANTS
C
         IUAIA=IBAIAA
         IUAIB=IBAIBB
         IBAIA=IEND
         IBAIB=IBAIA+IINTFP*IUHF*LENAA*NPERT(IRREP)
         IJPSO2=IBAIB+IINTFP*LENBB*NPERT(IRREP)
         ISCR1=IJPSO2+IINTFP*NTPERT*NTPERT
         ISCR2=ISCR1+IINTFP*NTPERT*NTPERT
         IEND2=ISCR2+IINTFP*NTPERT*NTPERT
         IF(IEND2.GE.MXCOR) CALL ERREX
         CALL GETLST(ICORE(IBAIA),1,NPERT(IRREP),1,IRREP,180)
         IF(IUHF.NE.0) THEN
          CALL GETLST(ICORE(IBAIB),1,NPERT(IRREP),1,IRREP,181)
         ENDIF
C
         CALL SCFPSO(IRREP,NPERT(IRREP),ICORE(IUAIA),ICORE(IUAIB),
     &               ICORE(IBAIA),ICORE(IBAIB),
     &               ICORE(IJPSO),ICORE(IJPSO2),
     &               ICORE(ISCR1),ICORE(ISCR2),
     &               NTPERT,IPERT(IRREP))
C
        ENDIF
C
        IF(JFC) THEN
C
C ALLOCATE MEMORY
C  
         IUAIA=IBAIAA
         IUAIB=IBAIBB
         IBAIA=IEND
         IBAIB=IBAIA+IINTFP*LENAA*NPERT(IRREP)*IUHF
         IJFC2=IBAIB+IINTFP*LENBB*NPERT(IRREP)
         ISCR1=IJFC2+IINTFP*9*NTPERT*NTPERT
         ISCR2=ISCR1+IINTFP*9*NTPERT*NTPERT
         IEND2=ISCR2+IINTFP*9*NTPERT*NTPERT
         IF(IEND2.GE.MXCOR) CALL ERREX
C
         CALL GETLST(ICORE(IBAIA),1,NPERT(IRREP),1,IRREP,180)
C
         IF(IUHF.NE.0) THEN
          CALL GETLST(ICORE(IBAIB),1,NPERT(IRREP),1,IRREP,181)
         ENDIF
C
         CALL SCFJFC(IRREP,NPERT(IRREP),ICORE(IUAIA),ICORE(IUAIB),
     &               ICORE(IBAIA),ICORE(IBAIB),
     &               ICORE(IJFC),ICORE(IJFC2),ICORE(ISCR1),
     &               ICORE(ISCR2),NTPERT,IPERT(IRREP))
C
        ENDIF
C
        IF(JSD) THEN
C
C ALLOCATE MEMORY
C  
         IUAIA=IBAIAA
         IUAIB=IBAIBB
         IBAIA=IEND
         IBAIB=IBAIA+IINTFP*LENAA*NPERT(IRREP)*IUHF
         IJSD2=IBAIB+IINTFP*LENBB*NPERT(IRREP)
         ISCR1=IJSD2+IINTFP*NTPERT*NTPERT
         ISCR2=ISCR1+IINTFP*NTPERT*NTPERT
         IEND2=ISCR2+IINTFP*NTPERT*NTPERT
         IF(IEND2.GE.MXCOR) CALL ERREX
C
         CALL GETLST(ICORE(IBAIA),1,NPERT(IRREP),1,IRREP,180)
C
         IF(IUHF.NE.0) THEN
          CALL GETLST(ICORE(IBAIB),1,NPERT(IRREP),1,IRREP,181)
         ENDIF
C
         CALL SCFJSD(IRREP,NPERT(IRREP),ICORE(IUAIA),ICORE(IUAIB),
     &               ICORE(IBAIA),ICORE(IBAIB),
     &               ICORE(IJSD),ICORE(IJSD2),ICORE(ISCR1),
     &               ICORE(ISCR2),NTPERT,IPERT(IRREP))
C
        ENDIF
C
       IF(GEOM.OR.FIELD) THEN
C
C CALCULATE SCF POLARIZABILITY
C
        NFPERT=NX-NPERT(IRREP)
        IUAIA=IBAIAA+(NPERT(IRREP)-IOFFX)*LENAA*IINTFP
        IUAIB=IBAIBB+(NPERT(IRREP)-IOFFX)*LENBB*IINTFP
        IBAIA=IEND
        IBAIB=IBAIA+IINTFP*NFPERT*LENAA*IUHF
        IEND=IBAIB+IINTFP*NFPERT*LENBB
C
C  READ IN NOW THE B(A,I) MATRICES
C
        IOFFF=NPERT(IRREP)+1
        IF(FIELD) IOFFF=1
        CALL GETLST(ICORE(IBAIA),IOFFF,NFPERT,1,IRREP,180)
        IF(IUHF.NE.0) THEN
         CALL GETLST(ICORE(IBAIB),IOFFF,NFPERT,1,IRREP,181)
        ENDIF
C
        CALL SCFPOL(IRREP,NFPERT,ICORE(IUAIA),ICORE(IUAIB),
     &              ICORE(IBAIA),ICORE(IBAIB),XYZSYM)
C
       ENDIF
C
C FORM THE DERIVATIVE F chi OF THE FOCK MATRIX
C
       IOFFF=IOFFX
       NFX=NX
       IF(FIELD) THEN
        IOFFF=0
        NFX=NX-IOFFX
       ENDIF
       IUAIA=ISTART
       IFIJA=IUAIA+MAX(IRPDPD(IRREP,9),IRPDPD(IRREP,10))*IINTFP
       IFABA=IFIJA+MAX(IRPDPD(IRREP,21),IRPDPD(IRREP,22))*IINTFP 
       IEND=IFABA+MAX(IRPDPD(IRREP,19),IRPDPD(IRREP,20))*IINTFP
       MXCOR1=MAXCOR+1-IEND
C
       IF(.NOT.MAGN.AND..NOT.JSO) THEN
        CALL UAIINOO(IRREP,IOFFF,NFX,ICORE(IFIJA),
     &               ICORE(IUAIA),ICORE(IEND),MXCOR1,
     &               IUHF)
        CALL UAIINVV(IRREP,IOFFF,NFX,ICORE(IFABA),
     &               ICORE(IUAIA),ICORE(IEND),MXCOR1,
     &               IUHF)
       ELSE
        IF(.NOT.SCF) THEN
         CALL UAIINOOC(IRREP,IOFFF,NFX,ICORE(IFIJA),
     &                 ICORE(IUAIA),ICORE(IEND),MXCOR1,
     &                 IUHF)
         CALL UAIINVVC(IRREP,IOFFF,NFX,ICORE(IFABA),
     &                 ICORE(IUAIA),ICORE(IEND),MXCOR1,
     &                 IUHF)
        ENDIF
       ENDIF
1000  CONTINUE
C
      IF(GEOM.OR.FIELD) THEN
C
C CALCULATE STATIC SCF HYPERPOLARIZABILITY
C
       CALL SCFHYP(ICORE(ISTART),MXCOR/2,XYZSYM)
C
C PRINT RESLULTS
C
       CALL POLSUM(SCF)
C
      ENDIF
C
C FOR ROHF COMPLETE HERE CALCULATION OF FOCK MATRIX 
C DERIVATIVES (ONLY FOR CORRELATED CALCULATIONS)
C
      IF(ROHF.AND.(.NOT.SCF)) CALL ROHFDF(ICORE(I0),MAXCOR)
C
C ALL DONE
C
      CALL CRAPSO
C
      STOP
      END
