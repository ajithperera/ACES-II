      SUBROUTINE HBARCRAP(CORE,MAXCOR,IUHF,ADD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER POP,VRT,DIRPRD
      LOGICAL ADD
      DIMENSION CORE(1)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
C
      ONE = 1.0D+00
C
      IF(ADD)THEN
      FACT =  1.0D+00
      ELSE
      FACT = -1.0D+00
      ENDIF
C
      I000 = 1
      I010 = I000 + MAX(NT(1),NT(2))
      I020 = I010 + MAX(NT(1),NT(2))
C
      IF(IUHF.NE.0)THEN
C
      DO   20 ISPIN=1,IUHF+1
C
      CALL GETLST(CORE(I000),1,1,1,ISPIN,90)
      CALL GETLST(CORE(I010),1,1,1,ISPIN,90)
C
      LISTT =  43 + ISPIN
      LISTV =  13 + ISPIN
      LISTW = 230 + ISPIN
C
      DO   10 IRREP=1,NIRREP
C
      CALL GETLST(CORE(I020),1,IRPDPD(IRREP,2+ISPIN),1,IRREP,LISTT)
C
      CALL FTAU(CORE(I020),CORE(I000),CORE(I010),
     &          IRPDPD(IRREP,ISPIN),IRPDPD(IRREP,2+ISPIN),
     &          POP(1,ISPIN),POP(1,ISPIN),VRT(1,ISPIN),VRT(1,ISPIN),
     &          IRREP,ISPIN,ONE)
C
      I030 = I020 + IRPDPD(IRREP,ISPIN) * IRPDPD(IRREP,2+ISPIN)
      CALL GETLST(CORE(I030),1,IRPDPD(IRREP,2+ISPIN),1,IRREP,LISTV)
C
      I040 = I030 + IRPDPD(IRREP,ISPIN) * IRPDPD(IRREP,2+ISPIN)
      I050 = I040 + IRPDPD(IRREP,ISPIN) * IRPDPD(IRREP,ISPIN)
c     I060 = I050 + IRPDPD(IRREP,ISPIN) * IRPDPD(IRREP,ISPIN)
C      write(6,1010) I000,I010,I020,I030,I040,I050,I060
C 1010 FORMAT(7I8)
C
      CALL GETLST(CORE(I040),1,IRPDPD(IRREP,ISPIN),2,IRREP,LISTW)
      CALL XGEMM('N','T',IRPDPD(IRREP,ISPIN),IRPDPD(IRREP,ISPIN),
     1                   IRPDPD(IRREP,2+ISPIN),FACT,
     1           CORE(I020),IRPDPD(IRREP,ISPIN),
     1           CORE(I030),IRPDPD(IRREP,ISPIN),ONE,
     1           CORE(I040),IRPDPD(IRREP,ISPIN))
C
c      CALL VADD(CORE(I050),CORE(I050),CORE(I040),
c     1          IRPDPD(IRREP,ISPIN) * IRPDPD(IRREP,ISPIN),FACT)
c      CALL PUTLST(CORE(I050),1,IRPDPD(IRREP,ISPIN),2,IRREP,LISTW)
      CALL PUTLST(CORE(I040),1,IRPDPD(IRREP,ISPIN),2,IRREP,LISTW)
   10 CONTINUE
   20 CONTINUE
C
      ENDIF
C
      CALL GETLST(CORE(I000),1,1,1,1     ,90)
      CALL GETLST(CORE(I010),1,1,1,1+IUHF,90)
C
      LISTT =  46
      LISTV =  16
      LISTW = 233
      ISPIN = 3
C
      DO  110 IRREP=1,NIRREP
C
      CALL GETLST(CORE(I020),1,IRPDPD(IRREP,14),1,IRREP,LISTT)
C
      CALL FTAU(CORE(I020),CORE(I000),CORE(I010),
     &          IRPDPD(IRREP,13),IRPDPD(IRREP,14),
     &          POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),
     &          IRREP,ISPIN,ONE)
C
      I030 = I020 + IRPDPD(IRREP,13) * IRPDPD(IRREP,14)
      CALL GETLST(CORE(I030),1,IRPDPD(IRREP,14),1,IRREP,LISTV)
C
      I040 = I030 + IRPDPD(IRREP,13) * IRPDPD(IRREP,14)
      I050 = I040 + IRPDPD(IRREP,13) * IRPDPD(IRREP,13)
c      I060 = I050 + IRPDPD(IRREP,13) * IRPDPD(IRREP,13)
C      write(6,1010) I000,I010,I020,I030,I040,I050,I060
C
c      CALL ZERO(CORE(I040),IRPDPD(IRREP,13)*IRPDPD(IRREP,13))
      CALL GETLST(CORE(I040),1,IRPDPD(IRREP,13),2,IRREP,LISTW)
      CALL XGEMM('N','T',IRPDPD(IRREP,13),IRPDPD(IRREP,13),
     1                   IRPDPD(IRREP,14),FACT,
     1           CORE(I020),IRPDPD(IRREP,13),
     1           CORE(I030),IRPDPD(IRREP,13),ONE,
     1           CORE(I040),IRPDPD(IRREP,13))
C
c      CALL VADD(CORE(I050),CORE(I050),CORE(I040),
c     1          IRPDPD(IRREP,13) * IRPDPD(IRREP,13),FACT)
c      CALL PUTLST(CORE(I050),1,IRPDPD(IRREP,13),2,IRREP,LISTW)
      CALL PUTLST(CORE(I040),1,IRPDPD(IRREP,13),2,IRREP,LISTW)
  110 CONTINUE
C
      RETURN
      END
