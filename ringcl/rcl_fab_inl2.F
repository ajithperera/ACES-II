      SUBROUTINE RCL_FAB_INL2(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE TERM
C
C  P(AB) SUM E L(IJ,AE) F(E,B)
C
C USING SYMMETRY PACKED ARRAYS
C 
C
C IN RHF :
C
C SUM e L(Ij,Ae) F(eb) - SUM E  L(Ij,Eb) F(EA)
C
C IN UHF
C
C SUM E L(IJ,AE) F(EB) - SUM E L(IJ,EB) F(EA)
C
C SUM e L(Ij,Ae) F(eb) - SUM E L(Ij,Eb) F(EA)
C
C SUM e L(ij,ae) F(eb) - SUM e L(ij,eb) F(ea)
C
C
C CODED JG AUGUST/90
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,DISSYT,DISSYZ,POP,VRT
      DIMENSION ICORE(MAXCOR)

      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,
     &            CC2,RCCD,DRCCD,RLE
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWO
      COMMON /SYM/ POP(8,2),VRT(8,2),NTAA,NTBB,
     &             NF1AA,NF1BB,NF2AA,NF2BB
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &DIRPRD(8,8)
      COMMON /FLAGS/IFLAGS(100)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,
     &            CC2,RCCD,DRCCD
      DATA ONE,HALFM /1.0D0,-0.5D0/
C
      NFAA=NF2AA
      NFBB=NF2BB
      I0AA=MAXCOR+1-NFAA*IINTFP
      MXCOR=MAXCOR-NFAA*IINTFP
      CALL GETLST(ICORE(I0AA),1,1,1,1,92)
      IF(IUHF.EQ.0) THEN
       I0BB=I0AA
      ELSE
       I0BB=I0AA-NFBB*IINTFP
       MXCOR=MXCOR-NFBB*IINTFP
       CALL GETLST(ICORE(I0BB),1,1,1,2,92)
      ENDIF

C     AA AND BB SPIN CASES
C
      IF(IUHF.EQ.1) THEN
C
C      THESE CASES ARE ONLY NECCESARY IN THE UHF CASE
C      IN RHF THE AAAA AMPLITUDES ARE CALCULATED FROM
C      THE ABAB AMPLITUDES
C
       DO 100 ISPIN=1,2
C
        IF(ISPIN.EQ.1) THEN 
         I000=I0AA
         NF  =NFAA
        ELSE
         I000=I0BB
         NF  =NFBB
        ENDIF
        LISTT=ISPIN+143
        LISTZ=ISPIN+60
C
        DO 50 IRREP=1,NIRREP
C
        NVRTSQ=0
        DO 45 IRREPJ=1,NIRREP
         IRREPI=DIRPRD(IRREP,IRREPJ)
         NVRTSQ=NVRTSQ+VRT(IRREPJ,ISPIN)*VRT(IRREPI,ISPIN)
45      CONTINUE
C
        DISSYT=IRPDPD(IRREP,18+ISPIN)
        DISSYZ=IRPDPD(IRREP,18+ISPIN)
        NUMSYT=IRPDPD(IRREP,20+ISPIN)
        NUMSYZ=IRPDPD(IRREP,20+ISPIN)
        MAXDIM=MAX(DISSYT,DISSYZ,NUMSYT,NUMSYZ)
        I001=1
        I002=I001+IINTFP*MAXDIM*NVRTSQ
        I003=I002+IINTFP*MAXDIM*NVRTSQ
        I004=I003+IINTFP*MAXDIM*NVRTSQ

        IF(MIN(NUMSYT,NUMSYZ,DISSYT,DISSYZ).NE.0) THEN
         I005=I004+IINTFP*MAX(NUMSYT,NUMSYZ)
         IF(I005.LT.MXCOR) THEN
C
C     IN CORE VERSION
C
         CALL RCL_F1L2AA(ICORE(I001),ICORE(I002),ICORE(I003),
     &                   ICORE(I000),VRT(1,ISPIN),POP(1,ISPIN),
     &                   NVRTSQ,DISSYT,DISSYZ,NUMSYT,
     &                   NUMSYZ,NF,LISTT,LISTZ,IRREP,
     &                   ICORE(I004),ISPIN)
        ELSE
         CALL INSMEM("rcl_fab_inl2",I004,MXCOR)
        ENDIF
       ENDIF
50    CONTINUE
100   CONTINUE
      ENDIF

      NMULT = 1
      IF (RCCD .AND. IUHF .EQ. 0) NMULT = 2
C
C      AB SPIN CASE
C 
       DO IMULT = 1, NMULT 
          IF (IMULT .EQ. 1) THEN
              LISTT=146
              LISTZ=63
          ELSE
              CALL GETLST(ICORE(I0AA),1,1,1,10,92)
              Call checksum("List92-10",icore(i0AA),NF2AA)
              I0BB = I0AA
              LISTT=144
              LISTZ=61
          ENDIF
C
C    LOOP OVER IRREPS
C
       DO 200 IRREP=1,NIRREP
C
C    RETRIEVE AMPLITUDES AND CALCULATE CONTRIBUTION TO Z
C
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
        DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
        NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
        NUMSYZ=IRPDPD(IRREP,ISYTYP(2,LISTZ))
        I001=1
        I002=I001+IINTFP*NUMSYT*DISSYT
        I003=I002+IINTFP*NUMSYZ*DISSYZ
        IF(MIN(NUMSYT,NUMSYZ,DISSYT,DISSYZ).NE.0) THEN
         I004=I003+IINTFP*MAX(NUMSYT,NUMSYZ,DISSYZ,DISSYT)*3
         IF(I004.LT.MXCOR) THEN
C
C       IN CORE ALGORITHM
C
         CALL RCL_F1L2AB(ICORE(I001),ICORE(I002),ICORE(I002),
     &                   ICORE(I001),
     &                   ICORE(I0AA),ICORE(I0BB),
     &                   POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),DISSYT,
     &                   DISSYZ,NUMSYT,NUMSYZ,NFAA,NFBB,
     &                   LISTT,LISTZ,IRREP,IUHF,ICORE(I003),IMULT)
        ELSE
C
C       OUT CORE ALGORITHM
        CALL INSMEM("rcl_fab_inl2",I004,MXCOR)
        ENDIF
       ENDIF
200   CONTINUE
      ENDDO

      RETURN
      END
