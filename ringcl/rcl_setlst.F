
      SUBROUTINE RCL_SETLST(WORK,MAXCOR,IUHF)
      IMPLICIT INTEGER (A-Z)
      DIMENSION WORK(MAXCOR)
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,
     &            CC2,RCCD,DRCCD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC,
     &            CC2,RCCD,DRCCD

C PREPARE LISTs FOR FAE and FMI INTERMEIDATE AND HBAR ELEMENTS.

      DO ISPIN = 1, IUHF+1
         CALL UPDMOI(1,NF1(ISPIN),ISPIN,91,0,0)
         CALL UPDMOI(1,NF2(ISPIN),ISPIN,92,0,0)
         CALL UPDMOI(1,NT(ISPIN),ISPIN,93,0,0)
         CALL ACES_LIST_MEMSET(ISPIN,91,0)
         CALL ACES_LIST_MEMSET(ISPIN,92,0)
         CALL ACES_LIST_MEMSET(ISPIN,93,0)
      END DO

      CALL UPDMOI(1,NF1(1),10,91,0,0)
      CALL UPDMOI(1,NF2(1),10,92,0,0)
      CALL ACES_LIST_MEMSET(10,91,0)
      CALL ACES_LIST_MEMSET(10,92,0)
C
C DRIVER FOR POINTER CREATION FOR LISTS 134-139  (RING INTERMEDIATES)
C
      IMODE =0
      IRREPX=1

      CALL INIPCK(IRREPX,13,14,146,IMODE,-1,1)
      IF (RCCD .AND. IUHF .EQ.0) THEN
         CALL INIPCK(IRREPX,13,14,144,IMODE,0,1)
      ELSE
         CALL INIPCK(IRREPX,19,21,144,IMODE,0,1)
      ENDIF
      IF(IUHF.NE.0) CALL INIPCK(IRREPX,20,22,145,IMODE,0,1)

      CALL INIPCK(IRREPX,9,9,134,IMODE,0,1)
      CALL INIPCK(IRREPX,9,10,137,IMODE,0,1)
      CALL INIPCK(IRREPX,11,12,139,IMODE,0,1)
      IF (IUHF.NE.0)THEN
         CALL INIPCK(IRREPX,10,9,136,IMODE,0,1)
         CALL INIPCK(IRREPX,12,11,138,IMODE,0,1)
         CALL INIPCK(IRREPX,10,10,135,IMODE,0,1)
      ENDIF

      CALL INIPCK(IRREPX,14,18,110,IMODE,0,1)
      IF (IUHF.NE.0)THEN
         CALL INIPCK(IRREPX,3,16,107,IMODE,0,1)
         CALL INIPCK(IRREPX,4,17,108,IMODE,0,1)
         CALL INIPCK(IRREPX,14,11,109,IMODE,0,1)
      ENDIF

      IF (IUHF.EQ.1) THEN
          CALL INIPCK(IRREPX,1,3,114,IMODE,0,1)
          CALL INIPCK(IREEPX,2,4,115,IMODE,0,1)
          do iFam = 114, 115
          do iGrp = 1, nirrep
             call aces_list_memset(iGrp,iFam,0)
          end do
          end do
      END IF
      CALL INIPCK(1,13,14,116,IMODE,0,1)
      do iGrp = 1, nirrep
         call aces_list_memset(iGrp,116,0)
      end do

C I am not sure whether these get used anywhere. I used 
C list 1-2 in UHF ringcc.

CSSS      IF (IUHF.EQ.1) THEN
CSSS         CALL INIPCK(1,1,3,1,IMODE,0,1)
CSSS         CALL INIPCK(1,2,4,2,IMODE,0,1)
CSSS         do iFam = 1, 2
CSSS            do iGrp = 1, nirrep
CSSS               call aces_list_memset(iGrp,iFam,0)
CSSS            end do
CSSS         end do
CSSS      END IF
CSSS      CALL INIPCK(1,13,14,3,IMODE,0,1)
CSSS      do iGrp = 1, nirrep
CSSS         call aces_list_memset(iGrp,3,0)
CSSS      end do

      IF(IUHF.NE.0)CALL INIPCK(IRREPX,10,9,117,IMODE,0,1)
      CALL INIPCK(IRREPX,9,10,118,IMODE,0,1)
      CALL INIPCK(IRREPX,9,9,123,IMODE,0,1)
      IF(IUHF.NE.0)CALL INIPCK(IRREPX,10,10,124,IMODE,0,1)
      CALL INIPCK(IRREPX,11,11,125,IMODE,0,1)
      IF(IUHF.NE.0)CALL INIPCK(IRREPX,12,12,126,IMODE,0,1)

      CALL INIPCK(IRREPX,13,11,130,IMODE,0,1)
      IF (IUHF.NE.0)THEN
         CALL INIPCK(IRREPX,1,9,127,IMODE,0,1)
         CALL INIPCK(IREEPX,2,10,128,IMODE,0,1)
         CALL INIPCK(IREEPX,13,18,129,IMODE,0,1)
      ENDIF

C Creare list 3 and 4 to store W(A<B||I<J) -> W(AB,IJ) lists 
      
      IF(IUHF.NE.0)CALL INIPCK(IRREPX,20,22,4,IMODE,0,1)
      CALL INIPCK(IRREPX,19,21,3,IMODE,0,1)
   
      RETURN
      END
