C
      SUBROUTINE MKDBLAA4(T2, Z2, FMI, POP, NOCCSQ1, NOCCSQ2, DISSYT,
     &                    DISSYZ, NUMSYT, NUMSYZ, NFSIZ, LISTT, LISTZ, 
     &                    IRREPTR, IRREPQR, IRREPX, ISPIN, TMP)
C
      IMPLICIT DOUBLE PRECISION(A-H, O-Z)
      INTEGER DISSYT,DISSYZ,DIRPRD,POP
      CHARACTER*8 SPCASE(2)
      DIMENSION T2(DISSYT,NOCCSQ1),Z2(DISSYZ,NOCCSQ1),FMI(NFSIZ)
      DIMENSION TMP(1),POP(8),ITOFF(8)
C
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &                DIRPRD(8,8)
      COMMON/FLAGS/ IFLAGS(100)
      COMMON/FILES/ LUOUT,MOINTS
C
      DATA AZERO,ONE,ONEM /0.0D0,1.0D0,-1.0D0/
      DATA SPCASE /'AAAA =  ', 'BBBB =  '/
C
C Common blocks used in the quadratic term
C
      COMMON /QADINTI/ INTIMI, INTIAE, INTIME
      COMMON /QADINTG/ INGMNAA, INGMNBB, INGMNAB, INGABAA,
     &                 INGABBB, INGABAB, INGMCAA, INGMCBB,
     &                 INGMCABAB, INGMCBABA, INGMCBAAB,
     &                 INGMCABBA
      COMMON /APERTT1/ IAPRT1AA
      COMMON /BPERTT1/ IBPRT1AA
      COMMON /APERTT2/ IAPRT2AA1, IAPRT2BB1, IAPRT2AB1, IAPRT2AB2, 
     &                 IAPRT2AB3, IAPRT2AB4, IAPRT2AA2, IAPRT2BB2,
     &                 IAPRT2AB5 
C
C Get T2(beta) amplitudes
C
      CALL GETLST(T2, 1, NUMSYT, 2, IRREPTR, LISTT)
      CALL SYMEXP(IRREPTR, POP, DISSYT, T2)
      CALL ZERO(Z2, DISSYZ*NOCCSQ1)
C
C Perform multiplication
C
      JOFF = 1     
      KOFF = 1
      ITOFF(1) = 1 
C
      DO 5000 IRREPM = 2, NIRREP
C
         IRREP = IRREPM - 1
         IRREPI = DIRPRD(IRREP, IRREPTR)
         ITOFF(IRREPM) = ITOFF(IRREPM - 1) + POP(IRREP)*POP(IRREPI)
C
 5000 CONTINUE
C
      DO 90 IRREPJ = 1, NIRREP
C
         IRREPIJ = IRREPJ
         IRREPIM = DIRPRD(IRREPIJ, IRREPX)
         IRREPTM = IRREPIM
         IRREPTI = DIRPRD(IRREPTM, IRREPTR)
C
         NOCCIJ = POP(IRREPIJ)
         NOCCIM = POP(IRREPIM)
         NOCCTI = POP(IRREPTI)
         NOCCTM = POP(IRREPTM)
C
         IOFF = ITOFF(IRREPTM)
C
         IF (NOCCTI .GT. 0 .AND. NOCCIM .GT. 0) THEN
C     
            CALL XGEMM('N', 'N', DISSYT*NOCCTI, NOCCIJ, NOCCTM, ONEM,
     &                  T2(1,IOFF), NOCCTI*DISSYT, FMI(JOFF), NOCCIM,
     &                  AZERO, Z2(1,KOFF), NOCCTI*DISSYZ)
         ENDIF
C
         KOFF = KOFF + NOCCIJ*NOCCTI
         JOFF = JOFF + NOCCIM*NOCCIJ
C
 90   CONTINUE
C
      CALL ASSYM(IRREPQR, POP, DISSYZ, DISSYZ, T2, Z2)
C
C Update the doubles list and write back the doubles list
C
      IF (IFLAGS(1) .GE. 20) THEN
         NSIZE = DISSYZ*NUMSYZ
         CALL HEADER('Checksum @-IMIINSD Doubles', 0, LUOUT)
         WRITE(LUOUT, *) SPCASE(ISPIN), SDOT(NSIZE, Z2, 1,
     &                      Z2, 1)
      ENDIF
C
      CALL GETLST(Z2, 1, NUMSYZ, 1, IRREPQR, LISTZ)
      CALL VADD(Z2, Z2, T2, NUMSYZ*DISSYZ, ONE)
      CALL PUTLST(Z2, 1, NUMSYZ, 1, IRREPQR, LISTZ)
C
      RETURN
      END
