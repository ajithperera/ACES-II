      
      SUBROUTINE PLINEQY(SCR,MAXCOR,IUHF,ASMALL,ASQUARE,KMAX,IRREPX,
     &   IOFFSET,IPERT,FREQ,ISIDE,REALFREQ,
     &   C, HXC, Y1, X1, H0, N1AA, NDIM)
      
C
C THIS ROUTINE SOLVES A LINEAR SET OF EQUATIONS THAT INVOLVES A
C PARTIONED EOM MATRIX.
C THE SYSTEM TO BE SOLVED IS
C
C      A X1 + B X2 = Y1
C      C X1 + D X2 = Y2
C
C  WHERE D IS A DIAGONAL MATRIX
C
C  WE FIND X2 = D^-1 ( Y2 - C X1)
C          ( A - B D^-1 C ) X1 = Y1 - B D^-1 Y2
C
C  THE LATTER IS A STANDARD LINEAR EQUATION FOR X1, THAT IS SOLVED IN
C  A SIMILAR FASHION AS IN LINEQY
C  WE SUPPOSEDLY CAN HOLD THE INFORMATION ON THE X1 VECTORS IN CORE
C  AND THIS REDUCES THE I/O REQUIREMENTS SIGNIFICANTLY.
C
C  THE ROUTINE PHBARXC PERFORMS THE MULTIPLICATION (A - B D^-1 C) X1
C  THE ROUTINE HBARXC2 IS A VERY SLIGHT MODIFICATION OF HBARXC
C
C  THE TOTAL MEMORY REQUIREMENT IS 
C     KMAX**2 + KMAX + 2 * KMAX * NDIM + 3 * NDIM + 2 * NSIZEC
C
C   KMAX IS MAXIMUM ITERATIVE SUBSPACE
C   NDIM IS THE DIMENSION OF THE SINGLES
C   NSIZEC IS TOTAL LENGTH OF EOM VECTORS.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL CONVRG, REALFREQ
      LOGICAL PRINT,PRINT2, PRINT3
      LOGICAL DOUBLE, SS, SD, DS, DD
C
      DIMENSION SCR(MAXCOR),ASMALL(KMAX,KMAX),ASQUARE(KMAX)
      DIMENSION C(NDIM,KMAX), HXC(NDIM,KMAX), Y1(NDIM), X1(NDIM),
     &   H0(NDIM)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/FLAGS/IFLAGS(100)
      COMMON/TIMSUB/TDAVID, TMULT, TQUAD
      COMMON/EXTRAP/MAXEXP,NREDUCE,NTOL,NSIZEC
      COMMON/DRVHBAR/SS, SD, DS, DD
      COMMON /TIMEINFO/ TIMEIN, TIMENOW, TIMETOT, TIMENEW
C
      DATA ONE,ONEM,ZILCH,TWO /1.0D0,-1.0D0,0.0D0,2.0D0/
C
      PRINT2=IFLAGS(1) .GE. 10
      PRINT=IFLAGS(1).GE.1
      PRINT3=IFLAGS(1).GE.2
C
      CUTOFF=1.D-18
C
      IF(FREQ.NE.ZILCH)THEN
       IF(REALFREQ)THEN
        WRITE(6,5004)FREQ
      ELSE
        WRITE(6,*) ' IMAGINARY FREQUENCY NOT IMPLEMENTED YET'
        CALL ERREX
        WRITE(6,5005)SQRT(FREQ)
       ENDIF 
5004   FORMAT(T3,'@PLINEQY-I, Frequency is ',F15.10,' a.u.')
5005   FORMAT(T3,'@PLINEQY-I, Imaginary frequency is ',F15.10,' a.u.')
      ENDIF
C
      I000=1
      I010=I000+NSIZEC
      I020=I010+NSIZEC
      IF (I020 .GT. MAXCOR) THEN
         CALL INSMEM('PLINEQY', I020, MAXCOR)
      ENDIF
      
C
C PUT Hd ELEMENTS ON LIST 472
C
      CALL HBARDIAG(IRREPX,SCR,MAXCOR,IUHF,FREQ)
C
      CALL GETLST(SCR(I000),1,1,1,1,472)
      DO I = 1, NDIM
        H0(I) = SCR(I000+I-1)
      ENDDO
C
C  PROCESS Y:  Y = Y1 - B D^-1 Y2
C
      CALL GETLST(SCR(I010),IOFFSET,1,1,IRREPX,372+ISIDE)
      DO I = 1, NDIM
        Y1(I) = SCR(I010 + I -1)
      ENDDO
      DO I = NDIM, NSIZEC - 1
        SCR(I010 + I) = - SCR(I010+I) / SCR(I000+I)
      ENDDO
      CALL ZERO(SCR(I010), NDIM)
      CALL UPDATES(IRREPX,SCR(I010),444,0,IUHF)
      CALL HBARXC2(SCR, MAXCOR*IINTFP, IUHF, ISIDE, IRREPX,
     &   .TRUE., .TRUE., .TRUE., .FALSE.)
      CALL GETLST(SCR, 1,1,1,3, 490)
      IF (IUHF .NE. 0) CALL GETLST(SCR(N1AA+1),1,1,1,4,490)
      DO I = 1, NDIM
        Y1(I) = Y1(I) + SCR(I)
      ENDDO
C
C   Y1 CONTAINS THE PROPER INHOMOGENEOUS VECTOR
C
      CALL SCOPY(NDIM, Y1, 1, X1, 1)
C
      IF(.NOT.REALFREQ)THEN
       CALL UPDATES(IRREPX,SCR(I000),444,0,IUHF)
       CALL HBARXC(SCR(I000),MAXCOR,IUHF,ISIDE,IRREPX)
       CALL FETCHVEC(IRREPX,SCR(I000),IUHF,2,490,460)
      ENDIF
C     
C INITIATE CONSTRUCTION OF SOLUTION SPACE
C      
      CALL ZERO(ASMALL,KMAX*KMAX)
C
C SCALE INPUT VECTOR WITH DIAGONAL ELEMENTS OF HBAR - Hd-1 * M
C
      IF(REALFREQ)THEN
        DO 901 I=1,NDIM
          Y1(I) = Y1(I) / H0(I)
  901   CONTINUE
      ELSE
        DO 905 I = 1, NDIM
          Y1(I) = Y1(I) / (H0(I)**2)
  905   CONTINUE 
      ENDIF
C
C NORMALIZE VECTOR - THIS IS FIRST ELEMENT OF EXPANSION SPACE
C
      ZNORM=SQRT(SDOT(NDIM,Y1,1,Y1,1))
      X0=ONE/ZNORM
      CALL SSCAL(NDIM,X0,Y1,1)
      CALL ZERO(SCR,NSIZEC)
      CALL SCOPY(NDIM, Y1 , 1, SCR, 1)
      CALL UPDATES(IRREPX,SCR,444,0,IUHF)
C
      CALL SCOPY(NDIM, Y1, 1, C(1,1),1)
C
      CALL SCOPY(NDIM,X1,1,Y1,1)
C
      ASQUARE(1)=ONE
C
C BUILD REMAINING EXPANSION SPACE
C
      CALL TIMER(1)
      DO 1000 K=1,KMAX
C
C CALCULATE [Hd(-1) * D]*C(k) = Hd(-1) * [H*C(k) - Hd*C(k)]
C
        CALL ZERO(SCR, NSIZEC)
        CALL SCOPY(NDIM, C(1,K), 1, SCR, 1)
        CALL UPDATES(IRREPX,SCR(I000),444,0,IUHF)
        CALL TIMER(1)      
        TDAVID = TDAVID + TIMENEW
        CALL PHBARXC(SCR(I000),MAXCOR*IINTFP,IUHF,ISIDE,IRREPX,
     &     SS, SD, DS, DD)
        CALL TIMER(1)
        CALL GETLST(SCR, 1, 1, 1, 3, 490)
        IF (IUHF .NE. 0) CALL GETLST(SCR(N1AA+1),1,1,1,4,490)
C
       IF(.NOT.REALFREQ)THEN
        CALL UPDATES(IRREPX,SCR(I000),444,0,IUHF)
        CALL TIMER(1)      
        TDAVID = TDAVID + TIMENEW
        CALL HBARXC(SCR(I000),MAXCOR,IUHF,ISIDE,IRREPX)
        CALL TIMER(1)
        CALL FETCHVEC(IRREPX,SCR(I000),IUHF,2,490,460)
       ENDIF
C
C ADD FREQUENCY DEPENDENCE
C
       CALL SAXPY(NDIM,FREQ,C(1,K),1,SCR,1)
C
        IF(.NOT.REALFREQ)THEN
          DO I =1, NSIZEC
            scr(i010-1+i)=scr(i010-1+i)**2
          ENDDO
        ENDIF
C
       DO 902 I=1,NDIM
        SCR(I)=(SCR(I)-H0(I)*C(I,K))/ H0(I)
902    CONTINUE 
C     
       CALL SCOPY(NDIM,SCR,1,HXC(1,K),1)
C
       DO 100 I=1,K
        DO 101 J=1,K
         ASMALL(I,J)=SDOT(NDIM,C(1,I),1,HXC(1,J),1)
101     CONTINUE
100    CONTINUE
C
C ORTHOGONALIZE H'*C(k) TO EXISTING SUBSPACE
C
       CALL SCOPY(NDIM,HXC(1,K),1,SCR,1)
       DO 102 I=1,K
        Z=-ASMALL(I,K)/ASQUARE(I)
        CALL SAXPY(NDIM,Z,C(1,I),1,SCR,1)
102    CONTINUE
C
       ASQUARE(K+1)=SDOT(NDIM,SCR,1,SCR,1)
       RESID=ASQUARE(K+1)
C
       IF(PRINT)THEN
        WRITE(6,5002)K,RESID
5002    FORMAT(T3,'@PLINEQY-I, Residual after ',I5,' iterations is ',
     &         D15.10,'.')
      ENDIF
C
      CALL SCOPY(NDIM,SCR,1,C(1,K+1), 1)
       IF(RESID.LT.CUTOFF)THEN
        ASQUARE(K+1)=ONE
        WRITE(6,5003)K
5003    FORMAT(T3,'@PLINEQY-I, Derivative amplitudes converged',
     &            ' after ',I5,
     &            ' iterations.')
        GOTO 300
       ENDIF 
C
1000  CONTINUE
C
      GOTO 999
C
300   WRITE(6,5000)
      WRITE(6,*)
5000  FORMAT(T3,'@PLINEQY-I, Solving linear equation in reduced ',
     &          'subspace.')
C
C FIRST WE MUST MODIFY SUBSPACE MATRIX, WHICH IS CURRENTLY A REPRESENTATION
C OF THE OPERATOR [Hd(-1) * D] TO [1 + Hd(-1) * D].  THIS IS SIMPLY 
C ACCOMPLISHED BY ADDING THE NORM OF THE APPROPRIATE EXPANSION VECTORS
C TO THE DIAGONAL ELEMENTS.
C
      CALL SAXPY(K,ONE,ASQUARE,1,ASMALL,KMAX+1)
C
C INVERT SUBSPACE REPRESENTATION OF [1 + Hd(-1) * D]
C
      CALL MINV(ASMALL,K,KMAX,SCR(I000),DET,TOL,0,1)
C
C GENERATE SINGLES SOLUTION VECTOR AS LINEAR COMBINATION OF BASIS VECTORS
C
      CALL ZERO(X1,NDIM)
      DO 340 I=1,K
       CALL SAXPY (NDIM,ASMALL(I,1)/X0,C(1,I),1,X1,1)
340   CONTINUE
C
C   CHECK SOLUTION
C
      IF (PRINT2) THEN
        CALL ZERO(SCR, NSIZEC)
        CALL SCOPY(NDIM, X1, 1, SCR, 1)
        CALL UPDATES(IRREPX,SCR(I000),444,0,IUHF)
        CALL PHBARXC(SCR(I000),MAXCOR*IINTFP,IUHF,ISIDE,IRREPX,
     &     SS, SD, DS, DD)
        CALL GETLST(SCR(I000), 1, 1, 1, 3, 490)
        IF (IUHF .NE. 0) THEN
          CALL GETLST(SCR(I000+N1AA), 1,1,1,4,490)
        ENDIF
C
C ADD FREQUENCY DEPENDENCE
C
       CALL SAXPY(NDIM,FREQ,X1,1,SCR,1)
C
        WRITE(6,*) ' A * X1 '
        CALL OUTPUT(SCR, 1, 1, 1, NDIM, 1, NDIM, 1)
        WRITE(6,*) ' EQUALS Y ?'
        CALL OUTPUT(Y1, 1, 1, 1, NDIM, 1, NDIM, 1)
        DIFF = ZILCH
        DO I = 1, NDIM
          DIFF = DMAX1(ABS(Y1(I) - SCR(I)),DIFF)
        ENDDO
        WRITE(6,*) ' DIFFERENCE ', DIFF
      ENDIF
C
      IF(PRINT2)THEN
       WRITE(6,1001)
1001   FORMAT(T3,'@LINEQY-I, Derivative T1 amplitudes : ')
       CALL PRVECR(X1,NDIM)
      ENDIF
C
C  DETERMINE FULL SOLUTION VECTOR X2 = HD^-1 * ( Y2 - HC X1)
C
      CALL GETLST(SCR(I000),IOFFSET,1,1,IRREPX,372+ISIDE)
      CALL GETLST(SCR(I010),1,1,1,1,472)
      DO I = 1, NSIZEC
        SCR(I000+I-1) = SCR(I000+I-1) / SCR(I010+I-1)
      ENDDO
      CALL ZERO(SCR(I010), NSIZEC)
      DO I = 1, NDIM
        SCR(I010+I-1) =  X1(I)
      ENDDO
      CALL UPDATES2(IRREPX, SCR(I010), 444, 0, 490, IUHF)
      CALL PHBARXC(SCR(I010),(MAXCOR-I010+1)*IINTFP,IUHF,ISIDE,IRREPX,
     &   .TRUE., .TRUE., .FALSE., .FALSE.)      
      CALL LOADVEC2(IRREPX, SCR(I010),MAXCOR, IUHF, 490,0,
     &   443, NSIZEC, .FALSE.)
      DO I = 1, NSIZEC
        SCR(I000+I-1) = SCR(I000+I-1) + SCR(I010+I-1)
      ENDDO
      DO I = 1, NDIM
        SCR(I) =  X1(I)
      ENDDO
C
      IF (PRINT3 ) THEN
        WRITE(6,*) ' CHECK COMPLETE SOLUTION  '
        CALL UPDATES2(IRREPX, SCR, 444, 0, 490, IUHF)
        CALL HBARXC(SCR,MAXCOR*IINTFP,IUHF,ISIDE,IRREPX)
        CALL LOADVEC2(IRREPX, SCR(I000),MAXCOR, IUHF, 490,2,
     &     460, NSIZEC, .FALSE.)
        DO I = 1, NDIM
          SCR(I) = SCR(I) + FREQ * X1(I)
        ENDDO
        CALL GETLST(SCR(I010),IOFFSET,1,1,IRREPX,372+ISIDE)
        DIFF = ZILCH
        DO I=1, NSIZEC
          DIFF = DMAX1(DIFF, ABS(SCR(I000+I-1) - SCR(I010+I-1)))
        ENDDO
        WRITE(6,*) ' DIFFERENCE BETWEEN A*X AND Y ', DIFF
        CALL LOADVEC2(IRREPX, SCR(I000),MAXCOR, IUHF, 490,0,
     &     443, NSIZEC, .FALSE.)
      ENDIF
C
C WRITE SOLUTION VECTOR TO DISK
C
      CALL PUTLST(SCR(I000),IOFFSET,1,1,IRREPX,372+ISIDE)
C
      IF(PRINT2)THEN
       WRITE(6,1002)
 1002  FORMAT(T3,'@LINEQY-I, Derivative T amplitudes : ')
       CALL PRVECR(SCR(I000),NSIZEC)
      ENDIF
C
      CALL TIMER(1)      
      TDAVID = TDAVID + TIMENEW
      RETURN
999   WRITE(6,5001)KMAX
      CALL ERREX
5001  FORMAT(T3,'@PLINEQY-F, Convergence failed after ',I5,
     &          ' iterations.')
      RETURN
      END
