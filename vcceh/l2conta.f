      SUBROUTINE L2CONTA(ICORE,MAXCOR,IUHF,IRREPX,S0,TM)
C
C THIS ROUTINE CALCULATES CONTRIBUTION TO THE RIGHT-HAND EOM-CC
C TRANSITION MOMENT WHICH ARISES FROM CONTRACTIONS WHICH INVOLVE
C THE L2 AMPLITUDES.
C
C    =               _                           _ 
C    M (ab,ij) = S0* M(ab,ij) + P(ab) S(ae,ij) * M(be) 
C                                 _                           _
C              - P(ij) S(ab,im) * M(Mj)  + P(ai)P(bj) S(ai) * M(bj)
C
C                        =
C        TM = L(ab,ij) * M(ab,ij)
C
C THE TRANSFORMED DIPOLE OPERATOR IS THEN STORED ON LOGICAL RECORDS
C 4-6 OF LISTS 476-481 FOR EACH SYMMETRY TYPE.  THE UNTRANSFORMED
C DIPOLE INTEGRALS ARE ALWAYS RESIDENT ON LOGICAL RECORDS 1-3.
C
C THIS IS THE CODE FOR RHF REFERENCE FUNCTIONS
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,SDOT,TM(3),TWO
      LOGICAL RHF
C
      DIMENSION ICORE(MAXCOR),IDID(8)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYMLOC/ ISYMOFF(8,8,25)
C
      DATA ONE  /1.0/
      DATA TWO  /2.0/
      DATA ONEM /-1.0/
      DATA ZILCH/0.0/
C
      LISTS0=434
C
C LOOP OVER CARTESIAN DIRECTIONS
C
      DO 90 IXYZ=1,3
C
C LOOP OVER IRREPS 
C
       DO 100 IRREPDO=1,NIRREP
        IRREPZL=IRREPDO
        IRREPZR=IRREPDO
        IRREPSL=IRREPDO
        IRREPSR=DIRPRD(IRREPX,IRREPDO)
        LISTS=LISTS0-1+4
        DISSYZ=IRPDPD(IRREPDO,ISYTYP(1,LISTS))
        NUMDSZ=IRPDPD(IRREPDO,ISYTYP(2,LISTS))
        DISSYS=IRPDPD(IRREPSL,ISYTYP(1,LISTS))
        NUMDSS=IRPDPD(IRREPSR,ISYTYP(2,LISTS))
        MAXT=MAX(DISSYS,NUMDSS,DISSYZ,NUMDSZ)
        I000=1
        I010=I000+IINTFP*NUMDSZ*DISSYZ
        I020=I010+IINTFP*NUMDSS*DISSYS
        I030=I020+IINTFP*IRPDPD(IRREPX,22)
        I040=I030+IINTFP*IRPDPD(IRREPX,20)
        I050=I040+IINTFP*MAXT
        I060=I050+IINTFP*MAXT
        I070=I060+IINTFP*MAXT
        CALL GETLST(ICORE(I010),1,NUMDSS,1,IRREPSR,LISTS)
        CALL GETLST(ICORE(I020),IXYZ+3,1,1,IRREPX,476)
        CALL GETLST(ICORE(I030),IXYZ+3,1,1,IRREPX,478)
C
C CARRY OUT  -S(AI,bm) * Q(mj) CONTRACTION
C
        IOFFQ0=I020
        IOFFS0=I010
        IOFFZ0=I000
        DO 110 IRREPM=1,NIRREP
         IRREPJ=DIRPRD(IRREPM,IRREPX)
         IRREPB=DIRPRD(IRREPM,IRREPSR)
         NUMM=POP(IRREPM,2)
         NUMJ=POP(IRREPJ,2)
         NUMB=VRT(IRREPB,2)
         NROW=DISSYS*NUMB
         NCOL=NUMJ
         NSUM=NUMM
         IOFFQ=IOFFQ0+IINTFP*(ISYMOFF(IRREPJ,IRREPX,22)-1)
         IOFFS=IOFFS0+IINTFP*DISSYS*(ISYMOFF(IRREPM,IRREPSR,10)-1)
         IOFFZ=IOFFZ0+IINTFP*DISSYZ*(ISYMOFF(IRREPJ,IRREPZR,10)-1)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFS),NROW,
     &              ICORE(IOFFQ),NSUM,ZILCH,ICORE(IOFFZ),NROW)
110     CONTINUE
C
C NOW TRANSPOSE KET INDICES
C
        CALL SYMTR1(IRREPZR,VRT(1,2),POP(1,2),DISSYS,ICORE(I000),
     &              ICORE(I040),ICORE(I050),ICORE(I060))
        CALL SYMTR1(IRREPSR,VRT(1,2),POP(1,2),DISSYS,ICORE(I010),
     &              ICORE(I040),ICORE(I050),ICORE(I060))
C
C NOW CARRY OUT T(AI,je) * F(eb) CONTRACTION
C
        IOFFQ0=I030
        IOFFS0=I010
        IOFFZ0=I000
        DO 120 IRREPE=1,NIRREP
         IRREPB=DIRPRD(IRREPE,IRREPX)
         IRREPJ=DIRPRD(IRREPE,IRREPSR)
         NUMJ=POP(IRREPJ,2)
         NUME=VRT(IRREPE,2)
         NUMB=VRT(IRREPB,2)
         NROW=DISSYS*NUMJ
         NCOL=NUMB
         NSUM=NUME
         IOFFQ=IOFFQ0+IINTFP*(ISYMOFF(IRREPB,IRREPX,20)-1)
         IOFFS=IOFFS0+IINTFP*DISSYS*(ISYMOFF(IRREPE,IRREPSR,17)-1)
         IOFFZ=IOFFZ0+IINTFP*DISSYZ*(ISYMOFF(IRREPB,IRREPZR,17)-1)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFS),NROW,
     &              ICORE(IOFFQ),NSUM,ONE,ICORE(IOFFZ),NROW)
120     CONTINUE
C
C  TRANSPOSE KET INDICES OF TARGET
C
        CALL SYMTR1(IRREPZR,POP(1,2),VRT(1,2),DISSYS,ICORE(I000),
     &              ICORE(I040),ICORE(I050),ICORE(I060))
C
C ADD IN DISCONNECTED CONTRIBUTION S(ai) * M(bj)
C
        IF(IRREPDO.EQ.IRREPX)THEN
         NSIZE=IRPDPD(IRREPX,9)
         I020=I010+IINTFP*IRPDPD(IRREPX,9)
         I030=I020+IINTFP*IRPDPD(IRREPX,9)
         CALL GETLST(ICORE(I010),1,1,1,1,490)
         CALL GETLST(ICORE(I020),IXYZ+3,1,1,IRREPX,480)
         CALL XGEMM('N','N',NSIZE,NSIZE,1,ONE,ICORE(I010),NSIZE,
     &              ICORE(I020),1,ONE,ICORE(I000),NSIZE)
        ENDIF
C
C SYMMETRIZE
C
        CALL MPMT(ICORE(I000),NUMDSZ)
C
C CONTRACT WITH SPIN-ADAPTED L2 AMPLITUDES
C
        I020=I010+NUMDSZ*DISSYZ*IINTFP
        I030=I020+NUMDSZ*DISSYZ*IINTFP
        CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPDO,137)
        CALL SSCAL (NUMDSZ*DISSYZ,TWO,ICORE(I010),1)
        CALL GETLST(ICORE(I020),1,NUMDSZ,1,IRREPDO,139)
        CALL SAXPY (NUMDSZ*DISSYZ,ONEM,ICORE(I020),1,ICORE(I010),1)
C
        TM(IXYZ)=TM(IXYZ)+
     &           SDOT(DISSYZ*NUMDSZ,ICORE(I010),1,ICORE(I000),1)
100    CONTINUE
90    CONTINUE
      RETURN
      END
