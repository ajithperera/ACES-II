      SUBROUTINE OPRBAR(ICORE,MAXCOR,IUHF,LABEL,IRREPX,IOFFSET,IPERT,
     &                  MEXPECT,MBAR00,VPROP,LEFT,RIGHT,IEOMPROP)
C
C THIS ROUTINE SERVES AS A DRIVER FOR THE CALCULATION OF
C MATRIX ELEMENTS OF THE TRANSFORMED ONE-PARTICLE OPERATORS
C
C    M(R) = <h|exp(-T) M exp(T)|0>
C
C    M(L) = <0|L exp(-T) M exp(T) |h>
C
C WHERE h SPANS THE SPACE OF SINGLY AND DOUBLY EXCITED
C DETERMINANTS.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION SDOT,X1,X00,MEXPECT,MBAR00,H0QM,HGGM,SNRM2,
     &                 ONEM
      CHARACTER*8 LABEL
      LOGICAL VPROP,LEFT,RIGHT, SKIP
      DIMENSION ICORE(MAXCOR),IOFFABIJ(3)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/FILES/LUOUT,MOINTS
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/INFO/NOCCO(2),NVRTO(2)
      COMMON/FLAGS/IFLAGS(100)
      COMMON/EXTRAP/MAXEXP,NREDUCE,NTOL,NSIZEC
C
      DATA ONEM /-1.0D+00/
C
      IONE=1
C
      IF (IFLAGS(18) .EQ. 8) THEN
         IANTI = 1
      ELSE
         IANTI = 0
      ENDIF
C
      NBAS=NOCCO(1)+NVRTO(1)
      CALL GETREC(20,'JOBARC','NBASTOT ',IONE,NBAST)
C
C ALLOCATE CORE FOR BARE M(ij), M(ab) AND M(ai) MATRIX ELEMENTS
C AND THE SIMILARITY TRANSFORMED MBAR(ij), MBAR(ab), MBAR(ai),
C MBAR(ia) AND MBAR(ab,ij) ELEMENTS.
C
      LENOO=IRPDPD(IRREPX,21)+IUHF*IRPDPD(IRREPX,22)
      LENVV=IRPDPD(IRREPX,19)+IUHF*IRPDPD(IRREPX,20)
      LENVO=IRPDPD(IRREPX,9)+IUHF*IRPDPD(IRREPX,10)
      LENGTH  =IDSYMSZ(IRREPX,ISYTYP(1,46),ISYTYP(2,46))
      IF(IUHF.NE.0)THEN
       IOFFABIJ(3)=1
       IOFFABIJ(2)=IOFFABIJ(3)+LENGTH
       IOFFABIJ(1)=IOFFABIJ(2)+IDSYMSZ(IRREPX,ISYTYP(1,45),ISYTYP(2,45))
       DO 1000 ISPIN=1,2
        LENGTH=LENGTH+IDSYMSZ(IRREPX,ISYTYP(1,43+ISPIN),
     &                               ISYTYP(2,43+ISPIN))
1000   CONTINUE
      ENDIF 
C
      IMAI=1
      IMIJ=IMAI+IINTFP*LENVO
      IMAB=IMIJ+IINTFP*LENOO
      IMRAIBAR=IMAB+IINTFP*LENVV
      IMTWOPAR=IMRAIBAR+IINTFP*LENVO
      IMRIJBAR=IMTWOPAR
C      IMRIJBAR=IMTWOPAR+IINTFP*LENGTH
      IMRABBAR=IMRIJBAR+IINTFP*LENOO
      IMRIABAR=IMRABBAR+IINTFP*LENVV
      I000=    IMRIABAR+IINTFP*LENVO
      I010=   I000+IINTFP*NBAST*NBAST
      I020=   I010+IINTFP*4*NBAST*NBAST
C 
C Let's check to make sure we have enough core memory
C
      IF (I020 .GE. MAXCOR) CALL INSMEM('OPRBAR', I020, MAXCOR)
C
C CALCULATE M(ij), M(ab) AND M(ai) MATRIX ELEMENTS FROM ATOMIC
C BASIS REPRESENTATON
C
      IF(.NOT.VPROP)LABEL='RHOSQ001'
      CALL OPR2MO(LABEL,ICORE(IMIJ),ICORE(IMAB),ICORE(IMAI),
     &            ICORE(I000),ICORE(I010),NBAS,NBAST,IUHF,IRREPX,
     &            IPERT,VPROP)
C
C INITIALIZE MBAR(R) ELEMENTS
C
      CALL SCOPY(LENOO,ICORE(IMIJ),1,ICORE(IMRIJBAR),1) 
      CALL SCOPY(LENVO,ICORE(IMAI),1,ICORE(IMRAIBAR),1) 
      CALL SCOPY(LENVV,ICORE(IMAB),1,ICORE(IMRABBAR),1) 
      CALL SCOPY(LENVO,ICORE(IMAI),1,ICORE(IMRIABAR),1) 
      IF (IANTI .EQ. 1) CALL SSCAL(LENVO, ONEM, ICORE(IMRIABAR), 1)
C      CALL ZERO (ICORE(IMTWOPAR),LENGTH)
C
      CALL OPRBAR0(ICORE(IMIJ),ICORE(IMAB),ICORE(IMAI),
     &             ICORE(I000),MAXCOR-I000+1,IUHF,IRREPX,
     &             MEXPECT,MBAR00)
C
C CALCULATE ONE-PARTICLE M(R) TRANSFORMED OPERATOR MATRIX ELEMENTS
C
      CALL OPRBAR1R(ICORE(IMIJ),ICORE(IMAB),ICORE(IMAI),
     &                 ICORE(IMRIJBAR),ICORE(IMRABBAR),
     &                 ICORE(IMRAIBAR),ICORE(IMRIABAR),
     &                 ICORE(I000),MAXCOR-I000+1,IUHF,
     &                 IRREPX,1,MBAR00,IEOMPROP)
C
C CALCULATE TWO-PARTICLE M(R) TRANSFORMED OPERATOR MATRIX ELEMENTS
C     
         IF (IUHF .EQ. 0) THEN
C
            CALL OPRBAR2R(LISTMBAR,ICORE(IMRABBAR),ICORE(IMRIJBAR),
     &                    ICORE(IMRIABAR),ICORE(IMTWOPAR),ICORE(I000),
     &                    MAXCOR-I000+1,IUHF,IRREPX,1,MBAR00,
     &                    IEOMPROP)
C
         ELSE
C
            CALL OPRBAR2U(LISTMBAR,ICORE(IMRABBAR),ICORE(IMRIJBAR),
     &                    ICORE(IMRIABAR),ICORE(IMTWOPAR),ICORE(I000),
     &                    MAXCOR-I000+1,IUHF,IRREPX,1,MBAR00,IOFFABIJ,
     &                    IEOMPROP)
         ENDIF
C
C Put M(R) vector on list 373. Notice the change from the original
C EOM-CC code in which the perturb amplitudes were written to list
C 473. 08/1994 by Ajith
C
      IF (RIGHT) THEN
C
        CALL LOADVEC2(IRREPX,ICORE(I000),MAXCOR-I000+1,IUHF,490,
     &     0,443, NSIZEC, .FALSE.)
        CALL SCOPY(LENVO,ICORE(IMRAIBAR),1,ICORE(I000),1)
C
         CALL PUTLST(ICORE(I000), IOFFSET, 1, 1, IRREPX, 373)
CSSS         call checksum("oprbar-rt :",icore(i000),nsizec)
C
      ENDIF
C
C NOW INITIALIZE MBAR(L) ELEMENTS
C
      IMLAIBAR=I000
      IMTWOPAR=IMLAIBAR+IINTFP*LENVO
      IMLIJBAR=IMTWOPAR
C      IMLIJBAR=IMTWOPAR+IINTFP*LENGTH
      IMLABBAR=IMLIJBAR+IINTFP*LENOO
      IMLIABAR=IMLABBAR+IINTFP*LENVV
      I000    =IMLIABAR+IINTFP*LENVO
C
C 07/95 Memory checks were added by Ajith
C
      IF (I000 .GE. MAXCOR) CALL INSMEM('OPRBAR', I000, MAXCOR)
      MXCOR   =MAXCOR-I000+1
C
      CALL SCOPY(LENVO,ICORE(IMAI),1,ICORE(IMLAIBAR),1) 
      CALL SCOPY(LENVO,ICORE(IMAI),1,ICORE(IMLIABAR),1) 
      CALL SCOPY(LENVV,ICORE(IMAB),1,ICORE(IMLABBAR),1) 
      CALL SCOPY(LENOO,ICORE(IMIJ),1,ICORE(IMLIJBAR),1) 
      IF (IANTI .EQ. 1) CALL SSCAL(LENVO, ONEM, ICORE(IMLIABAR), 1)
C
C NOW CALCULATE ONE-PARTICLE M(L) TRANSFORMED OPERATOR MATRIX ELEMENTS
C
C      CALL ZERO(ICORE(IMTWOPAR),LENGTH)
C
      IF (LEFT) THEN
C
         CALL OPRBAR1R(ICORE(IMRIJBAR),ICORE(IMRABBAR),
     &                 ICORE(IMRAIBAR),ICORE(IMLIJBAR),
     &                 ICORE(IMLABBAR),ICORE(IMLAIBAR),
     &                 ICORE(IMLIABAR),ICORE(I000),MXCOR,
     &                 IUHF,IRREPX,2,MBAR00-MEXPECT,IEOMPROP)
C
C NOW CALCULATE TWO-PARTICLE M(L) TRANSFORMED OPERATOR MATRIX ELEMENTS
C
         IF(IUHF.EQ.0)THEN
C
            CALL OPRBAR2R(LISTMBAR,ICORE(IMRABBAR),
     &                    ICORE(IMRIJBAR),ICORE(IMRIABAR),
     &                    ICORE(IMTWOPAR),ICORE(I000),MXCOR,
     &                    IUHF,IRREPX,2,MBAR00-MEXPECT,IEOMPROP)
         ELSE 
            CALL OPRBAR2U(LISTMBAR,ICORE(IMRABBAR),ICORE(IMRIJBAR),
     &                    ICORE(IMRIABAR),ICORE(IMTWOPAR),
     &                    ICORE(I000),MXCOR,IUHF,IRREPX,2,
     &                    MBAR00-MEXPECT,IOFFABIJ,IEOMPROP)
         ENDIF
C
C Put M(L) vector on list 374. Notice the change from the original
C EOM-CC code in which the perturb amplitudes were written to list
C 474. 08/1994 by Ajith
C
        CALL LOADVEC2(IRREPX,ICORE(I000),MAXCOR-I000+1,IUHF,490,
     &     0, 443, NSIZEC, .FALSE.)
        CALL SCOPY(LENVO,ICORE(IMLAIBAR),1,ICORE(I000),1)
C
         CALL PUTLST(ICORE(I000), IOFFSET, 1, 1, IRREPX, 374)
CSSS         call checksum("oprbar-lt :",icore(i000),nsizec)
C
      ENDIF

C
      RETURN
      END
