      SUBROUTINE FSGET(Z,ISTART,NUMGET,IDUMMY,IRREP,LIST,IOTYPE)
C
C THIS ROUTINE READS A "STANDARD" INTEGRAL OR AMPLITUDE LIST IN A
C NONSTANDARD WAY.  IT ALLOWS ONE TO READ LISTS OF THE TYPE:
C
C           W(PQ,R1)  WITH IOTYPE = 'NNNA'
C
C WHERE 1 IS A SPECIAL TYPE OF ORBITAL (ACTIVE OR INACTIVE).  ANY
C INDEX CAN REFER TO A "SPECIAL" ORBITAL
C
C  'N' - NORMAL CASE.  READ ALL ORBITALS OF THIS TYPE
C  'A' - ACTIVE ORBITALS ONLY.
C  'I' - INACTIVE ORBITALS ONLY.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION Z(1)
      CHARACTER*4 IOTYPE
      CHARACTER*1 TYPE1,TYPE2,TYPE3,TYPE4
      COMMON // ICORE(1)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FSIOLOC/ IFSPOS(8,22,8),ISCRLC
      COMMON /SYMPOP  / IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
C
      IOFF=1
C
      TYPE1=IOTYPE(1:1)
      TYPE2=IOTYPE(2:2)
      TYPE3=IOTYPE(3:3)
      TYPE4=IOTYPE(4:4)
C
      SYTYPL=ISYTYP(1,LIST)
      SYTYPR=ISYTYP(2,LIST)
C
C DISTINGUISH LEFT AND RIGHT TYPES.  SET UP POINTER ADDRESSES.
C
      IF(TYPE1.EQ.'A'.AND.TYPE2.EQ.'N')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,1)
       NSIZE=FSDPDAN(IRREP,SYTYPL)
      ELSEIF(TYPE1.EQ.'N'.AND.TYPE2.EQ.'A')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,2)
       NSIZE=FSDPDNA(IRREP,SYTYPL)
      ELSEIF(TYPE1.EQ.'A'.AND.TYPE2.EQ.'A')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,3)
       NSIZE=FSDPDAA(IRREP,SYTYPL)
      ELSEIF(TYPE1.EQ.'I'.AND.TYPE2.EQ.'N')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,4)
       NSIZE=FSDPDIN(IRREP,SYTYPL)
      ELSEIF(TYPE1.EQ.'N'.AND.TYPE2.EQ.'I')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,5)
       NSIZE=FSDPDNI(IRREP,SYTYPL)
      ELSEIF(TYPE1.EQ.'I'.AND.TYPE2.EQ.'I')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,6)
       NSIZE=FSDPDII(IRREP,SYTYPL)
      ELSEIF(TYPE1.EQ.'A'.AND.TYPE2.EQ.'I')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,7)
       NSIZE=FSDPDAI(IRREP,SYTYPL)
      ELSEIF(TYPE1.EQ.'I'.AND.TYPE2.EQ.'A')THEN
       IPOSLEFT=IFSPOS(IRREP,SYTYPL,8)
       NSIZE=FSDPDIA(IRREP,SYTYPL)
      ENDIF
C
      IF(TYPE3.EQ.'A'.AND.TYPE4.EQ.'N')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,1)
      ELSEIF(TYPE3.EQ.'N'.AND.TYPE4.EQ.'A')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,2)
      ELSEIF(TYPE3.EQ.'A'.AND.TYPE4.EQ.'A')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,3)
      ELSEIF(TYPE3.EQ.'I'.AND.TYPE4.EQ.'N')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,4)
      ELSEIF(TYPE3.EQ.'N'.AND.TYPE4.EQ.'I')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,5)
      ELSEIF(TYPE3.EQ.'I'.AND.TYPE4.EQ.'I')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,6)
      ELSEIF(TYPE3.EQ.'A'.AND.TYPE4.EQ.'I')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,7)
      ELSEIF(TYPE3.EQ.'I'.AND.TYPE4.EQ.'A')THEN
       IPOSRGHT=IFSPOS(IRREP,SYTYPR,8)
      ENDIF
C
C CASE I.  ONLY BRA INDICES ARE NONSTANDARD
C
      IF(TYPE3.EQ.'N'.AND.TYPE4.EQ.'N')THEN
       DO 10 IGET=ISTART,NUMGET
        CALL GETLST(ICORE(ISCRLC),IGET,1,1,IRREP,LIST)
        CALL GATHER(NSIZE,Z(IOFF),ICORE(ISCRLC),ICORE(IPOSLEFT))
        IOFF=IOFF+NSIZE
10     CONTINUE
C
C CASE II. ONLY KET INDICES ARE NONSTANDARD
C
      ELSEIF(TYPE1.EQ.'N'.AND.TYPE2.EQ.'N')THEN
       NSIZE=IRPDPD(IRREP,SYTYPL)
       DO 20 IGET=ISTART,NUMGET
        IREALGET=ICORE(IPOSRGHT+IGET-1)
        CALL GETLST(Z(IOFF),IREALGET,1,1,IRREP,LIST)
        IOFF=IOFF+NSIZE
20     CONTINUE
C
C CASE III. BOTH NONSTANDARD
C
      ELSE
       DO 30 IGET=ISTART,NUMGET
        IREALGET=ICORE(IPOSRGHT+IGET-1)
        CALL GETLST(ICORE(ISCRLC),IREALGET,1,1,IRREP,LIST)
        CALL GATHER(NSIZE,Z(IOFF),ICORE(ISCRLC),ICORE(IPOSLEFT))
        IOFF=IOFF+NSIZE
30     CONTINUE
C
      ENDIF
C
      RETURN
      END
