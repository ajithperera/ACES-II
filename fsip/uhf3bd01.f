      SUBROUTINE UHF3BD01(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE FOLLOWING CONTRIBUTIONS TO THE
C DOUBLES AMPLITUDES FOR THE (0,1) FOCK SPACE SECTOR
C
C
C    Z(ij,ka) = - T(mn,ke) T(ij,fa) W(mn,ef)
C      NN AN        NN AN    NN NN    NN NN
C
C THIS IS CARRIED OUT BY THE FOLLOWING TWO-STEP PROCEDURE:
C
C     Y(kf) = T(mn,ke) * W(mn,ef)
C       AN      NN AN      NN NN
C
C     Z(ij,ka) = T(ij,fa) * Y(kf)
C       NN AN      NN NN      AN
C
CEND
      IMPLICIT INTEGER (A-H,O-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH
      DIMENSION ICORE(MAXCOR)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      DATA ONE/1.0/, ONEM/-1.0/, ZILCH /0.0/
C
C ALLOCATE MEMORY AND SOLVE FOR Y INTERMEDIATES
C
C   Y(KF) = T(MN,KE) * W(MN,EF) - T(Mn,Ke) * W(Mn,Fe) [AA]
C
C   Y(kf) = T(mn,ke) * W(mn,ef) - T(Nm,Ek) * W(Nm,Ef) [BB]
C
      I000=1
      I010=I000+(NTNA(1)+NTNA(2))*IINTFP
      IOFFY=1
      CALL ZERO(ICORE(I000),(NTNA(1)+NTNA(2)))
C
      DO 10 ISPIN=1,2
C
C SPIN CASES AAAA AND BBBB
C
       LISTW =13+ISPIN
       LISTT =95+ISPIN
C
       DO 100 IRREP=1,NIRREP
        NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
        DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
        DISSYW0=IRPDPD(IRREP,18+ISPIN)
        NUMDST=FSDPDAN(IRREP,ISYTYP(2,LISTT))
        DISSYT=IRPDPD (IRREP,ISYTYP(1,LISTT))
        DISSYW0=IRPDPD(IRREP,18+ISPIN)
        MAXW=MAX(DISSYT,NUMDST,DISSYW,NUMDSW)
        I020=I010+IINTFP*MAX(NUMDST*DISSYT,NUMDSW*DISSYW0)
        I030=I020+IINTFP*MAX(NUMDST*DISSYT,NUMDSW*DISSYW0)
        I040=I030+IINTFP*MAXW
        I050=I040+IINTFP*MAXW
        I060=I050+IINTFP*MAXW
C
C READ IN W(E<F,M<N), TRANSPOSE AND EXPAND TO W(M<N,EF)
C
        CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
        CALL TRANSP(ICORE(I010),ICORE(I020),NUMDSW,DISSYW)
        CALL SYMEXP(IRREP,VRT(1,ISPIN),NUMDSW,ICORE(I020))
C
C READ IN T(M<N,KE) AND TRANSPOSE TO T(M<N,EK)
C
        CALL FSGET(ICORE(I010),1,NUMDST,1,IRREP,LISTT,'NNAN')
        CALL SYMTR1(IRREP,POPA(1,ISPIN),VRT(1,ISPIN),DISSYT,ICORE(I010),
     &              ICORE(I030),ICORE(I040),ICORE(I050))
C
C                          +      
C DO MULTIPLICATION W(M<NF,E) * T(M<NF,K) = Y(EK)
C                     NNN N      NNN A 
C
        IOFFY =I000+(ISPIN-1)*NTNA(1)*IINTFP
        IOFFT =I010
        IOFFW =I020
        DO 20 IRREPE=1,NIRREP
         IRREPK=IRREPE
         IRREPF=DIRPRD(IRREPK,IRREP)
         NROW=VRT (IRREPE,ISPIN)
         NCOL=POPA(IRREPK,ISPIN)
         NSUM=DISSYT*VRT(IRREPF,ISPIN)
         CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NSUM,
     &             ICORE(IOFFT),NSUM,ONE,ICORE(IOFFY),NROW)
         IOFFY =IOFFY +NROW*NCOL*IINTFP
         IOFFW =IOFFW +NROW*NSUM*IINTFP
         IOFFT =IOFFT +NCOL*NSUM*IINTFP
20      CONTINUE
100    CONTINUE
C
C NOW DO ABAB AND BABA PARTS
C
       IF(ISPIN.EQ.1)THEN
        LISTW =16
        LISTT =99
C
        DO 101 IRREP=1,NIRREP
         NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
         DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
         NUMDST=FSDPDAN(IRREP,ISYTYP(2,LISTT))
         DISSYT=IRPDPD (IRREP,ISYTYP(1,LISTT))
         MAXW=MAX(DISSYT,NUMDST,DISSYW,NUMDSW)
         I020=I010+IINTFP*MAX(NUMDST*DISSYT,NUMDSW*DISSYW)
         I030=I020+IINTFP*MAX(NUMDST*DISSYT,NUMDSW*DISSYW)
         I040=I030+IINTFP*MAXW
         I050=I040+IINTFP*MAXW
         I060=I050+IINTFP*MAXW
C
C READ IN W(Ef,Mn) AND REORDER TO W(Mn,fE)
C
         CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
         CALL TRANSP(ICORE(I010),ICORE(I020),NUMDSW,DISSYW)
         CALL SYMTR1(IRREP,VRT(1,1),VRT(1,2),NUMDSW,ICORE(I020),
     &               ICORE(I030),ICORE(I040),ICORE(I050))
C
C READ IN T(Mn,Ke) AND TRANSPOSE TO T(Mn,eK)
C
         CALL FSGET(ICORE(I010),1,NUMDST,1,IRREP,LISTT,'NNAN')
         CALL SYMTR1(IRREP,POPA(1,1),VRT(1,2),DISSYT,ICORE(I010),
     &               ICORE(I030),ICORE(I040),ICORE(I050))
C
C                          +      
C DO MULTIPLICATION W(Mnf,E) * T(Mnf,K) = Y(EK)
C                     NNN N      NNN A 
C
         IOFFY =I000
         IOFFT =I010
         IOFFW =I020
         DO 21 IRREPE=1,NIRREP
          IRREPK=IRREPE
          IRREPF=DIRPRD(IRREPK,IRREP)
          NROW=VRT (IRREPE,1)
          NCOL=POPA(IRREPK,1)
          NSUM=DISSYT*VRT(IRREPF,2)
          CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFW),NSUM,
     &               ICORE(IOFFT),NSUM,ONE,ICORE(IOFFY),NROW)
          IOFFY =IOFFY +NROW*NCOL*IINTFP
          IOFFW =IOFFW +NROW*NSUM*IINTFP
          IOFFT =IOFFT +NCOL*NSUM*IINTFP
21       CONTINUE
101     CONTINUE
C
       ELSEIF(ISPIN.EQ.2)THEN
C
        LISTW =16
        LISTT =98
C
        DO 102 IRREP=1,NIRREP
         NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
         DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
         NUMDST=FSDPDNA(IRREP,ISYTYP(2,LISTT))
         DISSYT=IRPDPD (IRREP,ISYTYP(1,LISTT))
         I020=I010+IINTFP*MAX(NUMDST*DISSYT,NUMDSW*DISSYW)
         I030=I020+IINTFP*MAX(NUMDST*DISSYT,NUMDSW*DISSYW)
C
C READ IN W(Ef,Mn) AND REORDER TO W(Mn,Ef)
C
         CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
         CALL TRANSP(ICORE(I010),ICORE(I020),NUMDSW,DISSYW)
C
C READ IN T(Mn,Ek) 
C
         CALL FSGET(ICORE(I010),1,NUMDST,1,IRREP,LISTT,'NNNA')
C
C                          +      
C DO MULTIPLICATION W(MnF,e) * T(MnE,k) = Y(ek)
C                     NNN N      NNN A      NA
C
         IOFFY =I000+NTNA(1)*IINTFP
         IOFFT =I010
         IOFFW =I020
         DO 22 IRREPE=1,NIRREP
          IRREPK=IRREPE
          IRREPF=DIRPRD(IRREPK,IRREP)
          NROW=VRT (IRREPE,2)
          NCOL=POPA(IRREPK,2)
          NSUM=DISSYT*VRT(IRREPF,1)
          CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFW),NSUM,
     &               ICORE(IOFFT),NSUM,ONE,ICORE(IOFFY),NROW)
          IOFFY =IOFFY +NROW*NCOL*IINTFP
          IOFFW =IOFFW +NROW*NSUM*IINTFP
          IOFFT =IOFFT +NCOL*NSUM*IINTFP
22       CONTINUE
102     CONTINUE
       ENDIF
C
10    CONTINUE
C
C OK. NOW THE FINAL CONTRACTION 
C
C
C NOW DO FINAL STEP:
C
C         T(Ij,Ea) * Y(EK) = Z(Ij,Ka)     [ABAB]
C           NN NN      NA      NN NA
C
C       - T(Ij,Ae) * Y(ek) = Z(Ij,Ak)     [BABA]
C           NN NN      NA      NN NA
C
C         T(ij,ae) * Y(ek) = Z(ij,ak)     [AAAA AND BBBB]
C           NN NN      NA      NN NA
C
      DO 11 ISPIN=1,2
C
C DO SPIN CASES AAAA AND BBBB
C
       LISTT=43+ISPIN
       LISTZ=195+ISPIN
       DO 111 IRREP=1,NIRREP
        NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
        DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
        DISSYT0=IRPDPD(IRREP,18+ISPIN)
        NUMDSZ=FSDPDAN(IRREP,ISYTYP(2,LISTZ))
        DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
        I020=I010+IINTFP*MAX(DISSYT0*NUMDST,DISSYZ*NUMDSZ)
        I030=I020+IINTFP*MAX(DISSYT0*NUMDST,DISSYZ*NUMDSZ)
        MAXW=MAX(DISSYT,NUMDST,DISSYZ,NUMDSZ,DISSYT0)
        I040=I030+IINTFP*MAXW
        I050=I040+IINTFP*MAXW
        I060=I050+IINTFP*MAXW
        CALL GETLST(ICORE(I010),1,NUMDST,1,IRREP,LISTT)
        CALL TRANSP(ICORE(I010),ICORE(I020),NUMDST,DISSYT)
        CALL SYMEXP(IRREP,VRT(1,ISPIN),NUMDST,ICORE(I020))
        CALL ZERO  (ICORE(I010),NUMDSZ*DISSYZ)
C
C DO MULTIPLICATION T(i<ja,e) * Y(ek)
C                     N NN N      NA
C
        IOFFT=I020
        IOFFY=I000+(ISPIN-1)*NTNA(1)*IINTFP
        IOFFZ=I010
        DO 121 IRREPE=1,NIRREP
         IRREPK=IRREPE
         IRREPA=DIRPRD(IRREPE,IRREP)
         NROW=NUMDST*VRT(IRREPA,ISPIN)
         NCOL=POPA(IRREPK,ISPIN)
         NSUM=VRT (IRREPE,ISPIN)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &              ICORE(IOFFY),NSUM,ZILCH,ICORE(IOFFZ),NROW)
         IOFFZ=IOFFZ+NROW*NCOL*IINTFP
         IOFFT=IOFFT+NROW*NSUM*IINTFP
         IOFFY=IOFFY+NSUM*NCOL*IINTFP
121     CONTINUE
C
C TRANSPOSE TO Z(ij,ka) AND AUGMENT LIST
C
        CALL SYMTR1(IRREP,VRT(1,ISPIN),POPA(1,ISPIN),DISSYZ,ICORE(I010),
     &              ICORE(I020),ICORE(I030),ICORE(I040))
        CALL FSGET (ICORE(I020),1,NUMDSZ,1,IRREP,LISTZ,'NNAN')
        CALL SAXPY (DISSYZ*NUMDSZ,ONEM,ICORE(I010),1,ICORE(I020),1)
        CALL FSPUT (ICORE(I020),1,NUMDSZ,1,IRREP,LISTZ,'NNAN')
111    CONTINUE
C
C SPIN CASE ABAB
C
       IF(ISPIN.EQ.1)THEN
        LISTT=46
        LISTZ=199
        DO 112 IRREP=1,NIRREP
         NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
         DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
         NUMDSZ=FSDPDAN(IRREP,ISYTYP(2,LISTZ))
         DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
         I020=I010+IINTFP*MAX(DISSYT*NUMDST,DISSYZ*NUMDSZ)
         I030=I020+IINTFP*MAX(DISSYT*NUMDST,DISSYZ*NUMDSZ)
         MAXW=MAX(DISSYT,NUMDST,DISSYZ,NUMDSZ)
         I040=I030+IINTFP*MAXW
         I050=I040+IINTFP*MAXW
         I060=I050+IINTFP*MAXW
         CALL GETLST(ICORE(I010),1,NUMDST,1,IRREP,LISTT)
         CALL TRANSP(ICORE(I010),ICORE(I020),NUMDST,DISSYT)
         CALL SYMTR1(IRREP,VRT(1,1),VRT(1,2),NUMDST,ICORE(I020),
     &               ICORE(I030),ICORE(I040),ICORE(I050))
         CALL ZERO  (ICORE(I010),NUMDSZ*DISSYZ)
C
C DO MULTIPLICATION T(Ija,F) * Y(FK)
C                     NNN N      NA
C
         IOFFT=I020
         IOFFY=I000
         IOFFZ=I010
         DO 122 IRREPF=1,NIRREP
          IRREPK=IRREPF
          IRREPA=DIRPRD(IRREPF,IRREP)
          NROW=NUMDST*VRT(IRREPA,2)
          NCOL=POPA(IRREPK,1)
          NSUM=VRT (IRREPF,1)
          CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &               ICORE(IOFFY),NSUM,ZILCH,ICORE(IOFFZ),NROW)
          IOFFZ=IOFFZ+NROW*NCOL*IINTFP
          IOFFT=IOFFT+NROW*NSUM*IINTFP
          IOFFY=IOFFY+NSUM*NCOL*IINTFP
122      CONTINUE
C
C TRANSPOSE TO Z(Ij,Ka) AND AUGMENT LIST
C
         CALL SYMTR1(IRREP,VRT(1,2),POPA(1,1),DISSYZ,ICORE(I010),
     &               ICORE(I020),ICORE(I030),ICORE(I040))
         CALL FSGET (ICORE(I020),1,NUMDSZ,1,IRREP,LISTZ,'NNAN')
         CALL SAXPY (DISSYZ*NUMDSZ,ONE,ICORE(I010),1,ICORE(I020),1)
         CALL FSPUT (ICORE(I020),1,NUMDSZ,1,IRREP,LISTZ,'NNAN')
112     CONTINUE
C
C SPIN CASE BABA
C
       ELSEIF(ISPIN.EQ.2)THEN
        LISTT=46
        LISTZ=198
        DO 113 IRREP=1,NIRREP
         NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
         DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
         NUMDSZ=FSDPDNA(IRREP,ISYTYP(2,LISTZ))
         DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
         I020=I010+IINTFP*MAX(DISSYT*NUMDST,DISSYZ*NUMDSZ)
         I030=I020+IINTFP*MAX(DISSYT*NUMDST,DISSYZ*NUMDSZ)
         MAXW=MAX(DISSYT,NUMDST,DISSYZ,NUMDSZ)
         I040=I030+IINTFP*MAXW
         I050=I040+IINTFP*MAXW
         I060=I050+IINTFP*MAXW
         CALL GETLST(ICORE(I010),1,NUMDST,1,IRREP,LISTT)
         CALL TRANSP(ICORE(I010),ICORE(I020),NUMDST,DISSYT)
         CALL ZERO  (ICORE(I010),NUMDSZ*DISSYZ)
C
C DO MULTIPLICATION T(IjA,e) * Y(ek)
C                     NNN N      NA
C
         IOFFT=I020
         IOFFY=I000+NTNA(1)*IINTFP
         IOFFZ=I010
         DO 123 IRREPE=1,NIRREP
          IRREPK=IRREPE
          IRREPA=DIRPRD(IRREPE,IRREP)
          NROW=NUMDST*VRT(IRREPA,1)
          NCOL=POPA(IRREPK,2)
          NSUM=VRT (IRREPE,2)
          CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFT),NROW,
     &               ICORE(IOFFY),NSUM,ZILCH,ICORE(IOFFZ),NROW)
          IOFFZ=IOFFZ+NROW*NCOL*IINTFP
          IOFFT=IOFFT+NROW*NSUM*IINTFP
          IOFFY=IOFFY+NSUM*NCOL*IINTFP
123      CONTINUE
C
C AUGMENT INCREMENT LIST WITH Z(Ij,Ak)
C
         CALL FSGET (ICORE(I020),1,NUMDSZ,1,IRREP,LISTZ,'NNNA')
         CALL SAXPY (DISSYZ*NUMDSZ,ONE,ICORE(I010),1,ICORE(I020),1)
         CALL FSPUT (ICORE(I020),1,NUMDSZ,1,IRREP,LISTZ,'NNNA')
113     CONTINUE
C
       ENDIF
C
11    CONTINUE
      RETURN
      END
