      SUBROUTINE UHFRNG01(ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE FOLLOWING CONTRIBUTION TO THE
C DOUBLES AMPLITUDES FOR THE (0,1) FOCK SPACE SECTOR
C
C    Z(IJ,KA) = -T(JM,KE) * W(MA,EI) -  T(Jm,Ke) W(mA,eI)   [AAAA]
C      NN AN       NN AN      NN NN      NN AN    NN NN 
C
C    Z(ij,ka) = -T(jm,ke) * W(ma,ei) -  T(Mj,Ek) W(Ma,Ei)   [BBBB]
C      NN AN       NN AN      NN NN       NN NA    NN NN 
C
CEND
      IMPLICIT INTEGER (A-H,O-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH
      DIMENSION ICORE(MAXCOR),LISTDO(2)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /FSSYMPOP/ FSDPDAN(8,22),FSDPDNA(8,22),FSDPDAA(8,22),
     &                  FSDPDIN(8,22),FSDPDNI(8,22),FSDPDII(8,22),
     &                  FSDPDAI(8,22),FSDPDIA(8,22)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /FSSYM/ POPA(8,2),POPI(8,2),VRTA(8,2),VRTI(8,2),
     &               NTAN(2),NTNA(2),NTAA(2),
     &               NTIN(2),NTNI(2),NTII(2),
     &               NTAI(2),NTIA(2),
     &               NF1AN(2),NF1AA(2),NF1IN(2),NF1II(2),NF1AI(2),
     &               NF2AN(2),NF2AA(2),NF2IN(2),NF2II(2),NF2AI(2)
C
      DATA ONE/1.0/, ONEM/-1.0/, ZILCH /0.0/
C
C LOOP OVER SPIN CASES AND DO AAAA AND BBBB TERMS.
C
      DO 10 ISPIN=1,2
       LISTT1=ISPIN
       LISTT2=5-ISPIN
       LISTW1=53+ISPIN
       LISTW2=58-ISPIN
       LISTZ =80+ISPIN
       DO 100 IRREP=1,NIRREP
        NUMDSZ=IRPDPD (IRREP,ISYTYP(2,LISTZ))
        DISSYZ=FSDPDNA(IRREP,ISYTYP(1,LISTZ))
C
C FIRST TERM.  EVALUATE AS -T(JM,KE) * W(MA,EI)
C                             NN AN      NN NN
C
        NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW1))
        DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW1))
        NUMDST=IRPDPD (IRREP,ISYTYP(2,LISTT1))
        DISSYT=FSDPDNA(IRREP,ISYTYP(1,LISTT1))
        MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
        I000=1
        I010=I000+IINTFP*NUMDSZ*DISSYZ
        I020=I010+IINTFP*NUMDSW*DISSYW
        I030=I020+IINTFP*NUMDST*DISSYT
        I040=I030+IINTFP*MAXT
        I050=I040+IINTFP*MAXT
        I060=I050+IINTFP*MAXT
C
C READ W AS W(EM,AI)
C             NN NN
C
        CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW1)
C
C READ T AS T(JK,ME) AND TRANSPOSE TO T(JK,EM)
C             NA NN                     NA NN
C
        CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT1,'NANN')
        CALL SYMTR1(IRREP,POP(1,ISPIN),VRT(1,ISPIN),DISSYT,ICORE(I020),
     &              ICORE(I030),ICORE(I040),ICORE(I050))
C
C MULTIPLY : Z(JK,AI) = -T(JK,EM) * W(EM,AI)
C              NA NN       NA NN      NN NN
C
        NROW=DISSYT
        NCOL=NUMDSW
        NSUM=NUMDST
        CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(I020),NROW,
     &             ICORE(I010),NSUM,ZILCH,ICORE(I000),NROW)
C
C SECOND TERM.  EVALUATE AS :
C
C                      - T(Jm,Ke) * W(mA,eI)    [AAAA]
C                          NN AN      NN NN
C
C                      - T(Mj,Ek) * W(Ma,Ei)    [BBBB]
C                          NN NA      NN NN
C
        NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW2))
        DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW2))
        IF(ISPIN.EQ.1)THEN
         NUMDST=IRPDPD (IRREP,ISYTYP(2,LISTT2))
         DISSYT=FSDPDNA(IRREP,ISYTYP(1,LISTT2))
        ELSE
         NUMDST=FSDPDNA(IRREP,ISYTYP(2,LISTT2))
         DISSYT=IRPDPD (IRREP,ISYTYP(1,LISTT2))
        ENDIF 
        MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
        I000=1
        I010=I000+IINTFP*NUMDSZ*DISSYZ
        I020=I010+IINTFP*NUMDSW*DISSYW
        I030=I020+IINTFP*NUMDST*DISSYT
        I040=I030+IINTFP*MAXT
        I050=I040+IINTFP*MAXT
        I060=I050+IINTFP*MAXT
C
        IF(ISPIN.EQ.1)THEN
C
C READ THE W(mA,eI) AS W(em,AI)
C            NN NN       NN NN
C
         CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW2)
C
C READ THE T(Jm,Ke) AS T(JK,me) AND TRANSPOSE TO T(JK,em)
C            NN AN       NA NN                     NA NN
C
         CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT2,'NANN')
         CALL SYMTR1(IRREP,POP(1,2),VRT(1,2),DISSYT,ICORE(I020),
     &               ICORE(I030),ICORE(I040),ICORE(I050))
C
C MULTIPLY : Z(JK,AI) = Z(JK,AI) - T(JK,em) * W(em,AI)
C              NA NN      NA NN      NA NN      NN NN
C
         NROW=DISSYT
         NCOL=NUMDSW
         NSUM=NUMDST
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONEM,ICORE(I020),NROW,
     &              ICORE(I010),NSUM,ONE,ICORE(I000),NROW)
C
        ELSE
C
C READ THE W(Ma,Ei) AS W(EM,ai)
C            NN NN       NN NN
C
         CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW2)
C
C READ THE T(Mj,Ek) AS T(ME,jk) AND TRANSPOSE TO T(EM,jk)
C            NN NA       NN NA                     NN NA
C
         CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT2,'NNNA')
         CALL SYMTR3(IRREP,POP(1,1),VRT(1,1),DISSYT,NUMDST,ICORE(I020),
     &               ICORE(I030),ICORE(I040),ICORE(I050))
C
C                                          +
C MULTIPLY : Z(jk,ai) = Z(jk,ai) - T(EM,jk) * W(EM,ai)
C              NA NN      NA NN      NA NN      NN NN
C
         NROW=NUMDST
         NCOL=NUMDSW
         NSUM=DISSYT
         CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(I020),NSUM,
     &              ICORE(I010),NSUM,ONE,ICORE(I000),NROW)
C
        ENDIF
C
C REORDER INCREMENTS TO Z(JK,IA)
C
        CALL SYMTR1(IRREP,VRT(1,ISPIN),POP(1,ISPIN),DISSYZ,ICORE(I000),
     &              ICORE(I030),ICORE(I040),ICORE(I050))

C
C WRITE INCREMENTS TO RESORTED INCREMENT LISTS FOR NOW.  WE WILL
C DO SOMETHING LESS WASTEFUL WHEN WE KNOW THE CODE WORKS.
C
        CALL FSPUT(ICORE(I000),1,NUMDSZ,1,IRREP,LISTZ,'NANN')
C
100    CONTINUE
C
C READ INCREMENTS BACK IN, RESORT AND ANTISYMMETRIZE 
C
C           Z(JK,IA) -> Z(JI,KA) -> Z(I<J,KA)
C
       NSIZE=ISYMSZ(ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
       I000=1
       I010=I000+IINTFP*NSIZE
       I020=I010+IINTFP*NSIZE
       CALL GETALL (ICORE(I010),NSIZE,1,LISTZ)
       CALL SSTGEN (ICORE(I010),ICORE(I000),NSIZE,POP(1,ISPIN),
     &              POP(1,ISPIN),POP(1,ISPIN),VRT(1,ISPIN),
     &              ICORE(I020),1,'1324')
       IOFF=I000
       LISTZ0=195+ISPIN
       DO 101 IRREP=1,NIRREP
        NUMDIS=IRPDPD(IRREP,ISYTYP(2,LISTZ))
        DISSIZ=IRPDPD(IRREP,ISYTYP(1,LISTZ))
        DISSZ0=IRPDPD(IRREP,ISYTYP(1,LISTZ0))
        CALL TRANSP(ICORE(IOFF),ICORE(I010),NUMDIS,DISSIZ)
        CALL ASSYM2(IRREP,POP(1,ISPIN),NUMDIS,ICORE(I010))
        CALL TRANSP(ICORE(I010),ICORE(IOFF),DISSZ0,NUMDIS)
        CALL GETLST(ICORE(I010),1,NUMDIS,1,IRREP,LISTZ0)
        CALL SAXPY (NUMDIS*DISSZ0,ONEM,ICORE(IOFF),1,ICORE(I010),1)
        CALL PUTLST(ICORE(I010),1,NUMDIS,1,IRREP,LISTZ0)
        IOFF=IOFF+NUMDIS*DISSIZ*IINTFP
101    CONTINUE
C
10    CONTINUE
C
C SPIN CASE ABAB.  THREE TERMS:
C
C         + T(Im,Ke) * W(ma,ej)    [TERM I]
C             NN AN      NN NN
C
C         + T(IM,KE) * W(Ma,Ej)    [TERM II]
C             NN AN      NN NN
C
C         + T(Mj,Ke) * W(Ma,eI)    [TERM III]
C             NN AN      NN NN
C
      DO 200 IRREP=1,NIRREP
C
C TERM I
C
       LISTW=55
       LISTT=4
       LISTZ=84
       DISSYT=FSDPDNA(IRREP,ISYTYP(1,LISTT))        
       NUMDST=IRPDPD (IRREP,ISYTYP(2,LISTT))
       DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
       DISSYZ=FSDPDNA(IRREP,ISYTYP(1,LISTZ))
       NUMDSZ=IRPDPD (IRREP,ISYTYP(2,LISTZ))
       MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
       I000=1
       I010=I000+IINTFP*NUMDSZ*DISSYZ
       I020=I010+IINTFP*NUMDSW*DISSYW
       I030=I020+IINTFP*NUMDST*DISSYT
       I040=I030+IINTFP*MAXT
       I050=I040+IINTFP*MAXT
       I060=I050+IINTFP*MAXT
C
C READ W AS W(em,aj)
C
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
C
C READ T AS T(IK,me) AND TRANSPOSE TO T(IK,em)
C
       CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT,'NANN')
       CALL SYMTR1(IRREP,POP(1,2),VRT(1,2),DISSYT,ICORE(I020),
     &             ICORE(I030),ICORE(I040),ICORE(I050))
C
C MULTIPLY : Z(IK,aj) = -T(IK,em) * W(em,aj)
C              NA NN       NA NN      NN NN
C
       NROW=DISSYT
       NCOL=NUMDSW
       NSUM=NUMDST
       CALL XGEMM('N','N',NROW,NCOL,NSUM,ONEM,ICORE(I020),NROW,
     &            ICORE(I010),NSUM,ZILCH,ICORE(I000),NROW)
C
C TERM II
C
       LISTW=56
       LISTT=1
       DISSYT=FSDPDNA(IRREP,ISYTYP(1,LISTT))        
       NUMDST=IRPDPD (IRREP,ISYTYP(2,LISTT))
       DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
       MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
       I020=I010+IINTFP*NUMDSW*DISSYW
       I030=I020+IINTFP*NUMDST*DISSYT
       I040=I030+IINTFP*MAXT
       I050=I040+IINTFP*MAXT
       I060=I050+IINTFP*MAXT
C
C READ W AS W(EM,aj)
C
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
C
C READ T AS T(IK,ME) AND TRANSPOSE TO T(IK,EM)
C
       CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT,'NANN')
       CALL SYMTR1(IRREP,POP(1,1),VRT(1,1),DISSYT,ICORE(I020),
     &             ICORE(I030),ICORE(I040),ICORE(I050))
C
C MULTIPLY : Z(IK,aj) =  T(IK,EM) * W(EM,aj)
C              NA NN       NA NN      NN NN
C
       NROW=DISSYT
       NCOL=NUMDSW
       NSUM=NUMDST
       CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(I020),NROW,
     &            ICORE(I010),NSUM,ONE,ICORE(I000),NROW)
C
C NOW REORDER INCREMENT TO Z(IK,ja) AND PUT BACK ON RESORTED LIST.
C
       CALL SYMTR1(IRREP,VRT(1,2),POP(1,2),DISSYZ,ICORE(I000),
     &             ICORE(I030),ICORE(I040),ICORE(I050))
       CALL FSPUT(ICORE(I000),1,NUMDSZ,1,IRREP,LISTZ,'NANN')
C
200   CONTINUE
C
C NOW BEFORE DOING TERM III, WE HAVE TO RESORT THE INCREMENT LIST
C AND ALSO GENERATE A NEW RESORTED T LIST.  A REAL HASSLE.  INCREMENTS
C AND T VECTORS MUST BE RESORTED AS FOLLOWS:
C
C         Z(IK,ja) -> Z(ja,IK) -> Z(jK,Ia) -> Z(Kj,aI)
C
      LISTDO(1)=84
      LISTDO(2)=4
      DO 201 IDO=1,2
       NSIZE=ISYMSZ(ISYTYP(1,LISTDO(IDO)),ISYTYP(2,LISTDO(IDO)))
       I000=1
       I010=I000+NSIZE*IINTFP
       I020=I010+NSIZE*IINTFP
       IOFF=I000
       DO 202 IRREP=1,NIRREP
        NUMDIS=IRPDPD(IRREP,ISYTYP(2,LISTDO(IDO)))
        DISSIZ=IRPDPD(IRREP,ISYTYP(1,LISTDO(IDO)))
        CALL GETLST(ICORE(I010),1,NUMDIS,1,IRREP,LISTDO(IDO))
        CALL TRANSP(ICORE(I010),ICORE(IOFF),NUMDIS,DISSIZ)
        IOFF=IOFF+NUMDIS*DISSIZ*IINTFP
202    CONTINUE
       CALL SSTGEN(ICORE(I000),ICORE(I010),NSIZE,POP(1,2),VRT(1,2),
     &             POP(1,1),POP(1,1),ICORE(I020),1,'1432')
       CALL NEWTYP(LISTDO(IDO),14,12,.TRUE.)
       IOFF=I010
       DO 203 IRREP=1,NIRREP
       	NUMDIS=IRPDPD(IRREP,ISYTYP(2,LISTDO(IDO)))
        DISSIZ=IRPDPD(IRREP,ISYTYP(1,LISTDO(IDO)))
        I030=I020+IINTFP*MAX(NUMDIS,DISSIZ)
        I040=I030+IINTFP*MAX(NUMDIS,DISSIZ)
        I050=I040+IINTFP*MAX(NUMDIS,DISSIZ)
        CALL SYMTR1(IRREP,POP(1,1),VRT(1,2),DISSIZ,ICORE(IOFF),
     &              ICORE(I020),ICORE(I030),ICORE(I040))
        CALL SYMTR3(IRREP,POP(1,2),POP(1,1),DISSIZ,NUMDIS,ICORE(IOFF),
     &              ICORE(I020),ICORE(I030),ICORE(I040))
        IOFF=IOFF+NUMDIS*DISSIZ*IINTFP
203    CONTINUE
       CALL PUTALL(ICORE(I010),NSIZE,1,LISTDO(IDO))
201   CONTINUE
C
C NOW DO TERM III WITH THESE NICE RESORTED LISTS
C
C         - T(Mj,Ke) * W(Ma,eI)    [TERM III]
C             NN AN      NN NN
C
      DO 210 IRREP=1,NIRREP
       LISTW=59
       LISTT=4
       LISTZ=84
       DISSYT=FSDPDAN(IRREP,ISYTYP(1,LISTT))        
       NUMDST=IRPDPD (IRREP,ISYTYP(2,LISTT))
       DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
       DISSYZ=FSDPDAN(IRREP,ISYTYP(1,LISTZ))
       NUMDSZ=IRPDPD (IRREP,ISYTYP(2,LISTZ))
       MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
       I000=1
       I010=I000+IINTFP*NUMDSZ*DISSYZ
       I020=I010+IINTFP*NUMDSW*DISSYW
       I030=I020+IINTFP*NUMDST*DISSYT
       I040=I030+IINTFP*MAXT
       I050=I040+IINTFP*MAXT
       I060=I050+IINTFP*MAXT
C
C READ W AS W(eM,aI)
C
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
C
C READ T AS T(Kj,eM)
C
       CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT,'ANNN')
C
C MULTIPLY : Z(Kj,aI) = -T(Kj,eM) * W(eM,aI)
C              AN NN       AN NN      NN NN
C
       NROW=DISSYT
       NCOL=NUMDSW
       NSUM=NUMDST
       CALL XGEMM('N','N',NROW,NCOL,NSUM,ONEM,ICORE(I020),NROW,
     &            ICORE(I010),NSUM,ZILCH,ICORE(I000),NROW)
C
       CALL FSGET (ICORE(I020),1,NUMDSW,1,IRREP,LISTZ,'ANNN')
       CALL SAXPY (NROW*NCOL,ONE,ICORE(I000),1,ICORE(I020),1)
       CALL FSPUT (ICORE(I020),1,NUMDSW,1,IRREP,LISTZ,'ANNN')
C
210   CONTINUE
C
C NOW RESORT INCREMENTS AS FOLLOWS
C
C        Z(Kj,aI) -> Z(KI,aj) -> Z(Ka,Ij) -> Z(Ij,Ka)
C          AN NN       AN NN       AN NN       NN AN
C
C AND DUMP BACK TO DISK
C
      NSIZE=ISYMSZ(ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
      I000=1
      I010=I000+IINTFP*NSIZE
      I020=I010+IINTFP*NSIZE
      CALL GETALL(ICORE(I000),NSIZE,1,LISTZ)
      CALL SSTGEN(ICORE(I000),ICORE(I010),NSIZE,POP(1,1),POP(1,2),
     &            VRT(1,2),POP(1,1),ICORE(I020),1,'1432')
      CALL SSTGEN(ICORE(I010),ICORE(I000),NSIZE,POP(1,1),POP(1,1),
     &            VRT(1,2),POP(1,2),ICORE(I020),1,'1324')
      IOFF=I000
      DO 211 IRREP=1,NIRREP
       NUMDIS=IRPDPD(IRREP,ISYTYP(2,99))
       DISSIZ=IRPDPD(IRREP,ISYTYP(1,99))
       CALL TRANSP(ICORE(IOFF),ICORE(I010),DISSIZ,NUMDIS)
       CALL GETLST(ICORE(IOFF),1,NUMDIS,1,IRREP,199)
       CALL SAXPY (NUMDIS*DISSIZ,ONE,ICORE(I010),1,ICORE(IOFF),1)
       CALL PUTLST(ICORE(IOFF),1,NUMDIS,1,IRREP,199)
       IOFF=IOFF+NUMDIS*DISSIZ*IINTFP
211   CONTINUE
      CALL NEWTYP(4,21,17,.TRUE.)
      CALL NEWTYP(84,21,17,.TRUE.)
C 
C
C SPIN CASE BABA.  THREE TERMS:
C
C         + T(Mi,Ek) * W(MA,EJ)    [TERM I]
C             NN NA      NN NN
C
C         + T(im,ke) * W(mA,eJ)    [TERM II]
C             NN AN      NN NN
C
C         + T(mJ,kE) * W(mA,Ei)    [TERM III]
C             NN AN      NN NN
C
      LISTZ=83
      DO 300 IRREP=1,NIRREP
C
C TERM I
C
       LISTW=54
       LISTT=3
       DISSYT=IRPDPD (IRREP,ISYTYP(1,LISTT))        
       NUMDST=FSDPDNA(IRREP,ISYTYP(2,LISTT))
       DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
       DISSYZ=IRPDPD (IRREP,ISYTYP(1,LISTZ))
       NUMDSZ=FSDPDNA(IRREP,ISYTYP(2,LISTZ))
       MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
       I000=1
       I010=I000+IINTFP*NUMDSZ*DISSYZ
       I020=I010+IINTFP*NUMDSW*DISSYW
       I030=I020+IINTFP*NUMDST*DISSYT
       I040=I030+IINTFP*MAXT
       I050=I040+IINTFP*MAXT
       I060=I050+IINTFP*MAXT
C
C READ W AS W(EM,AJ)
C
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
C
C READ T AS T(ME,ik) AND TRANSPOSE TO T(EM,ik)
C
       CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT,'NNNA')
       CALL SYMTR3(IRREP,POP(1,1),VRT(1,1),DISSYT,NUMDST,ICORE(I020),
     &             ICORE(I030),ICORE(I040),ICORE(I050))
C
C                                +
C MULTIPLY : Z(ik,AJ) = -T(EM,ik) * W(EM,AJ)
C              NA NN       NN NA      NN NN
C
       NROW=NUMDST
       NCOL=NUMDSW
       NSUM=DISSYT
       CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(I020),NSUM,
     &            ICORE(I010),NSUM,ZILCH,ICORE(I000),NROW)
C
C TERM II
C
       LISTW=57
       LISTT=2
       DISSYT=FSDPDNA(IRREP,ISYTYP(1,LISTT))        
       NUMDST=IRPDPD (IRREP,ISYTYP(2,LISTT))
       DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
       MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
       I020=I010+IINTFP*NUMDSW*DISSYW
       I030=I020+IINTFP*NUMDST*DISSYT
       I040=I030+IINTFP*MAXT
       I050=I040+IINTFP*MAXT
       I060=I050+IINTFP*MAXT
C
C READ W AS W(em,AJ)
C
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
C
C READ T AS T(ik,me) AND TRANSPOSE TO T(ik,em)
C
       CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT,'NANN')
       CALL SYMTR1(IRREP,POP(1,2),VRT(1,2),DISSYT,ICORE(I020),
     &             ICORE(I030),ICORE(I040),ICORE(I050))
C
C MULTIPLY : Z(ik,AJ) = -T(ik,em) * W(em,AJ)
C              NA NN       NA NN      NN NN
C
       NROW=DISSYT
       NCOL=NUMDSW
       NSUM=NUMDST
       CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(I020),NROW,
     &            ICORE(I010),NSUM,ONE,ICORE(I000),NROW)
C
C NOW REORDER INCREMENT TO Z(JA,ik) AND PUT ON INCREMENT LIST
C
       CALL SYMTR1(IRREP,VRT(1,1),POP(1,1),DISSYT,ICORE(I000),
     &             ICORE(I030),ICORE(I040),ICORE(I050))
       CALL TRANSP(ICORE(I000),ICORE(I010),DISSYZ,NUMDSZ)
       CALL FSPUT(ICORE(I010),1,NUMDSZ,1,IRREP,LISTZ,'NNNA')
C
300   CONTINUE
C
C NOW BEFORE DOING TERM III, WE HAVE TO RESORT THE INCREMENT LIST
C AND ALSO GENERATE A NEW RESORTED T LIST.  A REAL HASSLE.  INCREMENTS
C AND T VECTORS MUST BE RESORTED AS FOLLOWS:
C
C         Z(JA,ik) -> Z(Jk,iA) -> Z(Jk,Ai)
C
      LISTDO(1)=LISTZ
      LISTDO(2)=3
      DO 301 IDO=1,2
       NSIZE=ISYMSZ(ISYTYP(1,LISTDO(IDO)),ISYTYP(2,LISTDO(IDO)))
       I000=1
       I010=I000+NSIZE*IINTFP
       I020=I010+NSIZE*IINTFP
       CALL GETALL(ICORE(I000),NSIZE,1,LISTDO(IDO))
       CALL SSTGEN(ICORE(I000),ICORE(I010),NSIZE,POP(1,1),VRT(1,1),
     &             POP(1,2),POP(1,2),ICORE(I020),1,'1432')
       CALL NEWTYP(LISTDO(IDO),14,11,.TRUE.)
       IOFF=I010
       DO 303 IRREP=1,NIRREP
       	NUMDIS=IRPDPD(IRREP,ISYTYP(2,LISTDO(IDO)))
        DISSIZ=IRPDPD(IRREP,ISYTYP(1,LISTDO(IDO)))
        I030=I020+IINTFP*DISSIZ
        I040=I030+IINTFP*DISSIZ
        I050=I040+IINTFP*DISSIZ
        CALL SYMTR1(IRREP,POP(1,2),VRT(1,1),DISSIZ,ICORE(IOFF),
     &              ICORE(I020),ICORE(I030),ICORE(I040))
        IOFF=IOFF+NUMDIS*DISSIZ*IINTFP
303    CONTINUE
       CALL PUTALL(ICORE(I010),NSIZE,1,LISTDO(IDO))
301   CONTINUE
C
C NOW DO TERM III WITH THESE NICE RESORTED LISTS
C
C         - T(Jm,Ek) * W(mA,Ei)    [TERM III]
C             NN NA      NN NN
C
      DO 310 IRREP=1,NIRREP
       LISTW=58
       LISTT=3
       DISSYT=FSDPDNA(IRREP,ISYTYP(1,LISTT))        
       NUMDST=IRPDPD (IRREP,ISYTYP(2,LISTT))
       DISSYW=IRPDPD (IRREP,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD (IRREP,ISYTYP(2,LISTW))
       DISSYZ=FSDPDNA(IRREP,ISYTYP(1,LISTZ))
       NUMDSZ=IRPDPD (IRREP,ISYTYP(2,LISTZ))
       MAXT  =MAX(DISSYT,NUMDST,DISSYW,NUMDSW,DISSYZ,NUMDSZ)
       I000=1
       I010=I000+IINTFP*NUMDSZ*DISSYZ
       I020=I010+IINTFP*NUMDSW*DISSYW
       I030=I020+IINTFP*NUMDST*DISSYT
C
C READ W AS W(Em,Ai)
C             NN NN
C
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTW)
C
C READ T AS T(Jk,Em)
C             NA NN
C
       CALL FSGET (ICORE(I020),1,NUMDST,1,IRREP,LISTT,'NANN')
C
C MULTIPLY : Z(Jk,Ai) = -T(Jk,Em) * W(Em,Ai)
C              NA NN       NA NN      NN NN
C
       NROW=DISSYT
       NCOL=NUMDSW
       NSUM=NUMDST
       CALL XGEMM('N','N',NROW,NCOL,NSUM,ONEM,ICORE(I020),NROW,
     &            ICORE(I010),NSUM,ZILCH,ICORE(I000),NROW)
       CALL FSGET (ICORE(I020),1,NUMDSW,1,IRREP,LISTZ,'NANN')
       CALL SAXPY (NROW*NCOL,ONE,ICORE(I000),1,ICORE(I020),1)
       CALL FSPUT (ICORE(I020),1,NUMDSW,1,IRREP,LISTZ,'NANN')
310   CONTINUE
C
C NOW RESORT INCREMENTS AS FOLLOWS
C
C        Z(Jk,Ai) -> Z(Ji,Ak)
C
C AND DUMP BACK TO DISK
C
      NSIZE=ISYMSZ(ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
      I000=1
      I010=I000+IINTFP*NSIZE
      I020=I010+IINTFP*NSIZE
      CALL GETALL(ICORE(I000),NSIZE,1,LISTZ)
      CALL SSTGEN(ICORE(I000),ICORE(I010),NSIZE,POP(1,1),POP(1,2),
     &            VRT(1,1),POP(1,2),ICORE(I020),1,'1432')
      CALL GETALL(ICORE(I000),NSIZE,1,198)
      CALL SAXPY (NSIZE,ONE,ICORE(I010),1,ICORE(I000),1)
      CALL PUTALL(ICORE(I000),NSIZE,1,198)
      CALL NEWTYP(3,16,22,.TRUE.)
      CALL NEWTYP(83,16,22,.TRUE.)
C
      RETURN
      END
