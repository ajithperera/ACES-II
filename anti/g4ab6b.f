      SUBROUTINE G4AB6B(GAMMA,BUF,BUF1,BUF2,GOFF,DOIRR,LENGAM,FABCD)
C
C THIS ROUTINE PROCESSES THE G<Ij,Kl> GAMMA LISTS AND FILLS
C  OUT THE ABCD SYMMETRY CASE MULLIKEN ORDERED GAMMA FOR 
C  SPIN CASE BBAA.  THIS IS FOR UHF CALCULATIONS ONLY!
C
C          12 34        31 42
C        G(bd,AC) <-- g<Ab,Cd>
C
C          12 34        32 41
C        G(db,AC) <-- g<Ab,Cd>
C
C  THE TWO ELEMENTS ABOVE ARE ADDED FOR PURPOSES OF SYMMETRIZATION
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION GAMMA(LENGAM),BUF(1),X,X1,X2 
      DOUBLE PRECISION FABIJ,FABCD,FIJKL,FAIBJ,FABCI,FIJKA
      DOUBLE PRECISION BUF1(*),BUF2(*),ONE,TWO
      INTEGER GOFF(8,8,8,8),IDID(8),IOFFSL(8)
      INTEGER IOFFSR(8),DOIRR(42,4)
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      LOGICAl MBPT4
      LOGICAL GABCD,DABCD
      LOGICAL TDA,EOM
C
      COMMON /METH/ MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /MOPOPS/ MOPOP(8)
      COMMON /IABCD/ IOFFABCD
      COMMON /ABCD/  GABCD,DABCD
      COMMON /EXCITE/ TDA,EOM
      COMMON /STATSYM/IRREPX
C
      DATA ONE,TWO /1.D0,2.D0/
C
      INDXF(I,J,N)=I+(J-1)*N
      INDXT(I,J)  =I+(J*(J-1))/2
      NNP1O2(I)   =(I*(I+1))/2
C
C CALCULATE HOW MANY UNIQUE ABCD SYMMETRY SETS THERE ARE
C
      IF(NIRREP.EQ.8)THEN
       NUMABCD=42
      ELSEIF(NIRREP.EQ.4)THEN
       NUMABCD=3
      ENDIF
C
      NPASS=1
      IF(DABCD.AND.EOM) NPASS=2
C
      LISTABCD=IOFFABCD+133
C
      DO 10 IRREPGET2=2,NIRREP
C
       DO 90 IPASS=1,NPASS
C
       IF(DABCD) THEN
C
        IF(IPASS.EQ.1) THEN
C
         NUMDSZ=IRPDPD(IRREPGET2,ISYTYP(2,146))
         DISDSZ=IRPDPD(IRREPGET2,ISYTYP(1,146))
         CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET2,156)
         CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET2,146)
         IF(CCSD) THEN
          I0TA=1
          I0TB=1+NT(1)
          CALL GETLST(BUF(I0TA),1,1,1,1,157)
          CALL GETLST(BUF(I0TB),1,1,1,2,157)
          CALL FTAU(BUF1,BUF(I0TA),BUF(I0TB),DISDSZ,NUMDSZ,
     &              POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),
     &              IRREPGET2,3,ONE)
         ENDIF
C
         MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ
         IF(MBPT4) THEN
          CALL SSCAL(NUMDSZ*DISDSZ,TWO,BUF2,1)
          CALL SAXPY(NUMDSZ*DISDSZ,ONE,BUF1,1,BUF2,1)
         ENDIF
C
        ELSE
C
C SECOND PASS, ONLY FOR EOM-CCSD REQUIRED
C
         IRREPGET3=DIRPRD(IRREPGET2,IRREPX)
         NUMDSZ=IRPDPD(IRREPGET3,ISYTYP(2,463))
         DISDSZ=IRPDPD(IRREPGET2,ISYTYP(1,463))
C
         CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET3,463)
         CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET3,446)
C
         I0TA=1
         I0TB=1+NT(1)
         I0RA=I0TB+NT(2)
         I0RB=I0RA+IRPDPD(IRREPX,9)
         CALL GETLST(BUF(I0TA),1,1,1,1,157)
         CALL GETLST(BUF(I0RA),1,1,1,3,490)
         CALL GETLST(BUF(I0TB),1,1,1,2,157)
         CALL GETLST(BUF(I0RB),1,1,1,4,490)
C
         CALL DTAU(IRREPGET2,IRREPGET3,1,IRREPX,BUF1,
     &             BUF(I0TA),BUF(I0TB),BUF(I0RA),BUF(I0RB),
     &             3,ONE)
C
        ENDIF
       ENDIF

      DO 100 ICOUNT=1,NUMABCD
       IRREP1M=DOIRR(ICOUNT,1)
       IRREP2M=DOIRR(ICOUNT,2)
       IRREP3M=DOIRR(ICOUNT,3)
       IRREP4M=DOIRR(ICOUNT,4)
       IOFFSET=GOFF(IRREP1M,IRREP2M,IRREP3M,IRREP4M)
C
C         12 34        31 42
C       G(bd,AC) <-- g<Ab,Cd>
C
       IRREPGET=DIRPRD(IRREP2M,IRREP4M)
C
       IF(IRREPGET2.EQ.IRREPGET) THEN
C
        IOFFR=1
        IOFFL=1
        DO 2000 IRREPA=1,NIRREP
         IRREPB=DIRPRD(IRREPA,IRREPGET)
         IOFFSR(IRREPA)=IOFFR
         IOFFSL(IRREPA)=IOFFL
         IOFFR=IOFFR+VRT(IRREPB,1)*VRT(IRREPA,2)
         IOFFL=IOFFL+VRT(IRREPB,1)*VRT(IRREPA,2)
2000    CONTINUE
C
        ILOGREC=IOFFSR(IRREP2M)
        IFIRST=IOFFSL(IRREP1M)
        NUMD=VRT(IRREP2M,2)
        NUMC=VRT(IRREP4M,1)
        NUMB=VRT(IRREP1M,2)
        NUMA=VRT(IRREP3M,1) 
        MAXL=MOPOP(IRREP1M)*MOPOP(IRREP2M)
        DO 120 INDXD=1,NUMD
         DO 130 INDXC=1,NUMC
          INDD=INDXD+POP(IRREP2M,2)
          INDC=INDXC+POP(IRREP4M,1)
C
          IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK
C

           CALL GETLST(BUF,ILOGREC,1,1,IRREPGET,LISTABCD)
C
          ELSE
C
C CALCULATE G(AB,CD) ON THE FLY
C
           CALL DIRG2(BUF,BUF1,BUF2,BUF1,BUF2,NUMDSZ,DISDSZ,
     &                ILOGREC,IRREPGET,1)
C
          ENDIF
C
          ILOGREC=ILOGREC+1
          IPOS=IOFFSL(IRREP1M)
          DO 140 INDXB=1,NUMB
           DO 150 INDXA=1,NUMA
            X=BUF(IPOS)*FABCD
            IPOS=IPOS+1
            INDB=INDXB+POP(IRREP1M,2)
            INDA=INDXA+POP(IRREP3M,1)
            GINDXL=INDXF(INDA,INDC,MOPOP(IRREP3M))
            GINDXR=INDXF(INDB,INDD,MOPOP(IRREP1M))
            GINDX0=INDXF(GINDXR,GINDXL,MAXL)
            GINDX =GINDX0+IOFFSET
            GAMMA(GINDX)=GAMMA(GINDX)+X
150        CONTINUE
140       CONTINUE
130      CONTINUE
120     CONTINUE
C
       ENDIF
C
C         12 34        32 41
C       G(db,AC) <-- g<Ab,Cd>
C
       IRREPGET=DIRPRD(IRREP1M,IRREP4M)
C
       IF(IRREPGET.EQ.IRREPGET2) THEN
C
        IOFFR=1
        IOFFL=1
        DO 3000 IRREPA=1,NIRREP
         IRREPB=DIRPRD(IRREPA,IRREPGET)
         IOFFSR(IRREPA)=IOFFR
         IOFFSL(IRREPA)=IOFFL
         IOFFR=IOFFR+VRT(IRREPB,1)*VRT(IRREPA,2)
         IOFFL=IOFFL+VRT(IRREPB,1)*VRT(IRREPA,2)
3000    CONTINUE
C 
        ILOGREC=IOFFSR(IRREP1M)
        IFIRST=IOFFSL(IRREP2M)
        NUMD=VRT(IRREP1M,2)
        NUMC=VRT(IRREP4M,1)
        NUMB=VRT(IRREP2M,2)
        NUMA=VRT(IRREP3M,1) 
        MAXL=MOPOP(IRREP1M)*MOPOP(IRREP2M)
        DO 220 INDXD=1,NUMD
         DO 230 INDXC=1,NUMC
          INDD=INDXD+POP(IRREP1M,2)
          INDC=INDXC+POP(IRREP4M,1)
C
          IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK
C
           CALL GETLST(BUF,ILOGREC,1,1,IRREPGET,LISTABCD)
C
          ELSE
C
C CALCULATE G(AB,CD) ON THE FLY
C
           CALL DIRG2(BUF,BUF1,BUF2,BUF1,BUF2,NUMDSZ,DISDSZ,
     &                ILOGREC,IRREPGET,1)
C
          ENDIF
C
          ILOGREC=ILOGREC+1
          IPOS=IOFFSL(IRREP2M)
          DO 240 INDXB=1,NUMB
           DO 250 INDXA=1,NUMA
            X=BUF(IPOS)*FABCD
            IPOS=IPOS+1
            INDB=INDXB+POP(IRREP2M,2)
            INDA=INDXA+POP(IRREP3M,1)
            GINDXL=INDXF(INDA,INDC,MOPOP(IRREP3M))
            GINDXR=INDXF(INDD,INDB,MOPOP(IRREP1M))
            GINDX0=INDXF(GINDXR,GINDXL,MAXL)
            GINDX =GINDX0+IOFFSET
            GAMMA(GINDX)=GAMMA(GINDX)+X
250        CONTINUE
240       CONTINUE
230      CONTINUE
220     CONTINUE
C
       ENDIF
C
100   CONTINUE
90    CONTINUE
10    CONTINUE
      RETURN
      END
