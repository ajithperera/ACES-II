      SUBROUTINE GAMM4(ICORE,MAXCOR,IUHF,ALASKA)
C
C THIS ROUTINE DRIVES THE PROCESSING OF THE ABAB GAMMAS
C
      IMPLICIT INTEGER (A-Z)
      LOGICAL GABCD,DABCD,ALASKA
      LOGICAL TDA,EOM
C
      DIMENSION ICORE(MAXCOR),GOFF(8,8,8,8),IDID(8),DOIRR(42,4)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /MOPOPS/ MOPOP(8)
      COMMON /ABCD/  GABCD,DABCD
      COMMON /EXCITE/ TDA,EOM
      COMMON /STATSYM/IRREPX
C
C COMPUTE FULL SIZE OF THE ABCD GAMMA AND OFFSET FOR EACH IRREP
C  COMBINATION.  THE USUAL NASTY LOGIC FOR THE ABCD THINGS.
C
      LENGAM=0
      ITHRU=1
      DO 10 IRREPDO=2,NIRREP
       DO 20 IRREPD=1,NIRREP
        IRREPC=DIRPRD(IRREPD,IRREPDO)
        IF(IRREPC.LT.IRREPD)GOTO 20
        IBOT=MAX(IRREPC,IRREPD)+1
        CALL IZERO(IDID,NIRREP)
        DO 30 IRREPTMP=IBOT,NIRREP
         IRREPA=DIRPRD(IRREPTMP,IRREPDO)
         IRREPB=MIN(IRREPTMP,IRREPA)
         IRREPA=MAX(IRREPTMP,IRREPA)
         IF(MAX(IDID(IRREPA),IDID(IRREPB)).NE.0)GOTO 30
         IDID(IRREPA)=1
         IDID(IRREPB)=1
         SIZEL=MOPOP(IRREPA)*MOPOP(IRREPB)
         SIZER=MOPOP(IRREPC)*MOPOP(IRREPD)
         GOFF(IRREPA,IRREPB,IRREPC,IRREPD)=LENGAM
         LENGAM=LENGAM+SIZEL*SIZER
         DOIRR(ITHRU,1)=IRREPA
         DOIRR(ITHRU,2)=IRREPB
         DOIRR(ITHRU,3)=IRREPC
         DOIRR(ITHRU,4)=IRREPD
         ITHRU=ITHRU+1
30      CONTINUE
20     CONTINUE
10    CONTINUE
C
      IF(DABCD) THEN
C
       LENT=0
       LENSCR=0
       DO 1 ISPIN=3-2*IUHF,3
        DO 2 IRREP=2,NIRREP
C	
         LENT=MAX(LENT,IRPDPD(IRREP,ISYTYP(1,143+ISPIN))*
     &                 IRPDPD(IRREP,ISYTYP(2,143+ISPIN)))
         LENSCR=MAX(LENSCR,IRPDPD(IRREP,ISYTYP(1,143+ISPIN)),
     &                     IRPDPD(IRREP,ISYTYP(2,143+ISPIN)))
C
2       CONTINUE
C
        IF(EOM) THEN
C
         DO 3 IRREPL=2,NIRREP
C
          IRREPR=DIRPRD(IRREPX,IRREPL)
C	
          LENT=MAX(LENT,IRPDPD(IRREPL,ISYTYP(1,143+ISPIN))*
     &                  IRPDPD(IRREPR,ISYTYP(2,143+ISPIN)))
          LENSCR=MAX(LENSCR,IRPDPD(IRREPL,ISYTYP(1,143+ISPIN)),
     &                      IRPDPD(IRREPR,ISYTYP(2,143+ISPIN)))
C
3        CONTINUE
C
        ENDIF
C
1      CONTINUE
C
       LENTOTAL=LENGAM+2*(LENT+(1-IUHF)*LENSCR)
C
      ELSE
C
       LENTOTAL=LENGAM
C
      ENDIF 
C
C DETERMINE IF THERE IS SUFFICIENT CORE TO DO THIS IN ONE SHOT
C
      IF(LENTOTAL.LE.MAXCOR/IINTFP)THEN
       ISTART=1
C
       IF(DABCD) THEN
        I001=ISTART
        I002=I001+LENT*IINTFP
        I003=I002+LENT*IINTFP
        I004=I003+LENSCR*IINTFP*(1-IUHF)
        ISTART=I004+LENSCR*IINTFP*(1-IUHF)
       ENDIF
C
       I000=ISTART
       I010=I000+LENGAM*IINTFP
       IF(IUHF.EQ.0)THEN
        CALL GAM4AB(ICORE(ISTART),ICORE(I010),
     &              ICORE(I001),ICORE(I002),
     &              ICORE(I003),ICORE(I004),
     &              GOFF,DOIRR,LENGAM,IUHF,ALASKA)
       ELSEIF(IUHF.NE.0)THEN
        CALL GAM4ABU(ICORE(ISTART),ICORE(I010),
     &               ICORE(I001),ICORE(I002),GOFF,DOIRR,LENGAM,ALASKA)
        CALL GAM4AA(ICORE(ISTART),ICORE(I010),
     &              ICORE(I001),ICORE(I002),GOFF,DOIRR,LENGAM)
       ENDIF
      ELSE
       CALL INSMEM('GAMM4   ',LENTOTAL,MAXCOR)
      ENDIF
      RETURN
      END
