      SUBROUTINE G3AB6(GAMMA,BUF,BUF1,BUF2,SCR1,SCR2,
     &                 GOFF,LENGAM,FABCD,IUHF)
C
C THIS ROUTINE PROCESSES THE G(Ac,Bd) GAMMA LISTS FOR SPIN CASE
C AB AND FILLS THE SYMMETRY CASE ABAB MULLIKEN ORDERED GAMMA LIST.
C THIS IS THE INCORE VERSION!
C
C NOTE THAT ABAB IN MULLIKEN CORRESPONDS TO AABB IN DIRAC.
C
C     G(AB,cd) = G(AB,cd) + G(BA,cd) + G(AB,dc) + G(BA,dc)
C
C THE GAMMAS ON DISK DO NOT HAVE THE COMPLETE SYMMETRY, BUT
C ONLY SATISFY G(AB,cd) = G(BA,dc).  CONSEQUENTLY, TWO
C CONTRIBUTIONS TO EACH G(AB,cd) ARE NEEDED.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION GAMMA(LENGAM),BUF(1),X,X1,X2
      DOUBLE PRECISION BUF1(*),BUF2(*),SCR1(*),SCR2(*),ONE,TWO 
      DOUBLE PRECISION FABIJ,FAIBJ,FABCD,FIJKL,FABCI,FIJKA
      INTEGER GOFF(8,8),IOFFSL(8),IOFFSR(8)
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      LOGICAL MBPT4
      LOGICAL GABCD,DABCD
      LOGICAL TDA,EOM
C
      COMMON /METH/ MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /MOPOPS/ MOPOP(8)
      COMMON /IABCD/ IOFFABCD
      COMMON /ABCD/ GABCD,DABCD
      COMMON /EXCITE/ TDA,EOM 
      COMMON /STATSYM/IRREPX
C
      DATA ONE,TWO /1.D0,2.D0/
C
      INDXF(I,J,N)=I+(J-1)*N
      INDXT(I,J)  =I+(J*(J-1))/2
      NNP1O2(I)   =(I*(I+1))/2
C
C COMPUTE OFFSETS TO FIRST ELEMENT OF ALL G(XX,YY) IRREP POSITIONS
C
      NPASS=1
      IF(DABCD.AND.EOM) NPASS=2
C
      LISTABCD=IOFFABCD+133
C
      DO 90 IPASS=1,NPASS
C
      IOFFR=1
      IOFFL=1
      DO 1000 IRREPR=1,NIRREP
       IOFFSR(IRREPR)=IOFFR
       IOFFSL(IRREPR)=IOFFR
       IOFFR=IOFFR+VRT(IRREPR,1)*VRT(IRREPR,2)
1000  CONTINUE
C
      IF(DABCD) THEN
C
       IF(IPASS.EQ.1) THEN
C
        NUMDSZ=IRPDPD(1,ISYTYP(2,146))
        DISDSZ=IRPDPD(1,ISYTYP(1,146))
        CALL GETLST(BUF1,1,NUMDSZ,1,1,156)
        CALL GETLST(BUF2,1,NUMDSZ,1,1,146) 
        IF(CCSD) THEN
         I0TA=1
         I0TB=I0TA+NT(1)*IUHF
         CALL GETLST(BUF(I0TA),1,1,1,1,157)
         IF(IUHF.NE.0) CALL GETLST(BUF(I0TB),1,1,1,2,157)
         CALL FTAU(BUF1,BUF(I0TA),BUF(I0TB),DISDSZ,NUMDSZ,
     &             POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),1,3,ONE)
        ENDIF
        MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ
        IF(MBPT4) THEN
         CALL SSCAL(NUMDSZ*DISDSZ,TWO,BUF2,1)
         CALL SAXPY(NUMDSZ*DISDSZ,ONE,BUF1,1,BUF2,1)
        ENDIF
C
       ELSE
C
C SECOND PASS, ONLY FOR EOM-CCSD REQUIRED
C
        IRREPGET=DIRPRD(1,IRREPX)
        NUMDSZ=IRPDPD(IRREPGET,ISYTYP(2,463))
        DISDSZ=IRPDPD(1,ISYTYP(1,463))
C
        CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET,463)
        CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET,446)
C 
        I0TA=1
        I0TB=I0TA+NT(1)*IUHF
        I0RA=I0TB+NT(2)
        I0RB=I0RA+IRPDPD(IRREPX,9)*IUHF
        CALL GETLST(BUF(I0TA),1,1,1,1,157)
        CALL GETLST(BUF(I0RA),1,1,1,3,490)
        IF(IUHF.EQ.1) THEN
         CALL GETLST(BUF(I0TB),1,1,1,2,157)
         CALL GETLST(BUF(I0RB),1,1,1,4,490)
        ENDIF
C
        CALL DTAU(1,IRREPGET,1,IRREPX,BUF1,
     &            BUF(I0TA),BUF(I0TB),BUF(I0RA),BUF(I0RB),
     &            3,ONE)
C
       ENDIF
C
      ENDIF
C
      DO 100 IRREPDO=2,NIRREP
       DO 110 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPDO)
        IF(IRREPL.GT.IRREPR)THEN
         ILOGREC=IOFFSR(IRREPR)
         IFIRST =IOFFSL(IRREPL)
         NUMD=VRT(IRREPR,2)
         NUMC=VRT(IRREPR,1)
         NUMB=VRT(IRREPL,2)
         NUMA=VRT(IRREPL,1)
         MAXL=MOPOP(IRREPL)*MOPOP(IRREPR)
         MAXA=MOPOP(IRREPL)
         DO 120 INDXD=1,NUMD
          DO 130 INDXC=1,NUMC
           INDD=INDXD+POP(IRREPR,2)
           INDC=INDXC+POP(IRREPR,1)  
C
           IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK 
C
            CALL GETLST(BUF,ILOGREC,1,1,1,LISTABCD)
C
           ELSE
C
C CALCULATE G(AB,CD) ON THE FLY
C
            CALL DIRG2(BUF,BUF1,BUF2,SCR1,SCR2,NUMDSZ,DISDSZ,
     &                 ILOGREC,1,IUHF)
C
           ENDIF
           ILOGREC=ILOGREC+1
           IPOS=IFIRST
           DO 140 INDXB=1,NUMB
            DO 150 INDXA=1,NUMA
             X=BUF(IPOS)*FABCD
             IPOS=IPOS+1
             INDA=INDXA+POP(IRREPL,2)
             INDB=INDXB+POP(IRREPL,1)
             GINDXD=INDXF(INDA,INDC,MAXA)
             GINDXR=INDXF(INDB,INDD,MAXA)
             GINDX0=INDXF(GINDXD,GINDXR,MAXL)
             GINDX =GINDX0+GOFF(IRREPL,IRREPR)
             GAMMA(GINDX)=GAMMA(GINDX)+X
150         CONTINUE
140        CONTINUE
130       CONTINUE
120      CONTINUE
        ENDIF
110    CONTINUE
100   CONTINUE
C
C NOW WE MUST LOOP OVER ALL OTHER IRREPS AND PUT THE OTHER PIECE IN
C
      DO 160 IRREPDO=2,NIRREP
C
C COMPUTE OFFSETS TO ALL BA AB POSITIONS
C
      IOFFR=1
      IOFFL=1
      DO 1200 IRREPR=1,NIRREP
       IRREPL=DIRPRD(IRREPR,IRREPDO)
       IOFFSR(IRREPR)=IOFFR
       IOFFSL(IRREPR)=IOFFR
       IOFFR=IOFFR+VRT(IRREPL,1)*VRT(IRREPR,2)
1200  CONTINUE
C
      IF(DABCD) THEN
C
       IF(IPASS.EQ.1) THEN
C
        NUMDSZ=IRPDPD(IRREPDO,ISYTYP(2,146))
        DISDSZ=IRPDPD(IRREPDO,ISYTYP(1,146))
        CALL GETLST(BUF1,1,NUMDSZ,1,IRREPDO,156)
        CALL GETLST(BUF2,1,NUMDSZ,1,IRREPDO,146) 
        IF(CCSD) THEN
         I0TA=1
         I0TB=I0TA+NT(1)*IUHF
         CALL GETLST(BUF(I0TA),1,1,1,1,157)
         IF(IUHF.NE.0) CALL GETLST(BUF(I0TB),1,1,1,2,157)
         CALL FTAU(BUF1,BUF(I0TA),BUF(I0TB),DISDSZ,NUMDSZ,
     &             POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),
     &             IRREPDO,3,ONE)
        ENDIF
        MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ
        IF(MBPT4) THEN
         CALL SSCAL(NUMDSZ*DISDSZ,TWO,BUF2,1)
         CALL SAXPY(NUMDSZ*DISDSZ,ONE,BUF1,1,BUF2,1)
        ENDIF
C
       ELSE
C
C SECOND PASS, ONLY FOR EOM-CCSD REQUIRED
C
        IRREPGET=DIRPRD(IRREPDO,IRREPX)
        NUMDSZ=IRPDPD(IRREPGET,ISYTYP(2,463))
        DISDSZ=IRPDPD(IRREPDO,ISYTYP(1,463))
C
        CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET,463)
        CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET,446)
C
        I0TA=1
        I0TB=I0TA+NT(1)*IUHF
        I0RA=I0TB+NT(2)
        I0RB=I0RA+IRPDPD(IRREPX,9)*IUHF
        CALL GETLST(BUF(I0TA),1,1,1,1,157)
        CALL GETLST(BUF(I0RA),1,1,1,3,490)
        IF(IUHF.EQ.1) THEN
         CALL GETLST(BUF(I0TB),1,1,1,2,157)
         CALL GETLST(BUF(I0RB),1,1,1,4,490)
        ENDIF
C
        CALL DTAU(IRREPDO,IRREPGET,1,IRREPX,BUF1,
     &            BUF(I0TA),BUF(I0TB),BUF(I0RA),BUF(I0RB),
     &            3,ONE)
C
       ENDIF
C
      ENDIF
C
      DO 170 IRREPB=1,NIRREP
       IRREPA=DIRPRD(IRREPB,IRREPDO)
       IF(IRREPA.LT.IRREPB)THEN
        ILOGREC=IOFFSR(IRREPB)
        IFIRST=IOFFSL(IRREPA)
        NUMD=VRT(IRREPB,2)
        NUMC=VRT(IRREPA,1)
        NUMB=VRT(IRREPA,2)
        NUMA=VRT(IRREPB,1)
        MAXL=MOPOP(IRREPA)*MOPOP(IRREPB)
        MAXA=MOPOP(IRREPA)
        MAXB=MOPOP(IRREPB)
        DO 180 INDXD=1,NUMD
         DO 185 INDXC=1,NUMC
          INDD=INDXD+POP(IRREPB,2)
          INDC=INDXC+POP(IRREPA,1)
C
          IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK
C
           CALL GETLST(BUF,ILOGREC,1,1,IRREPDO,LISTABCD)
C
          ELSE
C
C CALCULATE G(AB,CD) ON THE FLY
C
           CALL DIRG2(BUF,BUF1,BUF2,SCR1,SCR2,NUMDSZ,DISDSZ,
     &                ILOGREC,IRREPDO,IUHF)
C
          ENDIF
          ILOGREC=ILOGREC+1
          IPOS=IFIRST
           DO 190 INDXB=1,NUMB
            DO 195 INDXA=1,NUMA
             INDB=INDXB+POP(IRREPA,2)
             INDA=INDXA+POP(IRREPB,1)
             X=BUF(IPOS)*FABCD
             IPOS=IPOS+1
             GINDXL=INDXF(INDA,INDC,MAXB)
             GINDXR=INDXF(INDD,INDB,MAXB)
             GINDX0=INDXF(GINDXL,GINDXR,MAXL)
             GINDX=GINDX0+GOFF(IRREPB,IRREPA)
             GAMMA(GINDX)=GAMMA(GINDX)+X
195         CONTINUE
190        CONTINUE
185      CONTINUE
180     CONTINUE
       ENDIF
170   CONTINUE
160   CONTINUE
90    CONTINUE
      RETURN
      END
