      SUBROUTINE G4AA6(GAMMA,BUF,BUF1,BUF2,GOFF,DOIRR,
     &                 LENGAM,ISPIN,FABCD)
C
C THIS ROUTINE PROCESSES THE G<I<J,K<L> GAMMA LISTS AND FILLS
C  OUT THE ABCD SYMMETRY CASE MULLIKEN ORDERED GAMMA FOR 
C  SPIN CASE AABB.  THIS IS FOR UHF CALCULATIONS ONLY!
C
C          12 34        13 24
C        G(AC,BD) <-- g<AB,CD>
C
C          12 34        23 14
C        G(CA,BD) <-- g<AB,CD>
C
C ONE MUST BE VERY CAREFUL HERE ABOUT SIGNS SINCE ONLY THOSE
C  IRREP PAIRS PQ ARE ON DISK SUCH THAT P<Q.  THIS MAKES THE
C  LOGIC FOR THIS ROUTINE SLIGHTLY COMPLICATED!  THIS IS HANDLED
C  BY SUBROUTINE GETFAC, WHICH DETERMINES THE SIGN AND REORDERS
C  EACH IRREP QUADRUPLET IN AN APPROPRIATE WAY.  COMPLICATED STUFF.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION GAMMA(LENGAM),BUF(1),X,X1,X2 ,FACTOR,FACT
      DOUBLE PRECISION BUF1(*),BUF2(*),ONE,TWO
      DOUBLE PRECISION FABIJ,FIJKL,FABCD,FAIBJ,FABCI,FIJKA
      INTEGER GOFF(8,8,8,8),IDID(8),IOFFSL(8)
      INTEGER IOFFSR(8),DOIRR(42,4),IPTR(4),IND(4)
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      LOGICAL MBPT4
      LOGICAL GABCD,DABCD
      LOGICAL TDA,EOM
C
      COMMON /METH/ MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /MOPOPS/ MOPOP(8)
      COMMON /IABCD/ IOFFABCD
      COMMON /ABCD/  GABCD,DABCD
      COMMON /EXCITE/ TDA,EOM
      COMMON /STATSYM/IRREPX
C
      DATA ONE,TWO/1.D0,2.D0/
C
      INDXF(I,J,N)=I+(J-1)*N
      INDXT(I,J)  =I+(J*(J-1))/2
      NNP1O2(I)   =(I*(I+1))/2
      NNM1O2(I)   =(I*(I-1))/2
C
C CALCULATE HOW MANY UNIQUE ABCD SYMMETRY SETS THERE ARE
C
      IF(NIRREP.EQ.8)THEN
       NUMABCD=42
      ELSEIF(NIRREP.EQ.4)THEN
       NUMABCD=3
      ENDIF
C
      NPASS=1
      IF(DABCD.AND.EOM) NPASS=2
C     
      LISTABCD=IOFFABCD+130+ISPIN
C
      DO 10 IRREPGET2=2,NIRREP
C
       DO 90 IPASS=1,NPASS
C
       IF(DABCD) THEN
        IF(IPASS.EQ.1) THEN
C
         NUMDSZ=IRPDPD(IRREPGET2,ISYTYP(2,143+ISPIN))
         DISDSZ=IRPDPD(IRREPGET2,ISYTYP(1,143+ISPIN))
         CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET2,153+ISPIN)
         CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET2,143+ISPIN)
         IF(CCSD) THEN
          I0TA=1
          CALL GETLST(BUF(I0TA),1,1,1,ISPIN,157)
          CALL FTAU(BUF1,BUF(I0TA),BUF(I0TA),DISDSZ,NUMDSZ,
     &              POP(1,ISPIN),POP(1,ISPIN),VRT(1,ISPIN),VRT(1,ISPIN),
     &              IRREPGET2,ISPIN,ONE)
         ENDIF
C
         MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ
         IF(MBPT4) THEN
          CALL SSCAL(NUMDSZ*DISDSZ,TWO,BUF2,1)
          CALL SAXPY(NUMDSZ*DISDSZ,ONE,BUF1,1,BUF2,1)
         ENDIF
C
        ELSE
C
C SECOND PASS, ONLY FOR EOM-CCSD REQUIRED
C
         IRREPGET3=DIRPRD(IRREPGET2,IRREPX)
         NUMDSZ=IRPDPD(IRREPGET3,ISYTYP(2,460+ISPIN))
         DISDSZ=IRPDPD(IRREPGET2,ISYTYP(1,460+ISPIN))
C
         CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET3,460+ISPIN)
         CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET3,443+ISPIN)
C
         I0TA=1
         I0RA=I0TA+NT(ISPIN)
         CALL GETLST(BUF(I0TA),1,1,1,ISPIN,157)
         CALL GETLST(BUF(I0RA),1,1,1,2+ISPIN,490)
C
         CALL DTAU(IRREPGET2,IRREPGET3,1,IRREPX,BUF1,
     &             BUF(I0TA),BUF(I0TA),BUF(I0RA),BUF(I0RA),
     &             ISPIN,ONE)
C
        ENDIF
C
       ENDIF
C
      DO 100 ICOUNT=1,NUMABCD
       IRREP1M=DOIRR(ICOUNT,1)
       IRREP2M=DOIRR(ICOUNT,2)
       IRREP3M=DOIRR(ICOUNT,3)
       IRREP4M=DOIRR(ICOUNT,4)
C
       IOFFSET=GOFF(IRREP1M,IRREP2M,IRREP3M,IRREP4M)
       MAXL=MOPOP(IRREP1M)*MOPOP(IRREP2M)
       MAXL1=MOPOP(IRREP1M)
       MAXL2=MOPOP(IRREP3M)
C
       CALL GETFAC(IRREP1M,IRREP3M,IRREP2M,IRREP4M,IPTR,FACTOR)
       FACT=FABCD*FACTOR
C
C         12 34        13 24
C       G(AC,BD) <-- g<AB,CD>
C
       IRREPGET=DIRPRD(IRREP2M,IRREP4M)
C
       IF(IRREPGET2.EQ.IRREPGET) THEN
C
        IOFFR=1
        IOFFL=1
        DO 2000 IRREPA=1,NIRREP
         IRREPB=DIRPRD(IRREPA,IRREPGET)
         IF(IRREPB.GT.IRREPA)GOTO 2000
         IOFFSR(IRREPA)=IOFFR
         IOFFSL(IRREPA)=IOFFL
         IOFFR=IOFFR+VRT(IRREPB,ISPIN)*VRT(IRREPA,ISPIN)
         IOFFL=IOFFL+VRT(IRREPB,ISPIN)*VRT(IRREPA,ISPIN)
2000    CONTINUE
C
        ILOGREC=IOFFSR(IRREP4M)
        IFIRST=IOFFSL(IRREP3M)
        NUMD=VRT(IRREP4M,ISPIN)
        NUMC=VRT(IRREP2M,ISPIN)
        NUMB=VRT(IRREP3M,ISPIN)
        NUMA=VRT(IRREP1M,ISPIN) 
        DO 120 INDXD=1,NUMD
         DO 130 INDXC=1,NUMC
          IND(4)=INDXD+POP(IRREP4M,ISPIN)
          IND(3)=INDXC+POP(IRREP2M,ISPIN)
C
          IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK
C
           CALL GETLST(BUF,ILOGREC,1,1,IRREPGET,LISTABCD)
C
          ELSE
C
C CALCULATE G(AB,CD) ON THE FLY
C
           CALL DIRG2(BUF,BUF1,BUF2,BUF1,BUF2,NUMDSZ,DISDSZ,
     &                ILOGREC,IRREPGET,1)
C 
          ENDIF
C
          ILOGREC=ILOGREC+1
          IPOS=IOFFSL(IRREP3M)
          DO 140 INDXB=1,NUMB
           DO 150 INDXA=1,NUMA
            X=BUF(IPOS)*FACT
            IPOS=IPOS+1
            IND(2)=INDXB+POP(IRREP3M,ISPIN)
            IND(1)=INDXA+POP(IRREP1M,ISPIN)
            GINDXL=INDXF(IND(IPTR(1)),IND(IPTR(3)),MAXL1)
            GINDXR=INDXF(IND(IPTR(2)),IND(IPTR(4)),MAXL2)
            GINDX0=INDXF(GINDXL,GINDXR,MAXL)
            GINDX =GINDX0+IOFFSET
            GAMMA(GINDX)=GAMMA(GINDX)+X
150        CONTINUE
140       CONTINUE
130      CONTINUE
120     CONTINUE
C
       ENDIF
C
C         12 34        23 14
C       G(CA,BD) <-- g<AB,CD>
C
       IRREP1M=DOIRR(ICOUNT,1)
       IRREP2M=DOIRR(ICOUNT,2)
       IRREP3M=DOIRR(ICOUNT,3)
       IRREP4M=DOIRR(ICOUNT,4)
       CALL GETFAC(IRREP2M,IRREP3M,IRREP1M,IRREP4M,IPTR,FACTOR)
       FACT=FABCD*FACTOR
       IRREPGET=DIRPRD(IRREP1M,IRREP4M)
C
       IF(IRREPGET2.EQ.IRREPGET) THEN
C
        IOFFR=1
        IOFFL=1
        DO 3000 IRREPA=1,NIRREP
         IRREPB=DIRPRD(IRREPA,IRREPGET)
         IF(IRREPB.GT.IRREPA)GOTO 3000
         IOFFSR(IRREPA)=IOFFR
         IOFFSL(IRREPA)=IOFFL
         IOFFR=IOFFR+VRT(IRREPB,ISPIN)*VRT(IRREPA,ISPIN)
         IOFFL=IOFFL+VRT(IRREPB,ISPIN)*VRT(IRREPA,ISPIN)
3000    CONTINUE
C 
        ILOGREC=IOFFSR(IRREP4M)
        IFIRST=IOFFSL(IRREP3M)
        NUMD=VRT(IRREP4M,ISPIN)
        NUMC=VRT(IRREP1M,ISPIN)
        NUMB=VRT(IRREP3M,ISPIN)
        NUMA=VRT(IRREP2M,ISPIN) 
        DO 220 INDXD=1,NUMD
         DO 230 INDXC=1,NUMC
          IND(4)=INDXD+POP(IRREP4M,ISPIN)
          IND(3)=INDXC+POP(IRREP1M,ISPIN)
C
          IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK
C

           CALL GETLST(BUF,ILOGREC,1,1,IRREPGET,LISTABCD)
C
          ELSE
C
           CALL DIRG2(BUF,BUF1,BUF2,BUF1,BUF2,NUMDSZ,DISDSZ,
     &                ILOGREC,IRREPGET,1)
C
          ENDIF
C
          ILOGREC=ILOGREC+1
          IPOS=IOFFSL(IRREP3M)
          DO 240 INDXB=1,NUMB
           DO 250 INDXA=1,NUMA
            X=BUF(IPOS)*FACT
            IPOS=IPOS+1
            IND(2)=INDXB+POP(IRREP3M,ISPIN)
            IND(1)=INDXA+POP(IRREP2M,ISPIN)
            GINDXL=INDXF(IND(IPTR(3)),IND(IPTR(1)),MAXL1)
            GINDXR=INDXF(IND(IPTR(2)),IND(IPTR(4)),MAXL2)
            GINDX0=INDXF(GINDXL,GINDXR,MAXL)
            GINDX =GINDX0+IOFFSET
            GAMMA(GINDX)=GAMMA(GINDX)+X
250        CONTINUE
240       CONTINUE
230      CONTINUE
220     CONTINUE
C
       ENDIF
C
100   CONTINUE
90    CONTINUE
10    CONTINUE
      RETURN
      END
