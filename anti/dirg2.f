      SUBROUTINE DIRG2(G2,T1,T2,SCR1,SCR2,NUMDSZ,DISDSZ,
     &                 IREC,IRREP,IUHF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL MBPT4
      LOGICAL ISAME,CC,RHF
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC

      INTEGER DISDSZ,DIRPRD,POP,VRT
C
      DIMENSION T1(*),T2(*),G2(*),SCR1(*),SCR2(*)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD,UCC
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
C
      DATA AZERO,ONE,ONEM,TWO,HALF /0.0D0,1.D0,-1.D0,2.D0,0.5D0/
C
      RHF=IUHF.EQ.0
      CC=CCD.OR.CCSD.OR.QCISD
      MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ
C
C  FOR CCSD TAU AMPLITUDES ARE REQUIRED, ALLOCATE MEMORY
C
      IF(MBPT3.OR.UCC) THEN
       ISAME=.TRUE.
       FACT=ONE
      ELSE IF(MBPT4) THEN
       ISAME=.FALSE.
       FACT=HALF
      ELSE IF(CC) THEN
       ISAME=.FALSE.
       FACT=HALF
      ENDIF
C
C PERFORM THE MULTIPLICATION 
C 
       FACT2=AZERO
       FACT3=ONE
C
       CALL XGEMM('N','T',DISDSZ,1,NUMDSZ,FACT,T1,DISDSZ,
     &            T2(IREC),DISDSZ,FACT2,G2,DISDSZ)
C
       IF(.NOT.ISAME) THEN
C
        CALL XGEMM('N','T',DISDSZ,1,NUMDSZ,FACT,T2,DISDSZ,
     &             T1(IREC),DISDSZ,FACT3,G2,DISDSZ)
       ENDIF
C
      IF(RHF) THEN
C
C SPIN ADAPT G2 AMPLITUDES
C
       CALL SPINAD3(IRREP,VRT(1,1),DISDSZ,1,G2,SCR1,SCR2)
C
      ENDIF
C
      RETURN
      END
