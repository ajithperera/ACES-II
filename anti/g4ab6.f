      SUBROUTINE G4AB6(GAMMA,BUF,BUF1,BUF2,SCR1,SCR2,GOFF,
     &                 DOIRR,LENGAM,FABCD,IUHF)
C
C THIS ROUTINE PROCESSES THE G(Ij,Kl) GAMMA LISTS AND FILLS
C  OUT THE ABCD SYMMETRY CASE MULLIKEN ORDERED GAMMA.
C
C FOR THIS, THE FOLLOWING SYMMETRIZATION IS REQUIRED:
C
C         12 34      12 34      21 34
C       G(AB,CD) = g(AB,CD) + g(BA,CD)
C
C         13 24      13 24      23 14
C       G<AC,BD> = g<AC,BD> + g<BC,AD>
C
C NOTE THAT ABCD IN MULLIKEN CORRESPONDS TO ACBD IN DIRAC.  NOTE ALSO THAT
C  ALL ELEMENTS OF GAMMA WHICH ARE PROCESSED HERE COME FROM DPD LISTS
C  FOR IRREPS 2-h, SINCE A.NE.C;B.NE.D.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION GAMMA(LENGAM),BUF(*),X,X1,X2 
      DOUBLE PRECISION FABIJ,FAIBJ,FABCD,FIJKL,FABCI,FIJKA
      DOUBLE PRECISION BUF1(*),BUF2(*),SCR1(*),SCR2(*),ONE,TWO 
      INTEGER GOFF(8,8,8,8),IDID(8),IOFFSL(8)
      INTEGER IOFFSR(8),DOIRR(42,4)
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      LOGICAL MBPT4
      LOGICAl GABCD,DABCD
      LOGICAL TDA,EOM
C
      COMMON /METH/ MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /MOPOPS/ MOPOP(8)
      COMMON /IABCD/ IOFFABCD
      COMMON /ABCD/  GABCD,DABCD
      COMMON /EXCITE/ TDA,EOM
      COMMON /STATSYM/IRREPX
C
      DATA ONE,TWO /1.D0,2.D0/
C
      INDXF(I,J,N)=I+(J-1)*N
      INDXT(I,J)  =I+(J*(J-1))/2
      NNP1O2(I)   =(I*(I+1))/2
C
C CALCULATE HOW MANY UNIQUE ABCD SYMMETRY SETS THERE ARE
C
      IF(NIRREP.EQ.8)THEN
       NUMABCD=42
      ELSEIF(NIRREP.EQ.4)THEN
       NUMABCD=3
      ENDIF
C     
      NPASS=1
      IF(DABCD.AND.EOM) NPASS=2
C
      LISTABCD=IOFFABCD+133
C
      DO 10 IRREPGET2=2,NIRREP
C
      DO 90 IPASS=1,NPASS
C
       IF(DABCD) THEN
        IF(IPASS.EQ.1) THEN
         NUMDSZ=IRPDPD(IRREPGET2,ISYTYP(2,146))
         DISDSZ=IRPDPD(IRREPGET2,ISYTYP(1,146))
         CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET2,156)
         CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET2,146)
         IF(CCSD) THEN
          I0TA=1
          I0TB=1+NT(1)*IUHF
          CALL GETLST(BUF(I0TA),1,1,1,1,157)
          IF(IUHF.NE.0) CALL GETLST(BUF(I0TB),1,1,1,2,157)
          CALL FTAU(BUF1,BUF(I0TA),BUF(I0TB),DISDSZ,NUMDSZ,
     &              POP(1,1),POP(1,2),VRT(1,1),VRT(1,2),
     &              IRREPGET2,3,ONE)
         ENDIF
C
         MBPT4=M4DQ.OR.M4SDQ.OR.M4SDTQ
         IF(MBPT4) THEN
          CALL SSCAL(NUMDSZ*DISDSZ,TWO,BUF2,1)
          CALL SAXPY(NUMDSZ*DISDSZ,ONE,BUF1,1,BUF2,1)
         ENDIF
C
        ELSE
C
C SECOND PASS, ONLY FOR EOM-CCSD REQUIRED
C
         IRREPGET3=DIRPRD(IRREPGET2,IRREPX)
         NUMDSZ=IRPDPD(IRREPGET3,ISYTYP(2,463))
         DISDSZ=IRPDPD(IRREPGET2,ISYTYP(1,463))
C
         CALL GETLST(BUF1,1,NUMDSZ,1,IRREPGET3,463)
         CALL GETLST(BUF2,1,NUMDSZ,1,IRREPGET3,446)
C
         I0TA=1
         I0TB=1+NT(1)*IUHF
         I0RA=I0TB+NT(2)
         I0RB=I0RA+IRPDPD(IRREPX,9)*IUHF
         CALL GETLST(BUF(I0TA),1,1,1,1,157)
         CALL GETLST(BUF(I0RA),1,1,1,3,490)
         IF(IUHF.EQ.1) THEN
          CALL GETLST(BUF(I0TB),1,1,1,2,157)
          CALL GETLST(BUF(I0RB),1,1,1,4,490)
         ENDIF
C
         CALL DTAU(IRREPGET2,IRREPGET3,1,IRREPX,BUF1,
     &             BUF(I0TA),BUF(I0TB),BUF(I0RA),BUF(I0RB),
     &             3,ONE)
C
        ENDIF
C
       ENDIF
C
       DO 100 ICOUNT=1,NUMABCD
        IRREP1D=DOIRR(ICOUNT,1)
        IRREP2D=DOIRR(ICOUNT,3)
        IRREP3D=DOIRR(ICOUNT,2)
        IRREP4D=DOIRR(ICOUNT,4)
        IRREP1M=DOIRR(ICOUNT,1)
        IRREP2M=DOIRR(ICOUNT,2)
        IRREP3M=DOIRR(ICOUNT,3)
        IRREP4M=DOIRR(ICOUNT,4)
        IOFFSET=GOFF(IRREP1M,IRREP2M,IRREP3M,IRREP4M)
C
C FIRST PUT IN THE 1234 MULLIKEN PIECE
C
        IRREPGET=DIRPRD(IRREP3D,IRREP4D)
C
        IF(IRREPGET.EQ.IRREPGET2) THEN
C
         IOFFR=1
         IOFFL=1
         DO 2000 IRREPA=1,NIRREP
          IRREPB=DIRPRD(IRREPA,IRREPGET)
          IOFFSR(IRREPA)=IOFFR
          IOFFSL(IRREPA)=IOFFL
          IOFFR=IOFFR+VRT(IRREPB,1)*VRT(IRREPA,2)
          IOFFL=IOFFL+VRT(IRREPB,1)*VRT(IRREPA,2)
2000     CONTINUE
C
         ILOGREC=IOFFSR(IRREP4D)
         IFIRST=IOFFSL(IRREP2D)
         NUMD=VRT(IRREP4D,2)
         NUMC=VRT(IRREP3D,1)
         NUMB=VRT(IRREP2D,2)
         NUMA=VRT(IRREP1D,1) 
         MAXL=MOPOP(IRREP1M)*MOPOP(IRREP2M)
         DO 120 INDXD=1,NUMD
          DO 130 INDXC=1,NUMC
           INDD=INDXD+POP(IRREP4D,2)
           INDC=INDXC+POP(IRREP3D,2)
C
           IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK
C
            CALL GETLST(BUF,ILOGREC,1,1,IRREPGET,LISTABCD)
C
           ELSE
C
C CALCULATE G(AB,CD) ON THE FLY
C
            CALL DIRG2(BUF,BUF1,BUF2,SCR1,SCR2,NUMDSZ,DISDSZ,
     &                 ILOGREC,IRREPGET,IUHF)
C
           ENDIF
C
           ILOGREC=ILOGREC+1
           IPOS=IOFFSL(IRREP2D)
           DO 140 INDXB=1,NUMB
            DO 150 INDXA=1,NUMA
             X=BUF(IPOS)*FABCD
             IPOS=IPOS+1
             INDA=INDXA+POP(IRREP1D,1)
             INDB=INDXB+POP(IRREP2D,2)
             GINDXL=INDXF(INDA,INDC,MOPOP(IRREP1M))
             GINDXR=INDXF(INDB,INDD,MOPOP(IRREP3M))
             GINDX0=INDXF(GINDXL,GINDXR,MAXL)
             GINDX =GINDX0+IOFFSET
             GAMMA(GINDX)=GAMMA(GINDX)+X
150         CONTINUE
140        CONTINUE
130       CONTINUE
120      CONTINUE
C
        ENDIF
C
C NOW PUT IN THE 2134 MULLIKEN PIECE 
C
        IRREPGET=DIRPRD(IRREP1D,IRREP4D)
C
        IF(IRREPGET2.EQ.IRREPGET) THEN
C 
         IOFFR=1
         IOFFL=1
C
         DO 1000 IRREPA=1,NIRREP
          IRREPB=DIRPRD(IRREPA,IRREPGET)
          IOFFSR(IRREPA)=IOFFR
          IOFFSL(IRREPA)=IOFFL
          IOFFR=IOFFR+VRT(IRREPB,1)*VRT(IRREPA,2)
          IOFFL=IOFFL+VRT(IRREPB,1)*VRT(IRREPA,2)
1000     CONTINUE
C
         ILOGREC=IOFFSR(IRREP4D)
         IFIRST=IOFFSL(IRREP2D)
         NUMD=VRT(IRREP4D,2)
         NUMC=VRT(IRREP1D,1)
         NUMB=VRT(IRREP2D,2)
         NUMA=VRT(IRREP3D,1) 
         MAXL=MOPOP(IRREP1M)*MOPOP(IRREP2M)
         DO 220 INDXD=1,NUMD
          DO 230 INDXC=1,NUMC
           INDD=INDXD+POP(IRREP4D,2)
           INDC=INDXC+POP(IRREP1D,1)
C
           IF(.NOT.DABCD) THEN
C
C READ G(AB,CD) FROM DISK
C
            CALL GETLST(BUF,ILOGREC,1,1,IRREPGET,LISTABCD)
C
           ELSE
C
            CALL DIRG2(BUF,BUF1,BUF2,SCR1,SCR2,NUMDSZ,DISDSZ,
     &                 ILOGREC,IRREPGET,IUHF)
C
           ENDIF
C
           ILOGREC=ILOGREC+1
           IPOS=IOFFSL(IRREP2D)
           DO 240 INDXB=1,NUMB
            DO 250 INDXA=1,NUMA
             X=BUF(IPOS)*FABCD
             IPOS=IPOS+1
             INDA=INDXA+POP(IRREP3D,1)
             INDB=INDXB+POP(IRREP2D,2)
             GINDXL=INDXF(INDC,INDA,MOPOP(IRREP1M))
             GINDXR=INDXF(INDB,INDD,MOPOP(IRREP3M))
             GINDX0=INDXF(GINDXL,GINDXR,MAXL)
             GINDX =GINDX0+IOFFSET
             GAMMA(GINDX)=GAMMA(GINDX)+X
250         CONTINUE
240        CONTINUE
230       CONTINUE
220      CONTINUE
        ENDIF
100    CONTINUE
90    CONTINUE
10    CONTINUE
      RETURN
      END
