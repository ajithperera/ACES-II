      SUBROUTINE GAMM1(ICORE,MAXCOR,IUHF,ALASKA)
C
C THIS ROUTINE DRIVES THE PROCESSING OF THE AAAA GAMMAS.  THIS
C  IS A NEW VERSION IN WHICH THE SORTING ROUTINES HANDLE ONLY
C  ONE AAAA COMBINATION AT A TIME
C
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,TWO
      LOGICAL REDUCE,GABCD,DABCD,MBPT4,ALASKA
      LOGICAL MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD
      LOGICAL EOM,TDA
C
      DIMENSION ICORE(MAXCOR),GOFF(8)
C
      COMMON/METH/MBPT2,MBPT3,M4DQ,M4SDQ,M4SDTQ,CCD,QCISD,CCSD

      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /MOPOPS/ MOPOP(8)
      COMMON /MEMANTI/ REDUCE
      COMMON /ABCD/ GABCD,DABCD
      COMMON /EXCITE/ TDA,EOM
      COMMON /STATSYM/IRREPX
C
      DATA ONE,TWO/1.D0,2.D0/
C
      NNP1O2(I)=(I*(I+1))/2
C
C SRG/JDW. 12/14/95. Set Maximum size of T1 vector.
C
      MXLNT1 = 0
      DO 10 IRREP=1,NIRREP
      MXLNT1 = MAX(MXLNT1,IRPDPD(IRREP, 9))
      MXLNT1 = MAX(MXLNT1,IRPDPD(IRREP,10))
   10 CONTINUE
C
C LOOP OVER THE NUMBER OF IRREPS
C
      DO 1 IRREPDO=1,NIRREP
C
C COMPUTE MAXIMUM BUFFER SIZE WHICH WILL BE RESIDENT ON GAMLAM
C  (ONLY APPROXIMATE, AND PROVIDES AN UPPER BOUND)
C
C SRG/JDW. 12/14/95. Use symmetry 1 distribution size, as that is what
C is read. Also, allow for 4 T1 vectors.
C
       MAXDSZ=4*MXLNT1
       DO 2 SYMTYP=1,22
C       MAXDSZ=MAX(MAXDSZ,IRPDPD(IRREPDO,SYMTYP))
        MAXDSZ=MAX(MAXDSZ,IRPDPD(1,SYMTYP))
2      CONTINUE
C
C COMPUTE SIZE OF THE AAAA GAMMA AND OFFSETS FOR EACH IRREP
C
       NUMAO=MOPOP(IRREPDO)
       NSIZE=NNP1O2(NUMAO)
       LENGAM=NSIZE*NSIZE
C
C CALL EITHER THE IN-CORE OR OUT-OF-CORE ROUTINES TO DO THE SORT.
C
       LIST1=1
       LIST2=IRREPDO
       ISTART=1
       IF(DABCD) THEN 
        NUMDSZ=IRPDPD(1,ISYTYP(2,146))
        DISDSZ=IRPDPD(1,ISYTYP(1,146))
        LENT=NUMDSZ*DISDSZ
        LENSCR=MAX(NUMDSZ,DISDSZ)
        IF(EOM) THEN
         NUMDSZ=IRPDPD(IRREPX,ISYTYP(2,146))
         DISDSZ=IRPDPD(1,ISYTYP(1,146))
         LENT=MAX(LENT,NUMDSZ*DISDSZ)
         LENSCR=MAX(LENSCR,NUMDSZ,DISDSZ)
        ENDIF
        I020=ISTART
        I030=I020+IINTFP*LENT
        I040=I030+IINTFP*LENT
        I050=I040+IINTFP*LENSCR
        ISTART=I050+IINTFP*LENSCR
       ENDIF
       I000=ISTART
       I010=I000+LENGAM*IINTFP
       IEND=I010+MAXDSZ*IINTFP
       IF(IEND.LE.MAXCOR)THEN
C
        CALL GAM1AB(ICORE(I000),ICORE(I010),ICORE(I020),
     &              ICORE(I030),ICORE(I040),ICORE(I050),
     &              LENGAM,IRREPDO,LIST1,LIST2,IUHF,ALASKA)
       ELSE
        IF(DABCD) THEN
         NUMDSZ=IRPDPD(1,ISYTYP(2,146))
         DISDSZ=IRPDPD(1,ISYTYP(1,146))
         LENT=NUMDSZ*DISDSZ
         LENSCR=MAX(NUMDSZ,DISDSZ)
         IF(EOM) THEN
          NUMDSZ=IRPDPD(IRREPX,ISYTYP(2,146))
          DISDSZ=IRPDPD(1,ISYTYP(1,146))
          LENT=MAX(LENT,NUMDSZ*DISDSZ)
          LENSCR=MAX(LENSCR,NUMDSZ,DISDSZ)
         ENDIF
C
         I000=1
         I010=I000+IINTFP*LENT
         I020=I010+IINTFP*LENT
         I030=I020+IINTFP*LENSCR
         ISTART=I030+IINTFP*LENSCR
         MAXCOR1=MAXCOR-ISTART
        ELSE
         MAXCOR1=MAXCOR
        ENDIF
C
        MXCOR=MAXCOR1
        IF(REDUCE) MXCOR=MXCOR/2
        ITMP1=IBITWD
        ITMP2=IALONE
        IBITWD=ITMP1*2
        IALONE=((ITMP2+1)*(ITMP2+1))-1
        CALL DG1ABAB(ICORE(ISTART),ICORE(I000),ICORE(I010),
     &               ICORE(I020),ICORE(I030),MXCOR,
     &               NUMAO,LIST1,LIST2,IUHF,IRREPDO,ALASKA)
        IBITWD=ITMP1
        IALONE=ITMP2
       ENDIF
C
C FOR UHF, TREAT AS WELL AAAA AND BBBB SPIN CASES
C
       IF(IUHF.NE.0)THEN
        ISTART=1
        IF(DABCD) THEN 
         NUMDSZ=MAX(IRPDPD(1,ISYTYP(2,144)),
     &              IRPDPD(1,ISYTYP(2,145)))
         DISDSZ=MAX(IRPDPD(1,ISYTYP(1,144)),
     &              IRPDPD(1,ISYTYP(1,145)))
         LENT=NUMDSZ*DISDSZ
         IF(EOM) THEN
          NUMDSZ=MAX(IRPDPD(IRREPX,ISYTYP(2,144)),
     &               IRPDPD(IRREPX,ISYTYP(2,145)))
          DISDSZ=MAX(IRPDPD(1,ISYTYP(1,144)),
     &               IRPDPD(1,ISYTYP(1,145)))
          LENT=MAX(LENT,NUMDSZ*DISDSZ)
         ENDIF
         I001=ISTART
         I002=I001+IINTFP*LENT
         ISTART=I002+IINTFP*LENT
        ENDIF
        I000=ISTART
        I010=I000+IINTFP*LENGAM
        I020=I010+IINTFP*MAXDSZ
        IEND=I020+MAXDSZ*IINTFP
        DO 100 ISPIN=1,2
         LIST1=6
         LIST2=IRREPDO+50*(ISPIN-1)
         IF(IEND.LE.MAXCOR)THEN
C
          CALL GAM1AA(ICORE(I000),ICORE(I020),ICORE(I010),
     &                ICORE(I001),ICORE(I002),LENGAM,
     &                IRREPDO,LIST1,LIST2,ISPIN,ALASKA)
         ELSE
          IF(DABCD) THEN
           NUMDSZ=IRPDPD(1,ISYTYP(2,143+ISPIN))
           DISDSZ=IRPDPD(1,ISYTYP(1,143+ISPIN))
           LENT=NUMDSZ*DISDSZ
           IF(EOM) THEN
            NUMDSZ=IRPDPD(IRREPX,ISYTYP(2,143+ISPIN))
            DISDSZ=IRPDPD(1,ISYTYP(1,143+ISPIN))
            LENT=MAX(LENT,NUMDSZ*DISDSZ)
           ENDIF
C
           I000=1
           I010=I000+IINTFP*LENT
           I020=I010+IINTFP*LENT
           MAXCOR1=MAXCOR-ISTART
          ELSE
           MAXCOR1=MAXCOR
          ENDIF
          IF(REDUCE) MXCOR=MAXCOR1/2
          ITMP1=IBITWD
          ITMP2=IALONE
          IBITWD=ITMP1*2
          IALONE=((ITMP2+1)*(ITMP2+1))-1
          CALL DG1AAAA(ICORE(ISTART),ICORE(I000),ICORE(I010),
     &                 MXCOR,NUMAO,LIST1,LIST2,ISPIN,IRREPDO,
     &                 ALASKA)
          IBITWD=ITMP1
          IALONE=ITMP2
         ENDIF
100     CONTINUE
       ENDIF
1     CONTINUE
      RETURN
      END
