#include <flags.h>
      Subroutine T2INT1(ICORE,MAXCOR,IUHF,SE4)
C
C  THIS ROUTINE IS THE DRIVER FOR THE CONTRIBUTION OF THE DOUBLES
C  TO THE SINGLES.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      INTEGER DIRPRD,POP1,POP2,VRT1,VRT2
      LOGICAL LAMBDA, NONHF
C
      DIMENSION ICORE(MAXCOR)
C
      COMMON/SYM/ POP1(8),POP2(8),VRT1(8),VRT2(8),NTAA,NTBB,NF1AA,
     &            NF1BB,NF2AA,NF2BB
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255),IRREPB(255),
     &              DIRPRD(8,8)
      DATA ONE /1.0/
C
      NOCCA=NOCCO(1)
      NOCCB=NOCCO(2)
      NVRTA=NVRTO(1)
      NVRTB=NVRTO(2)
      NWAA=NTAA
      NWBB=NTBB
C
      ITAA=MAXCOR+1-NWAA*IINTFP
      MXCOR=MAXCOR-NWAA*IINTFP
C
      IF(IUHF.EQ.0) THEN
       ITBB=ITAA
      ELSE
       ITBB=ITAA-NWBB*IINTFP
       MXCOR=MXCOR-NWBB*IINTFP
      ENDIF
C
      IF (IFLAGS(h_IFLAGS_nonhf) .GT. 0) NONHF = .TRUE.
C
      CALL ZERO(ICORE(ITAA),NWAA)
      IF(IUHF.EQ.1) CALL ZERO(ICORE(ITBB),NWBB)
C
C Evaluate Sum_e T(i,e)F(a,e) contribution to T1.
C
      IF (NONHF) CALL FEATIE(ICORE(I0),MAXCOR,IUHF)
C
C Evaluate Sum_e T(m,a)F(m,i) contribution to T1.
C
      IF (NONHF) CALL FMITMA(ICORE(I0),MAXCOR,IUHF)
C
C Evaluate the following three contributions to T1:
C
C   -1/2 Sum_mef T(im,ef)<ma||ef>  (T2T1AA1, T2T1AB1)
C   -1/2 Sum_men T(nm,ei)<nm||ei>  (T2T1AA2, T2T1AB2)
C
      CALL GETLST(ICORE(ITAA),1,1,1,3,90)
      IF(IUHF.EQ.1) CALL GETLST(ICORE(ITBB),1,1,1,4,90)
      LAMBDA = .FALSE.

      IF (IUHF.EQ.1) THEN
         CALL T2T1AA2(ICORE(ITAA),ICORE,MXCOR,POP1,VRT1,1,LAMBDA,0)
         CALL T2T1AA2(ICORE(ITBB),ICORE,MXCOR,POP2,VRT2,2,LAMBDA,0)
      ENDIF
C
      CALL T2T1AB2(ICORE(ITAA),ICORE,MXCOR,POP1,POP2,VRT1,VRT2,1,
     &             IUHF,LAMBDA,0)
C
      IF (IUHF.EQ.1) THEN
         CALL T2T1AB2(ICORE(ITBB),ICORE,MXCOR,POP2,POP1,VRT2,VRT1,2,
     &                IUHF,LAMBDA,0)
      ENDIF
C
      IF (IUHF.EQ.1) THEN
          CALL T2T1AA1(ICORE(ITAA),ICORE,MXCOR,POP1,VRT1,1,LAMBDA,0)
          CALL T2T1AA1(ICORE(ITBB),ICORE,MXCOR,POP2,VRT2,2,LAMBDA,0)
      ENDIF
C
      CALL T2T1AB1(ICORE(ITAA),ICORE,MXCOR,POP1,POP2,VRT1,VRT2,1,
     &              IUHF,LAMBDA,0)
C
      IF (IUHF.EQ.1) THEN
          CALL T2T1AB1(ICORE(ITBB),ICORE,MXCOR,POP2,POP1,VRT2,VRT1,2, 
     &                IUHF,LAMBDA,0)
      ENDIF
C
C Include the F(A,I) (93, 3-F(AI), 4-F(a,i)) contributions for NON-HF.
C
      IF(NONHF)THEN
         CALL GETLST(ICORE,1,1,1,3,93)
         CALL SAXPY(NWAA,ONE,ICORE,1,ICORE(ITAA),1)
         IF(IUHF.NE.0)THEN
            CALL GETLST(ICORE,1,1,1,4,93)
            CALL SAXPY(NWBB,ONE,ICORE,1,ICORE(ITBB),1)
         ENDIF
      ENDIF
C
      SE4=0.0D0
      IDEN=1
      IE=IDEN+IINTFP*NWAA
      ID=IE+IINTFP*(NOCCA+NVRTA)
      IEND=ID+IINTFP*NWAA
C
C 90(3-T1IAA, 4-T1IBB) are increments. 
C
      IF(IEND.LT.MXCOR) THEN
         CALL E4SENG(ICORE(ITAA),ICORE(ID),ICORE(IDEN),ICORE(IE),
     &               NWAA,POP1,VRT1,NOCCA,NVRTA,SE4,1)
         CALL PUTLST(ICORE(ID),1,1,1,3,90)
         CALL PUTLST(ICORE(ID),1,1,1,1,90)
      ENDIF
C
      IF(IUHF.EQ.0) THEN
         SE4=2.0D0*SE4
      ELSE
         IDEN=1
         IE=IDEN+IINTFP*NWBB
         ID=IE+IINTFP*(NOCCB+NVRTB)
         IEND=ID+IINTFP*NWBB
         IF(IEND.LT.MXCOR) THEN
            CALL E4SENG(ICORE(ITBB),ICORE(ID),ICORE(IDEN),ICORE(IE),
     &                  NWBB,POP2,VRT2,NOCCB,NVRTB,SE4,2)
            CALL PUTLST(ICORE(ID),1,1,1,4,90)
            CALL PUTLST(ICORE(ID),1,1,1,2,90)
         ENDIF
      ENDIF
C 
      Write(6,*) 
      Write(6, "(a,F14.10)")"The T1(T2(RPA)) energy   = ", SE4
      CALL CMPENG(ICORE, MAXCOR, 43, 0, ECORR, ETOT, ETOTT2, 0,
     &             1)
C
      RETURN
      END
