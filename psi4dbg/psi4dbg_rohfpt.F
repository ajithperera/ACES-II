      SUBROUTINE PSI4DBG_ROHFPT(ICORE,MAXCOR,IUHF)
C
C DRIVER FOR ROHF-MBPT CALCULATIONS.  
C
#include "flags.h" /* for h_IFLAGS_* and h_IFLAGS2_* */

      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ENERGY,ET1,ET2,ETOT
      LOGICAL MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &        QCISD,ROHF4,ITRFLG,TRIPNI,TRIPNI1,TRIPIT,T3STOR,UCC,
     &        BRUECK
      LOGICAL DO_HBAR_4LCCSD
      DIMENSION ICORE(MAXCOR),ECORR(3)
      COMMON /INFO/ NOCCO(2),NVRTO(2)
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /FLAGS2/ IFLAGS2(500)
      COMMON /SWITCH/ MBPT3,MBPT4,CC,TRPEND,SNGEND,GRAD,MBPTT,SING1,
     &                QCISD,UCC
      COMMON /TRIPLES/ TRIPNI,TRIPNI1,TRIPIT,T3STOR
cAP - 500 is the maximum number of CC iterations (not basis functions)
      COMMON /ENERGY/ ENERGY(500,2),IXTRLE(500)
      COMMON /ROHF/ ROHF4,ITRFLG
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /BRUECKNER/BRUECK
C
C-----------------------------------------------------------------------
CJDW 3/98. Attempts have been made to convert this routine and its
C          dependents from being only an ROHF-MBPT open-shell code to
C          a non-HF MBPT code for REF=RHF,UHF.
C-----------------------------------------------------------------------
C
      WRITE(*,1000)
1000  FORMAT(T3,' Calculating MBPT energy for ROHF reference function.')
C
C  SINCE THIS IS NON-HF, WE NEED TO DEAL WITH T1, HENCE SING1 IS TRUE.
C  ITRFLG IS A FLAG WHICH TELLS CERTAIN ROUTINES WHETHER TO PICK UP
C  THEIR NORMAL LISTS (TRUE) OR TO USE DIFFERENT LISTS FOR ITERATIVE
C  SDQ- AND SDTQ-MBPT[4].
C
      SING1=.TRUE.
      DO_HBAR_4LCCSD = .FALSE.
C
C INITIALIZATION ROUTINES
C
      CALL INITSN(ICORE,MAXCOR,IUHF)
C
C  IF NON-SEMICANONICAL ORBITALS ARE USED, THEN WE NEED TO ITERATE
C  IN ORDER TO GET T2[1] AND T1[1].
C
      CALL T1ITER2(ICORE,MAXCOR,IUHF,ET1)
      CALL T2ITER2(ICORE,MAXCOR,IUHF,ET2)
      CALL ROHFENG(ICORE,MAXCOR,ENERGY(1,1),ENERGY(1,2),43,0,2,IUHF)
C
      IF(IUHF.NE.0) THEN
       WRITE(*,4000)
 4000  FORMAT(/,T3,'MBPT(2) spin multiplicity: ',/)
       CALL S2PRJIT(ICORE,MAXCOR,IUHF,SING1,2)
       WRITE(*,4001)
 4001  FORMAT(/)
      ENDIF
C
C THE FOLLOWING CODE IS EXPERIMENTAL AND FOR A MBPT BASED
C ON BRUECKNER ORBITALS
C
      IF(BRUECK) THEN
C
C RESORT T2 AMPLITUDES
C
       CALL RNABIJ(ICORE,MAXCOR,IUHF,'T')
C
C LOOP OVER SPIN CASES  
C
       DO 10 ISPIN=1,IUHF+1
C
C COPY f(m,e) TO F(m,e)
C
        CALL GETLST(ICORE,1,1,1,ISPIN+2,93)
        CALL PUTLST(ICORE,1,1,1,ISPIN,93)
C
10     CONTINUE
C
C LOOP OVER SPIN CASES  
C
       DO 15 ISPIN=1,IUHF+1
C
C CALCULATE F*T2 INTO T1
C
        CALL FMECONT(ICORE,MAXCOR,IUHF,ISPIN)
C
15     CONTINUE
C
C CALCULATE W*T2 INTO T1
C
       CALL E3S(ICORE,MAXCOR,IUHF,EDUMMY)
C
C DENOMINATOR WEIGHT T1 INCREMENTS
C
       CALL NEWT1(ICORE,MAXCOR,IUHF,1)
C
C COPY TOTAL T1 AMPLITUDES TO LISTS 1,90 AND 2,90 FOR BRUECKNER UPDATE
C
       DO 120 ISPIN=1,IUHF+1
        CALL GETLST(ICORE,1,1,1,ISPIN+2,90)
        CALL PUTLST(ICORE,1,1,1,ISPIN,90)
120    CONTINUE
C
      ENDIF

      RETURN
      END
