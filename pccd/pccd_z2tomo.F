      SUBROUTINE PCCD_Z2TOMO(ICORE,MAXCOR,IUHF,TAU,IRREPX,LSTMO,
     &                       LSTMOINC,LSTAOINC,NOINC)
C
C TRANSFORMS T2 INCREMENT VECTOR TO AB,IJ REPRESENTATION, ADDS
C TO EXISTING INCREMENT LIST AND CALCULATES LADDER CONTRIBUTION.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION X,SNRM2,SDOT,ABLAD,ZILCH,ONE
      LOGICAL TAU,NOINC
      CHARACTER*2 SPLAB(3)
      DIMENSION ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/AOSYM/IAOPOP(8),IOFFAO(8),IOFFV(8,2),IOFFO(8,2),
     &             IRPDPDAO(8),IRPDPDAOS(8),ISTART(8,8),ISTARTMO(8,3)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/INFO/NOCCO(2),NVRTO(2)
C
      DATA ZILCH,ONE /0.0D0,1.0D0/
      DATA SPLAB /'AA','BB','AB'/
C
      NNM1O2(I)=(I*(I-1))/2
C
      IONE=1
      LUINT=10
      NMO=NOCCO(1)+NVRTO(1)
      CALL GETREC(20,'JOBARC','NBASTOT ',IONE,NAO)
      CALL GETAOINF(IUHF,IRREPX)
C
C TRANSFORM TARGET VECTOR BACK TO MO REPRESENTATION
C
       ABLAD=ZILCH
       ISPIN=3 
       DO 5 IRREPIJ=1,NIRREP
        IRREPAB=DIRPRD(IRREPX,IRREPIJ)
        NUMAB=IRPDPD(IRREPAB,ISYTYP(1,43+ISPIN))
        NUMIJ=IRPDPD(IRREPIJ,ISYTYP(2,43+ISPIN))
        NUMAO=IRPDPDAO(IRREPAB)
        IF(ISPIN.LE.2)THEN
         NUMABX=IRPDPD(IRREPAB,18+ISPIN)
        ELSE
         NUMABX=NUMAB
        ENDIF
        I000=1
        I010=I000+NUMAO *NUMIJ*IINTFP
        I020=I010+NUMABX*NUMIJ*IINTFP
        I030=I020+MAX(NT(1),NT(2),NAO*NMO)*IINTFP
        I040=I030+MAX(NT(1),NT(2),NAO*NMO)*IINTFP
        I050=I040+MAX(NT(1),NT(2),NAO*NMO)*IINTFP
        IF(I050.GE.MAXCOR) CALL INSMEM('Z2TOMO',I050,MAXCOR)
        CALL GETLST(ICORE(I000),1,NUMIJ,1,IRREPIJ,LSTAOINC+ISPIN)
        CALL T2TRAN(2,ICORE(I010),ICORE(I000),ICORE(I020),
     &              ICORE(I030),ICORE(I040),NAO,NMO,ISPIN,IUHF,
     &              IRREPIJ,IRREPAB)
C
C ANTISYMMETRIZE LEFT-HAND INDICES FOR AA AND BB SPIN CASES
C
        IF(ISPIN.LE.2)THEN
         CALL SQSYM(IRREPAB,VRT(1,ISPIN),NUMAB,NUMABX,NUMIJ,
     &              ICORE(I000),ICORE(I010))
         CALL SCOPY(NUMAB*NUMIJ,ICORE(I000),1,ICORE(I010),1)
        ENDIF
        IF(NOINC) THEN
         CALL PUTLST(ICORE(I010),1,NUMIJ,1,IRREPIJ,LSTMOINC+ISPIN)
        ELSE
         CALL GETLST(ICORE(I000),1,NUMIJ,1,IRREPIJ,LSTMOINC+ISPIN)
         CALL SAXPY (NUMIJ*NUMAB,ONE,ICORE(I010),1,ICORE(I000),1)
         CALL PUTLST(ICORE(I000),1,NUMIJ,1,IRREPIJ,LSTMOINC+ISPIN)
        ENDIF
C
C CALCULATE LADDER CONTRIBUTION
C
        CALL GETLST(ICORE(I000),1,NUMIJ,1,IRREPIJ,LSTMO+ISPIN)
        IF(TAU)THEN
         IF(ISPIN.LE.2)THEN
          CALL GETLST(ICORE(I020),1,1,1,ISPIN,90)
          CALL FTAU  (ICORE(I000),ICORE(I020),ICORE(I020),NUMAB,
     &                NUMIJ,POP(1,ISPIN),POP(1,ISPIN),VRT(1,ISPIN),
     &                VRT(1,ISPIN),IRREPAB,ISPIN,ONE)
         ELSE 
          CALL GETLST(ICORE(I020),1,1,1,1,90)
          CALL GETLST(ICORE(I030),1,1,1,1+IUHF,90)
          CALL FTAU  (ICORE(I000),ICORE(I020),ICORE(I030),NUMAB,
     &                NUMIJ,POP(1,1),POP(1,2),VRT(1,1),
     &                VRT(1,2),IRREPAB,3,ONE)
         ENDIF
        ENDIF
        ABLAD=ABLAD+SDOT(NUMIJ*NUMAB,ICORE(I000),1,ICORE(I010),1)
5      CONTINUE
c       WRITE(6,5005)SPLAB(ISPIN),ABLAD
c5005   FORMAT(T3,'W(abef) ',A2,' contribution =',F14.10,' a.u.')
C
      RETURN
      END
