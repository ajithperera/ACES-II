      SUBROUTINE PCCD_MKHIAJK(ICORE,MAXCOR,IUHF,LZ0,LT20,LT2R,LT2R2,
     &                        LT1U,LT1D,LRAAAA,LRBBBB,LRABAB,LRBABA,
     &                        LRBAAB,LRABBA,LIJKA0,LIJKL0,LFIA,LABCI0,
     &                        IRREPT,IRREPW,TDER,WDER,ANTI,
     &                        TERM1,TERM2,TERM3,TERM4,TERM5,TERM6,TAU,
     &                        ZERLST,CCSD)
C
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION TAUFAC,FACT,FACTI
      LOGICAL TDER,WDER,ANTI,TAU,ZERLST,CCSD
      LOGICAL TERM1,TERM2,TERM3,TERM4,TERM5,TERM6
      LOGICAL NONHF
      DIMENSION ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/FLAGS/IFLAGS(100)
      COMMON/FLAGS/IFLAGS2(500)
C
      IRREPX=DIRPRD(IRREPW,IRREPT)

      NONHF       = .FALSE.
      NONHF       = (IFLAGS(38) .NE. 0)
C
C ZERO OUT TARGET LIST IF SPECIFIED.  OTHERWISE, IT IS AUGMENTED!
C
      IF(ZERLST)THEN
       DO 5 ISPIN=4,4-3*IUHF,-1
        CALL DZERSYM(IRREPX,ICORE,LZ0+ISPIN)
5      CONTINUE
      ENDIF
C
      IF(TDER)THEN
       TAUFAC=1.0D0
      ELSE
       TAUFAC=0.5D0
      ENDIF
C
      IF(TERM5)THEN
        FACT=1.0D0
        CALL DHBIAJK2(ICORE,MAXCOR,IUHF,IRREPT,IRREPW,
     &                LT2R,LT2R2,LIJKA0+4,LZ0+4)
      ELSE
       FACT=0.0D0
      ENDIF
C
C  ADD IN BARE MO INTEGRALS
C
      IF(TERM1)THEN
       FACTI=1.0D0
       IF(ANTI)FACTI=-FACTI
       CALL PCCD_DHBIAJK0(ICORE,MAXCOR,IUHF,IRREPX,LZ0,LIJKA0,
     &                    FACT,FACTI)
      ENDIF

      IF(TERM4)THEN
       CALL SORTRING(ICORE,MAXCOR,IUHF,IRREPW,1,LRAAAA,LRBBBB,LRABAB,
     &               LRBABA,LRBAAB,LRABBA,.FALSE.)
       CALL DHBIAJK3(ICORE,MAXCOR,IUHF,IRREPT,IRREPW,
     &               LT1D,LRAAAA,LRBBBB,LRABAB,LRBABA,LRBAAB,LRABBA,
     &               LZ0,ANTI.AND.WDER)
       CALL SORTRING(ICORE,MAXCOR,IUHF,IRREPW,2,LRAAAA,LRBBBB,LRABAB,
     &               LRBABA,LRBAAB,LRABBA,.FALSE.)
      ENDIF
C
C This is the problem child for Linear CCSD. Instead of the W(im,jk)
C intermediate we need the <im||jk>. 

      IF(TERM2)THEN
       CALL DHBIAJK4(ICORE,MAXCOR,IUHF,IRREPT,IRREPW,
     &               LT1D,LIJKL0,LZ0,.FALSE.)
      ENDIF
C
C For HF Linear CCSD methods this is zero. Lets generalize this 
C to work for NONHF references. 
C
      IF(TERM3)THEN
       CALL DHBIAJK5(ICORE,MAXCOR,IUHF,IRREPT,IRREPW,
     &               LT20,LFIA,LZ0,.FALSE.,NONHF)          
      ENDIF
C
      IF(TERM6)THEN
       CALL DHBIAJK6(ICORE,MAXCOR,IUHF,IRREPT,IRREPW,
     &               TAUFAC,LT1U,LT1D,LT20,LABCI0,LZ0,ANTI.AND.WDER,
     &               TAU,.FALSE.)
      ENDIF
C
      RETURN
      END
