      SUBROUTINE ONEDSO(CMO,DV,DNHF,SCR,DHFSO,DRELSO,DNHFSO)
C
C  THIS SUBROUTINE CALCULATES THE VARIOUS ONE-ELETRON DENSITY MATRICES
C  NEEDED FOR THE TWO-ELECTRON PART OF A GRADIENT CALCULATION. 
C  THIS ROUTINE CALCULATES FROM THE MO COEFFICIENTS AND THE VARIOUS
C  DENSITY MATRICES GIVEN IN THE MO BASIS THE CORRESPONDING DENSITY
C  MATRICES IN THE SPIN-ADAPTED AO BASIS.
C
C  FOR HF :   HF-DENSITY MATRIX ( ALPHA AND BETA (UHF ONLY))
C
C  FOR CORRELATION METHODS :
C
C   HF-DENSITY MATRICES, RELAXED DENSITY MATRICES ( AGAIN ALPHA AND
C    BETA (UHF ONLY))
C
C  FOR NON HF METHODS :
C
C   HF DENSITY MATRICES, DIRECT AND INDIRECT CONTRIBUTION TO THE RELAXED
C    DENSITY MATRICES (AGAIN ALPHA AND BETA (UHF ONLY))
C
C  CMO ...... MEMORY ALLOCATED TO HOLD THE MO COEFFICIENTS
C             SIZE : FULL NBASIS*NBASIS
C  DV ....... MEMORY ALLOCATED TO HOLD THE RELAXED DENSITY
C             MATRIX, SIZE : FULL NBASIS*NBASIS
C  DNHF ..... MEMORY ALLOCATED TO HOLD THE INDIRECT CONTRIBUTION
C             TO THE RELAXED DENSITY MATRIX IN NON-HF CASES
C             SIZE : FULL NBASIS*NBASIS
C  SCR ...... SCRATCH ARRAY OF SIZE NBASIS*NBASIS
C  
C  DHFSO .... RETURNS THE HF DENSITY MATRIX IN SAO BASIS
C  DRELSO ... RETURNS THE RELAXED DENSITY MATRIX IN SAO BASIS 
C  DNHFSO ... RETURNS THE INDIRECT CONTRIBUTION TO THE RELAXED
C             DENSITY MATRICES IN NON-HF CASES
C  IPRINT ... PRINT FLAG
C
CEND
C   ORIGINALLY TAKEN FROM ABACUS ( HELGAKER, JENSEN, JOERGENSEN, TAYLOR)
C   ADAPTED TO CRAPS AND EXTENDED FOR UHF AND QRHF   OCT/90/JG
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL SCF,NONHF,IDFGH
      CHARACTER*8 LABELC,LABELD,LABELNHF
      INTEGER POP,VRT,DIRPRD
      INTEGER R, S, U, V, UV, UR, US, VR, VS, RS
      DIMENSION CMO(1),DV(1),DNHF(1),SCR(1)
      DIMENSION DHFSO(1),DRELSO(1),DNHFSO(1) 
C
C  ADDED COMMON BLOCKS IN THE CRAPS ENVIRONMENT
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NF1(2),NF2(2)
      COMMON/BASSYM/NBAS(8),NBASIS,NBASSQ,NBASTT
      COMMON/BASSPH/NBAS5(8),NBASIS5,NBASSQ5,NBASTT5
      COMMON/METHOD/IUHF,SCF,NONHF
      COMMON/IPRI/IPRINT
      COMMON/DFGH/IDFGH
C
      DATA AZERO,HALF,ONE,TWO /0.0D0,0.5D0,1.0D0,2.D0/
C
C  SET OCCUPATION NUMBER FOR SCF
C
      IF(IUHF.EQ.0) THEN
C
C RHF :
C
       OCCUP=TWO
C
      ELSE
C
C UHF :
C
       OCCUP=ONE
C
      ENDIF
C
C  LOOP OVER SPIN CASES
C
      DO 10 ISPIN=1,1+IUHF
C
       IF(IPRINT.GE.5) THEN
        WRITE(6,*) ' Spin case ',ISPIN
       ENDIF
C 
C  GET OFFSETS FOR DENSITY MATRICES
C
       IOFFD=(ISPIN-1)*NBASTT
C      
C  READ MO COEFFICIENTS IN A SYMMETRY PACKED FORM
C
C  GET FIRST THE LABELS FOR VARIOUS METHODS
C
       IF(SCF) THEN
C
        IF(ISPIN.EQ.1) THEN
         LABELC='SCFEVCA0'
        ELSE
         LABELC='SCFEVCB0'
        ENDIF
C
       ELSE
C
        IF(ISPIN.EQ.1) THEN
         LABELC='SCFEVCA0'
         LABELD='RELDENSA'
         LABELNHF='NHFDENSA'
        ELSE
         LABELC='SCFEVCB0'
         LABELD='RELDENSB'
         LABELNHF='NHFDENSB'
        ENDIF
C
       ENDIF
C
C  GET THE MO COEFFICIENTS FROM JOBARC
C
CSSS       CALL GETREC(20,'JOBARC',LABELC,IINTFP*NBASIS5*NBASIS5,SCR)
C
C  SYMMETRY PACK THE COEFFICIENTS
C
CSSS       CALL SYMC(SCR,CMO,NBASIS5,NBAS5,SCF,.FALSE.,ISPIN)
C
C FOR SPHERICAL GAUSSIANS, EXPAND TO FULL SET OF CARTESIAN
C GAUSSIANS
C
       IF(IDFGH) THEN
C
CSSS       CALL EXPSPH(CMO,SCR)
C
       CALL GETREC(20,'JOBARC',LABELC,IINTFP*NBASIS5*NBASIS5,CMO)
       CALL GETREC(20,'JOBARC','CMP2CART',NBASIS5*NBASIS*IINTFP,
     &            SCR)
       I010=1+NBASIS*NBASIS5
       CALL XGEMM('N','N',NBASIS,NBASIS5,NBASIS5,1.D0,SCR,NBASIS,
     &            CMO,NBASIS5,0.D0,SCR(I010),NBASIS)
       CALL SYMCEXT(SCR(I010),CMO,NBASIS,NBAS,NBASIS5,NBAS5, SCF,
     &            .FALSE.,ISPIN)
       ELSE
        CALL GETREC(20,'JOBARC',LABELC,IINTFP*NBASIS5*NBASIS5,SCR)
        CALL SYMCEXT(SCR,CMO,NBASIS5,NBAS5,NBASIS5,NBAS5,SCF,
     &              .FALSE.,ISPIN)
       ENDIF
C
C  FOR CORRRELATION METHODS READ IN THE TOTAL DENSITY MATRIX AS WELL
C
       IF(.NOT.SCF) THEN
C 
        CALL GETREC(20,'JOBARC',LABELD,IINTFP*NBASIS5*NBASIS5,SCR)   
C
C  SYMMETRY PACK THE DENSITY MATRIX
C
        CALL SYMD(SCR,DV,NBASIS5,NBAS5,ISPIN)
C
        IF(NONHF) THEN
C
C  FOR QRHF METHODS READ IN IN ADDITION THE NON-DIRECT CONTRIBUTION
C
         CALL GETREC(20,'JOBARC',LABELNHF,IINTFP*NBASIS5*NBASIS5,SCR)
C
C  SYMMETRY PACK THIS TERM
C
         CALL SYMD(SCR,DNHF,NBASIS5,NBAS5,ISPIN)
C
        ENDIF
C
       ENDIF
C
C     Print Section
C
CSSS       IPRINT = 6
       IF (IPRINT .GT. 03) THEN
        WRITE (*, '(//,A,/)') ' <<<<< Subroutine ONEDSO >>>>>'
        WRITE (*, '(A,8I5)') ' NOCC ', (POP(I,ISPIN),I = 1,NIRREP)
        WRITE (*, '(A,8I5)') ' NVRT ', (VRT(I,ISPIN),I = 1,NIRREP)
        WRITE (*, '(A,8I5)') ' NBAS ', (NBAS(I),I = 1,NIRREP)
        WRITE (*, '(A,8I5)') ' NBAS5 ', (NBAS5(I),I = 1,NIRREP)
        IF (IPRINT .GE. 05) THEN
         CALL HEADER('Molecular orbitals',0)
         IEND = 0
         DO 1000 ISYM = 1,NIRREP
          IF (NBAS(ISYM) .EQ. 0) GOTO 1000
          WRITE (*, '(//,A,I5,/)') ' Symmetry ', ISYM
          IENDI = 0
          DO 1200 I = 1, NBAS5(ISYM)
           WRITE (*, '(/,A,I5,/)')
     *           ' Molecular orbital ', I
           WRITE (*, '(6F12.6)')
     *           (CMO(IEND+IENDI+J), J = 1, NBAS(ISYM))
           IENDI = IENDI + NBAS(ISYM)
1200      CONTINUE
          IEND = IEND + NBAS5(ISYM)*NBAS(ISYM)
1000     CONTINUE
         IF(.NOT.SCF) THEN
          CALL PRITRI(DV,NBASTT5,'Total density matrix (MO basis)')
          IF(NONHF) THEN 
           CALL PRITRI(DNH,NBASTT5,
     &     'Non HF part of density matrix (MO basis)')
          ENDIF
         ENDIF
        ENDIF
       ENDIF
C
C     ***** Construct SO matrices *****
C
       ISEND = 0
       ISEND5 = 0
       ICEND = 0
       IOFFO = 0
C
C  LOOP OVER ALL IRREPS
C
       DO 110 ISYM = 1,NIRREP
        NOCCI=POP(ISYM,ISPIN)
        NBASI=NBAS(ISYM)
        NBASI5=NBAS5(ISYM)
        IF (NBASI.EQ.0) GOTO 110
        RS = 0
C
C  LOOP OVER TARGET INDICES R AND S (ACTUALLY THESE ARE INDICES IN
C  THE SAO BASIS
C
        DO 100 R=1,NBASI
         DO 200 S=1,R
          RS=RS+1
C
C  CONTRUCT ONE-ELECTRON DENSITY MATRICES                   
C
          DHF=AZERO
C
C  HF DENSITY MATRIX
C
          IF(NOCCI.GT.0) THEN
           ICENDI=ICEND
           DO 3001 I=1,NOCCI
            DHF=DHF+OCCUP*CMO(ICENDI+R)*CMO(ICENDI+S)
            ICENDI=ICENDI+NBASI
3001       CONTINUE
          ENDIF
C
C  RELAXED DENSITY MATRIX - HF DENSITY MATRIX
C
          IF(.NOT.SCF) THEN
C
           DREL=AZERO
           IF(NBASI.GT.0)THEN
            UV=ISEND5
            IDVEND=ICEND 
            ICENDU=IDVEND
C
C  LOOP OVER ALL MOS U AND V
C
            DO 400 U=1,NBASI5
             ICENDV=IDVEND
             DO 410 V=1,U
              UV=UV+1
              DUV=DV(UV)
              IF(ABS(DUV).GT.AZERO)THEN
               TEMP=CMO(ICENDU+R)*CMO(ICENDV+S)
               IF(U.NE.V)TEMP=TEMP+CMO(ICENDU+S)*CMO(ICENDV+R)
               DREL=DREL+DUV*TEMP
              ENDIF
              ICENDV=ICENDV+NBASI
410          CONTINUE
             ICENDU=ICENDU+NBASI
400         CONTINUE
           ENDIF
           IF(NONHF) THEN
C
            DNON=AZERO
            IF(NBASI5.GT.0) THEN
             UV=ISEND5 
             IDVEND=ICEND
             ICENDU=IDVEND
C
C LOOP OVER ALL MOS U AND V
C
             DO 500 U=1,NBASI5
              ICENDV=IDVEND
              DO 510 V=1,U
               UV=UV+1
               DUV=DNHF(UV)
               IF(ABS(DUV).GT.AZERO) THEN
                TEMP=CMO(ICENDU+R)*CMO(ICENDV+S)
                IF(U.NE.V) TEMP=TEMP+CMO(ICENDU+S)*CMO(ICENDV+R)
                DNON=DNON+DUV*TEMP
               ENDIF
               ICENDV=ICENDV+NBASI
510           CONTINUE
              ICENDU=ICENDU+NBASI
500          CONTINUE
            ENDIF
           ENDIF
          ENDIF
          DHFSO(ISEND+RS+IOFFD)=DHF
          IF(.NOT.SCF) THEN
           DRELSO(ISEND+RS+IOFFD)=DREL-DHF
           IF(NONHF) THEN
            DNHFSO(ISEND+RS+IOFFD)=DNON
           ENDIF
          ENDIF 
200      CONTINUE
100     CONTINUE
C
C        ***** Print Section *****
C
CSSS        IPRINT = 11
        IF(IPRINT.GE.10)THEN
         CALL PRITRI(DHFSO(ISEND+1+IOFFD),NBASI,
     &   'HF density matrix (SO basis - not folded)')
         IF(.NOT.SCF) THEN
          CALL PRITRI(DRELSO(ISEND+1+IOFFD),NBASI,
     &    '(Relaxed - HF) density matrix (SO basis - not folded)')
          IF(NONHF) THEN
           CALL PRITRI(DNHFSO(ISEND+1+IOFFD),NBASI,
     &     'Non HF relaxed density matrix (SO basis - not folded)')
          ENDIF
         ENDIF
        ENDIF
        ISEND=ISEND+(NBASI*(NBASI+1))/2
        ISEND5=ISEND5+(NBASI5*(NBASI5+1))/2
        ICEND=ICEND+NBASI*NBASI5
110    CONTINUE
10    CONTINUE
CSSS      IPRINT = 0
      RETURN
      END
