      SUBROUTINE C1DRIV(NHKT1,NHKT2,KHKT1,KHKT2,KHKT12,MHKT1,MHKT2,
     *                  NORB1,NORB2,NUC1,NUC2,NSET1,NSET2,
     *                  MAX12,MAX34,NUC12,NUC34,NORB12,JMAX,
     *                  ISTEP1,ISTEP2,ISTEPT,ISTEPU,ISTEPV,
     *                  TPRI12,TCON12,DIAG12,PQSYM,IPQ0X,IPQ0Y,IPQ0Z,
     *                  ID120X,ID120Y,ID120Z,IPATH,MXDER,DC10,DC1H,DC1E,
     *                  CROSS,SEGMEN,IPRINT,WORK1,LWORK1)
C
C     TUH
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER AND,OR,XOR
C
C     -------------------------------------------------------
      PARAMETER (LUCMD = 5, LUPRI = 6)
#include "baslims.par"
      PARAMETER (ZERO = 0.00 D00)
      LOGICAL DIAG12, PQSYM, PATH1, CROSS, DC10, DC1H, DC1E, SEGMEN,
     *        SEGCON, TPRI12, TCON12, TPRIAB, TCONAB
      PARAMETER (MXQN=8, MXAQN=MXQN*(MXQN+1)/2, MXAQNS=MXAQN*MXAQN)
      DIMENSION LVALU1(MXAQN), MVALU1(MXAQN), NVALU1(MXAQN),
     *          LVALU2(MXAQN), MVALU2(MXAQN), NVALU2(MXAQN)
      DIMENSION WORK1(LWORK1)
      LOGICAL TKTIME
      COMMON /INTADR/ IWKAO, IWKSO, IWKHHS, IWK1HH, IWK1HC, IWKLST
      COMMON /PRIVEC/ NPRM12(MXAOSQ), NPRM34(MXAOSQ),
     *                LSTP12(MXAOSQ), LSTP34(MXAOSQ),
     *                LSTO12(MXAOSQ), LSTO34(MXAOSQ),
     *                LASTP(MXAOSQ),  LASTO(MXAOSQ)
      COMMON /ODD12/  IODD12(MXAQN*MXAQN)
      COMMON /CC1INF/ LVAL12, MVAL12, NVAL12, INCRMT, INCRMU, INCRMV,
     *                ISTRET, ISTREU, ISTREV, JSTEPT, JSTEPU, JSTEPV,
     *                JPQ0X, JPQ0Y, JPQ0Z, NUCA, NUCB, NUCAB, NUCCD,
     *                NCCPP, MAXCD, NORBA, NORBB, NORBAB,
     *                TPRIAB, TCONAB, KHKTAB,
     *                INTHC0, JPRINT, PATH1, JSTRH(969),
     *                JODDH(969), IADDPV, ISTRCF, IOFFVC, ICMP12,
     *                MAXDER, NSETA, NSETB,
     *                NWORK0, NWORKH, NWORKE, SEGCON
C
      IBTAND(I,J) = AND(I,J)
      IBTOR(I,J)  = OR(I,J)
      IBTSHL(I,J) = ISHFT(I,J)
      IBTSHR(I,J) = ISHFT(I,-J)
      IBTXOR(I,J) = XOR(I,J)
C
C     STRUCTURE OF HHINT:  NR1234*ISTEPT
C                  WORK:   NR34*ISTEPT
C                  HCINT:  KHKT12*NR34*NCCPP
C                  HCGT0:  NR34
C
C     ***** SET UP COMMON CC1INF *****
C
      INCRMT = ID120X + 1
      INCRMU = ID120Y + 1
      INCRMV = ID120Z + 1
      JSTEPT = ISTEPT
      JSTEPU = ISTEPU/ISTEPT
      JSTEPV = ISTEPV/ISTEPT
      JPQ0X = IPQ0X
      JPQ0Y = IPQ0Y
      JPQ0Z = IPQ0Z
      NUCA = NUC1
      NUCB = NUC2
      NUCAB = NUC12
      NUCCD = NUC34
      NORBA = NORB1
      NORBB = NORB2
      NORBAB = NORB12
      NSETA = NSET1
      NSETB = NSET2
      TPRIAB = TPRI12
      TCONAB = TCON12
      KHKTAB = KHKT12
      JPRINT = IPRINT
      NCCPP = NORB12*NUC34
      MAXCD = MAX34
      MAXDER = MXDER
      SEGCON = SEGMEN
      PATH1 = IPATH .EQ. 1
      IF (PATH1) THEN
         IADDPV = 0
         ISTRCF = 1
         IOFFVC = 0
      ELSE
         IADDPV = MXAOSQ
         ISTRCF = 1 + 2*MXCONT*MXAOVC
         IOFFVC = 2*MXAOVC
      END IF
C
C     ***** JSTRH(NR34) AND JODDH(NR34) *****
C
      MAX34D = MAX34 + MAXDER
      IF (MAX34D .EQ. 0) THEN
         JSTRH(1) = 1
         JODDH(1) = 0
      ELSE
         ISTVMU = JMAX*(JMAX + 1)
         ITUV = 0
         DO 100 J = 0, MAX34D
            IADRJ = J + 1
            DO 110 IT = J, 0, -1
               JODDT = IBTAND(IPQ0X,IT)
               IADR = IADRJ
               JMINT = J - IT
               DO 120 IU = JMINT, 0, -1
                  IV = JMINT - IU
                  ITUV = ITUV + 1
                  JSTRH(ITUV) = IADR
                  JODDTU = IBTOR(JODDT,IBTSHL(IBTAND(IU,IPQ0Y),1))
                  JODDH(ITUV) = IBTOR(JODDTU,IBTSHL(IBTAND(IV,IPQ0Z),2))
                  IADR = IADR + ISTVMU
 120           CONTINUE
               IADRJ = IADRJ + JMAX
 110        CONTINUE
 100     CONTINUE
      END IF
C
C     ***** Angular quantum numbers *****
C
      CALL LMNVAL(NHKT1,MHKT1,LVALU1,MVALU1,NVALU1)
      CALL LMNVAL(NHKT2,MHKT2,LVALU2,MVALU2,NVALU2)
C
C     *************************
C     ***** PRINT SECTION *****
C     *************************
C
      IF (IPRINT .GE. 10) THEN
         WRITE (LUPRI, 1000)
         WRITE (LUPRI, 1010) PATH1
         WRITE (LUPRI, 1020) MAXDER
         WRITE (LUPRI, 1030) CROSS
         WRITE (LUPRI, 1040) DC10
         WRITE (LUPRI, 1050) DC1H
         WRITE (LUPRI, 1060) DC1E
         WRITE (LUPRI, 1070) NHKT1, NHKT2
         WRITE (LUPRI, 1080) KHKT1, KHKT2, KHKT12
         WRITE (LUPRI, 1090) MAX12, MAX34
         WRITE (LUPRI, 1095) NUC1, NUC2
         WRITE (LUPRI, 1100) NUC12, NUC34
         WRITE (LUPRI, 1110) NORB12
         WRITE (LUPRI, 1130) DIAG12
         WRITE (LUPRI, 1140) NCCPP
         WRITE (LUPRI, 1150) ISTEP1, ISTEP2
         WRITE (LUPRI, 1160) PQSYM, IPQ0X, IPQ0Y, IPQ0Z
         WRITE (LUPRI, 1170) ID120X, ID120Y, ID120Z
         WRITE (LUPRI, 1180) ISTEPT, ISTEPU, ISTEPV
         WRITE (LUPRI, 1190) (NPRM12(I + IADDPV),I=1, NORB12)
         NR34 = (MAX34D + 1)*(MAX34D + 2)*(MAX34D + 3)/6
         WRITE (LUPRI, 1200) (JSTRH(I), I = 1, NR34)
         WRITE (LUPRI, 1210) (JODDH(I), I = 1, NR34)
         WRITE (LUPRI, 1220) (LVALU1(I), I = 1, KHKT1)
         WRITE (LUPRI, 1230) (MVALU1(I), I = 1, KHKT1)
         WRITE (LUPRI, 1240) (NVALU1(I), I = 1, KHKT1)
         WRITE (LUPRI, 1250) (LVALU2(I), I = 1, KHKT2)
         WRITE (LUPRI, 1260) (MVALU2(I), I = 1, KHKT2)
         WRITE (LUPRI, 1270) (NVALU2(I), I = 1, KHKT2)
      END IF
C
C     ***** INITIALIZATION *****
C
      NWORK0 = 0
      NWORKH = 0
      NWORKE = 0
      IWK1HC = IWKLST
      IF (DC10) CALL C10INI
      IF (DC1H) CALL C1HINI
      IF (DC1E) CALL C1EINI
      IWKMAX = IWKLST + MAX(NWORK0,NWORKH,NWORKE)
      IF (IWKMAX .GT. LWORK1) THEN
       WRITE (LUPRI, 2000) IWKMAX, LWORK1
       CALL ERREX
      END IF
      DO 200 I = IWK1HC + 1, IWKLST
         WORK1(I) = ZERO
  200 CONTINUE
      IF (IPRINT .GE. 10) THEN
         WRITE (LUPRI, 3000)
         WRITE (LUPRI, 3010) IWK1HH, IWK1HC, IWKLST
         WRITE (LUPRI, 3020) NWORK0, NWORKH, NWORKE
         IF (IPRINT .GE. 20) WRITE (LUPRI, 3030)
      END IF
C
C     ***** EVALUATION OF INTEGRALS *****
C
      ICMP12 = 0
      DO 300 ICOMP1 = 1,KHKT1
         LVAL1 = LVALU1(ICOMP1)
         MVAL1 = MVALU1(ICOMP1)
         NVAL1 = NVALU1(ICOMP1)
         ISTRAT = ISTEP1*LVAL1
         ISTRAU = ISTEP1*MVAL1
         ISTRAV = ISTEP1*NVAL1
         IF (DIAG12) THEN
            MAX2 = ICOMP1
         ELSE
            MAX2 = KHKT2
         END IF
         DO 400 ICOMP2 = 1,MAX2
            LVAL2 = LVALU2(ICOMP2)
            MVAL2 = MVALU2(ICOMP2)
            NVAL2 = NVALU2(ICOMP2)
            ICMP12 = ICMP12 + 1
            ISTRET = ISTRAT + ISTEP2*LVAL2
            ISTREU = ISTRAU + ISTEP2*MVAL2
            ISTREV = ISTRAV + ISTEP2*NVAL2
            LVAL12 = LVAL1 + LVAL2
            MVAL12 = MVAL1 + MVAL2
            NVAL12 = NVAL1 + NVAL2
            IF (PQSYM) THEN
               IODD = IBTAND(LVAL12,IPQ0X)
               IODD = IBTOR(IBTSHL(IBTAND(MVAL12,IPQ0Y),1),IODD)
               IODD12(ICMP12)
     *              = IBTOR(IBTSHL(IBTAND(NVAL12,IPQ0Z),2),IODD)
            END IF
            IF (IPRINT .GE. 10) THEN
               WRITE (LUPRI, 4000) ICOMP1, ICOMP2
               WRITE (LUPRI, 4010) LVAL1, MVAL1, NVAL1
               WRITE (LUPRI, 4020) LVAL2, MVAL2, NVAL2
               WRITE (LUPRI, 4030) ISTRET, ISTREU, ISTREV
               WRITE (LUPRI, 4040) IODD12(ICMP12)
            END IF
C
C           UNDIFFERENTIATED INTEGRALS
C
            IF (DC10) CALL C10CAL(WORK1,LWORK1)
C
C           SUM OF DERIVATIVES ON BOTH NUCLEI
C
            IF (DC1H) CALL C1HCAL(WORK1,LWORK1)
C
C           DERIVATIVES ON SEPARATE NUCLEI
C
            IF (DC1E) CALL C1ECAL(WORk1,LWORK1)
C
  400    CONTINUE
  300 CONTINUE
      RETURN
 1000 FORMAT (//,1X,'<<<<<<<<<< SUBROUTINE C1DRIV >>>>>>>>>>',/)
 1010 FORMAT (1X,'PATH1    ',L7)
 1020 FORMAT (1X,'MAXDER   ',I7)
 1030 FORMAT (1X,'CROSS    ',L7)
 1040 FORMAT (1X,'DC10     ',L7)
 1050 FORMAT (1X,'DC1H     ',L7)
 1060 FORMAT (1X,'DC1E     ',L7)
 1070 FORMAT (1X,'NHKT     ',2I7)
 1080 FORMAT (1X,'KHKT     ',2I7,/,1X,'KHKT12   ',I7)
 1090 FORMAT (1X,'MAX12/34 ',2I7)
 1095 FORMAT (1X,'NUC1/2   ',2I7)
 1100 FORMAT (1X,'NUC12/34 ',2I7)
 1110 FORMAT (1X,'NORB12   ',I7)
 1130 FORMAT (1X,'DIAG12   ',L7)
 1140 FORMAT (1X,'NCCPP    ',I7)
 1150 FORMAT (1X,'ISTEP1/2 ',2I7)
 1160 FORMAT (1X,'PQSYM    ',L7,3I7)
 1170 FORMAT (1X,'ID120    ',3I7)
 1180 FORMAT (1X,'ISTEPT...',3I7)
 1190 FORMAT (1X,'NPRM12   ',15I7)
 1200 FORMAT (1X,'JSTRH(NR34):   ',(10I7))
 1210 FORMAT (1X,'JODDH(NR34):   ',(10I7))
 1220 FORMAT (1X,'LVALU1(KHKT1): ',(10I7))
 1230 FORMAT (1X,'MVALU1(KHKT1): ',(10I7))
 1240 FORMAT (1X,'NVALU1(KHKT1): ',(10I7))
 1250 FORMAT (1X,'LVALU2(KHKT2): ',(10I7))
 1260 FORMAT (1X,'MVALU2(KHKT2): ',(10I7))
 1270 FORMAT (1X,'NVALU2(KHKT2): ',(10I7))
 2000 FORMAT (//,1X,' WORK SPACE REQUIREMENT ',I6,' EXCEEDS ',
     *        ' CURRENT LIMIT ',I6,' OF WORK1.')
 3000 FORMAT(/,1X,'WORK SPACE ALLOCATIONS IN C1DRIV:',/)
 3010 FORMAT(1X,'IWK1HH/1HC/LST',3I7)
 3020 FORMAT(1X,'NWORK0/H/E    ',3I7,/)
 3030 FORMAT(//,1X,' *****  HERMITIAN-CARTESIAN INTEGRALS *****',/)
 4000 FORMAT(1X,'ICOMP1/2   ',2I7)
 4010 FORMAT(1X,'L/M/NVAL1  ',3I7)
 4020 FORMAT(1X,'L/M/NVAL2  ',3I7)
 4030 FORMAT(1X,'ISTRET/U/V ',3I7)
 4040 FORMAT(1X,'IODD12     ',I7)
      END
