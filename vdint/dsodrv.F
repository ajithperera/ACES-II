      SUBROUTINE DSODRV(PROPTY,MAXDIF,FOCK,IDATOM,IDCOOR,
     &                  DIFINT,NODC,NODV,DIFDIP,LMAX,WORK1,
     &                  LWORK1,JDSO,NCOORD)
C
C THIS PROGRAM DRIVES THE CALCULATION OF THE DSO INTEGRALS
C USING GAUSS-LEGENDRE INTEGRATION AND ANALYTICALLY EVALUATED
C ELECTRICAL FIELD INTEGRALS
C
C REF.: D. MATSUOKA, T. AOYAMA, J.CHEM. PHYS. 73 (1980) 5718.
C
CEND
C
C  JG 4/93
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER AND,OR,XOR
      LOGICAL LAEQB,LDIAG,ONECEN,FOCK,DIFINT,NODC,NODV,
     &        SECDER,DIFDIP,DIFQUA,PROPTY,FULMAT
      LOGICAL SCF,NONHF,ELECT,MAGNET,GEOM,MAGNET2,GIAO
      LOGICAL TRAINV,IDFGH
      LOGICAL DCORD, DCORGD, NOORBT, DOPERT
      LOGICAL YESNO
      LOGICAL SHARE
      CHARACTER NAMEX*6
      CHARACTER*80 FNAME
C
#include "mxcent.par"
#include "baslims.par"
      PARAMETER (LUCMD = 5, LUPRI = 6)
      PARAMETER (AZERO = 0.00 D00, ONE = 1.00 D00,
     &           THREE = 3.00 D00, THIRD = ONE/THREE)
      PARAMETER (PI = 3.14159 26535 89793 D00)
#include "lwork.par"
      PARAMETER (LWKRLM = LWORK3 - 8020)
      PARAMETER (MXQN=8, MXAQN=MXQN*(MXQN+1)/2,MXAQNS=MXAQN*MXAQN)
#include "odcs.com"
C
      DIMENSION JDSO(NCOORD,NCOORD)
      DIMENSION ROOTS(100),WEIGHTS(100)
      DIMENSION FACINT(MXCENT),
     &          CORCX(MXCENT), CORCY(MXCENT), CORCZ(MXCENT)
      DIMENSION WORK1(LWORK1)
      DIMENSION MULTAT(MXCENT)
C
      COMMON /CWORK3/ WK3LOW, SHGTF, AHGTF((MXCENT+1)*(2*MXQN+1)**3)
CSSS     &                RLMCOF(LWKRLM), WK3HGH
      COMMON /ADER/ ADER0 (MXAQNS)
      COMMON /POINTER/IS0000, IS000X, IS000Y, IS000Z,
     &                IS00XX, IS00XY, IS00XZ, IS00YY,
     &                IS00YZ, IS00ZZ, IT0000, IT000X,
     &                IT000Y, IT000Z, IT00XX, IT00XY,
     &                IT00XZ, IT00YY, IT00YZ, IT00ZZ,
     &                ID0000, ID000X, ID000Y, ID000Z,
     &                ID00XX, ID00XY, ID00XZ, ID00YX,
     &                ID00YY, ID00YZ, ID00ZX, ID00ZY,
     &                ID00ZZ,
     &                IA0000, IA0X00, IA0Y00, IA0Z00,
     &                IAXX00, IAXY00, IAXZ00, IAYY00,
     &                IAYZ00, IAZZ00, IA000X, IA000Y,
     &                IA000Z, IA00XX, IA00XY, IA00XZ,
     &                IA00YY, IA00YZ, IA00ZZ, IA0X0X,
     &                IA0X0Y, IA0X0Z, IA0Y0X, IA0Y0Y,
     &                IA0Y0Z, IA0Z0X, IA0Z0Y, IA0Z0Z
      COMMON /POINT2/ IQ00XX, IQ00XY, IQ00XZ, IQ00YY,
     &                IQ00YZ, IQ00ZZ
      COMMON /SCRPOIN/ISCR1(20),ISCR2(28)
      COMMON/DENPOIN/KDEN,KFOC
      COMMON /LMNS/ LVALUA(MXAQN), MVALUA(MXAQN), NVALUA(MXAQN),
     &              LVALUB(MXAQN), MVALUB(MXAQN), NVALUB(MXAQN)
      COMMON/CCOM/THRS,NHTYP,IBX
      COMMON /NUCLEIi/ NOORBT(MXCENT),
     &                NUCIND, NUCDEP, NUCPRE(MXCENT), NUCNUM(MXCENT,8),
     &                NUCDEG(MXCENT), ISTBNU(MXCENT), NDCORD,
     &                NDCOOR(MXCOOR), NTRACO, NROTCO, ITRACO(3),
     &                IROTCO(3),
     &                NATOMS, NFLOAT,
     &                IPTGDV(3*MXCENT),
     &                NGDVEC(8), IGDVEC(8)
      COMMON /NUCLEI/ CHARGE(MXCENT), CORD(MXCENT,3),
     &                DCORD(MXCENT,3),DCORGD(MXCENT,3),
     &                DOPERT(0:3*MXCENT)
      COMMON /NUCLEC/ NAMEX(MXCOOR)
      COMMON /PRIMIT/ PRIEXP(MXPRIM), PRICCF(MXPRIM,MXAOVC),
     &                PRICRX(MXPRIM), PRICRY(MXPRIM), PRICRZ(MXPRIM)
      COMMON /SHELLSi/ KMAX,
     &                NHKT(MXSHEL),   KHKT(MXSHEL), MHKT(MXSHEL),
     &                ISTBAO(MXSHEL), NUCO(MXSHEL), JSTRT(MXSHEL),
     &                NSTRT(MXSHEL),  MST(MXSHEL),  NCENT(MXSHEL),
     &                NRCO(MXSHEL), NUMCF(MXSHEL),
     &                NBCH(MXSHEL),   KSTRT(MXSHEL)
      COMMON /SHELLS/ CENT(MXSHEL,3), SHARE(MXSHEL)
      COMMON /SYMMET/ FMULT(0:7), PT(0:7),
     &                MAXLOP, MAXLOT, MULT(0:7), ISYTYP(3),
     &                ITYPE(8,36), NPARSU(8), NPAR(8), NAOS(8),
     &                NPARNU(8,8), IPTSYM(MXCORB,0:7),
     &                IPTCNT(3*MXCENT,0:7), NCRREP(0:7),
     &                IPTCOR(MXCENT*3), NAXREP(0:7), IPTAX(3),
     &                IPTXYZ(3,0:7)
      COMMON /SYMIND/ INDFA(8,10), INDFB(8,10), ISOFRA(8), ISOFRB(8)
      COMMON /HRUNIT/ LUONEL, LUINTA, LUSUPM, LUDASP, LUSOL
      COMMON /CENTC/ SIGNCX(MXCENT), SIGNCY(MXCENT), SIGNCZ(MXCENT),
     &               NCENTC(MXCENT), JSYMC(MXCENT),  JCENTC(MXCENT),
     &               ICXVEC(MXCENT), ICYVEC(MXCENT), ICZVEC(MXCENT)
      COMMON/METHOD/IUHF,SCF,NONHF
      COMMON/PROP/ELECT,MAGNET,GEOM,MAGNET2,GIAO 
      COMMON/BASSYM/NBAS(8),NBASIS,NBASSQ,NBASTT
      COMMON/BASSPH/NBAS5(8),NBASIS5,NBASSQ5,NBASTT5
      COMMON /LSYM/ NLENQ(8),NLENT(8)
      COMMON /LSYMSPH/ NLENQ5(8),NLENT5(8)
      COMMON /GENCON/NRCA,NRCB,CONTA(MXCONT),CONTB(MXCONT)
      COMMON /INVAR/TRAINV
      COMMON /PERT/NTPERT,NPERT(8),IPERT(8),IXPERT,IYPERT,IZPERT,
     &             IYZPERT,IXZPERT,IXYPERT,ITRANSX,ITRANSY,ITRANSZ,
     &             NUCIND1
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/IPRI/IPRINT
      COMMON/DFGH/IDFGH
C
      IBTAND(I,J) = AND(I,J)
      IBTOR(I,J)  = OR(I,J)
      IBTXOR(I,J) = XOR(I,J)
C
      MAXDIF=1
      TOLS=THRS*THRS
      TOLOG=-LOG(TOLS)
C
      NNBASX=NBASIS*(NBASIS + 1)/2
C
      CALL ZERO(JDSO,NCOORD*NCOORD)
C
C SET UP TOTAL DENSITY AND FOCK MATRICES IN AO BASIS
C
      KDEN=1
      KFOC=KDEN+NBASIS*(NBASIS+1)/2
      KSTART=KFOC+NBASIS*(NBASIS+1)/2
      KCMO=KSTART 
      KFT=KCMO+NBASIS*NBASIS
      KDV=KFT+NBASIS*NBASIS
C
      KDSO=KDV+NBASIS*NBASIS
      KFSO=KDSO+NBASIS*NBASIS
C
C ALLOCATE FURTHER MEMORY FOR DSOFSO
C
      KSCR=KFSO+NBASIS*NBASIS
C
C CALCULATE TOTAL DENSITY MATRIX IN PRIMITIVE AO-BASIS
C
      CALL DSOFSO(WORK1(KCMO),WORK1(KFT),WORK1(KDV),
     &            WORK1(KDSO),WORK1(KDSO),WORK1(KFSO),
     &            WORK1(KSCR),.FALSE.,.FALSE.)
      CALL DSYM1(WORK1(KDEN),WORK1(KDEN),WORK1(KFOC),
     &           WORK1(KDSO),WORK1(KDSO),WORK1(KFSO),
     &           NBASIS,.FALSE.)
C
C GET FIRST ROOTS AND WEIGHTS FOR GAUSS-LEGENDRE INTEGRATION
C CURRENTLY, NPOINTS HAS BEEN CHOSEN AS 24
C
      NPOINTS=24
      CALL GAUSSL(ONEM,ONE,NPOINTS,ROOTS,WEIGHTS)
C
C LOOP OVER NUMBER OF INTEGRATION POINTS, CURRENTLY FIXED TO
C
      DO 10000 IROOT=1,NPOINTS
C
       R=ROOTS(IROOT)
       W=WEIGHTS(IROOT)
C
C DETERMINE ALPHA_C
C
       AM=0.75D0
C
C FORMULA TAKEN FROM JCP. 73, 5718  WITH  M=0.75
C
       ALPHA=AM*(ONE+R)/(ONE-R)
C
       write(*,*) alpha
C
       ASQ=ALPHA*ALPHA
C
C FACTOR FOR CONTRIBUTION FROM THIS ROOT
C
       FACT=ASQ*W
C
C LOOP OVER IATOMD
C 
       DO 9900 IATOMD=1,NUCIND
C
        CORDX=CORD(IATOMD,1)
        CORDY=CORD(IATOMD,2)
        CORDZ=CORD(IATOMD,3)
        
        CALL IZERO(ISOFRA, 8)
C
C  LOOP OVER FIRST SHELL : ISHELA
C
        IDENA = 0
C
        DO 100 ISHELA = 1,KMAX
C
C NHKTA: ANGULAR MOMENTUM OF ISHELA 1=S, 2=P, ...
C
         NHKTA = NHKT(ISHELA)
C
C KHKTA: NUMBER OF DIFFERENT FUNCTIONS PER PRIMITIVE 1 FOR S, 3 FOR P, ...
C 
         KHKTA = KHKT(ISHELA)
C
C MHKTA:
C
         MHKTA = MHKT(ISHELA)
C
C ROUTINE LMNVAL DETERMINES THE VALUES: LVALUA,MVALUA, AND NVALUA
C WHICH GIVE THE EXPONENTS l,m,n FOR THE CARTESIAN GAUSSIANS
C
         CALL LMNVAL(NHKTA,MHKTA,LVALUA,MVALUA,NVALUA)
C
C NCENTA: NUMBER OF THE ATOM WHICH CORRESPONDS TO ISHELA
C         (WITHIN THE LIST OF NON-SYMMETRY EQUIVALENT ATOMS)
C
         NCENTA = NCENT(ISHELA)
C
C ICENTA: THE NUMBER OF THE ATOM WHICH CORRESPONDS TO ISHELA 
C         WITHIN THE LISTS OF ALL ATOMS CONSIDERING THE FIRST
C         MEMBER OF ALL SYMMETRY EQUIVALENT SHELLS ISHELA
C
         ICENTA = NUCNUM(NCENTA,1)
C
C  MULA: BITMAP SHOWING UNDER WHICH OPEREATIONS ISHELA IS
C  REDUNDANT:   1 --> FIRST OPERATION, 2 --> SECOND OPERATION,
C  3 --> FIRST AND SECOND OPERATIONS, 4 --> THIRD OPERATION,
C  5 --> FIRST AND THIRD OPERATIONS, 6 --> SECOND AND THIRD
C  OPERATIONS, 7 --> ALL OPERATIONS
C
         MULA   = ISTBAO(ISHELA)
C
C MULTA:  NUMBER OF SYMMETRY EQUIVALENT SHELLS WHICH BELONG TO ISHELA
C
         MULTA  = MULT(MULA)
C
C NUCA: NUMBER OF PRIMITIVES
C
         NUCA   = NUCO(ISHELA)
C
C NRCA: NUMBER OF CONTRACTIONS
C
         NRCA   = NRCO(ISHELA)
C
C NUMCFA: .... 
C
         NUMCFA = NUMCF(ISHELA)
C
C JSTA: OFFSET IN LIST OF PRIMITIVES FOR ISHELA
C
         JSTA   = JSTRT(ISHELA)
C
C CORAX, CORAY, CORAY: COORDINATES OF THE CENTER OF ISHELA
C
         CORAX=CENT(ISHELA,1)
         CORAY=CENT(ISHELA,2)
         CORAZ=CENT(ISHELA,3)
C
         IDENB=0
C
C COMPUTE SYMMETRY INTEGRAL POINTERS FOR CONTRIBUTIONS
C FROM THIS BLOCK.  NOTE THAT AT PRESENT THIS ASSUMES ALL
C COMPONENTS FROM A SHELL ARE INCLUDED.
C
         DO 600 I = 1, 8
          ISOFRB(I) = 0
          DO 610 J = 1, 10
           INDFA(I,J) = -10 000 000
610       CONTINUE
600      CONTINUE
C
         DO 620 NA = 1, KHKTA
          DO 630 IREP = 0, MAXLOP
           IF (IBTAND(MULA,IBTXOR(IREP,ITYPE(NHKTA,NA))).EQ.0) THEN
            ISOFRA(IREP+1)    = ISOFRA(IREP+1) + NRCA
            INDFA (IREP+1,NA) = ISOFRA(IREP+1)
           END IF
630       CONTINUE
620      CONTINUE
C
C LOOP OVER SECOND SHELL : ISHELB 
C
C THE LOOP IS TRIANGULAR, I.E ISHELA GE ISHELB
C
c         DO 110 ISHELB = 1,ISHELA
         DO 110 ISHELB = 1,KMAX
C
C IF SHELLS ARE EQUAL SET LAEQB TO TRUE 
C
          LAEQB=.FALSE.
c         LAEQB = ISHELA .EQ. ISHELB
C
          NHKTB0=NHKT(ISHELB)
          KHKTB0=KHKT(ISHELB)
          MHKTB0=MHKT(ISHELB)
C
C LOOP OVER ALL ANGULAR MOMENTUM NUMBERS UP TO NHKTB0+1
C
          DO 9800 NHKTB=1,NHKTB0+1
C
           KHKTB=NHKTB*(NHKTB+1)/2
           MHKTB=MHKTB0
C
           CALL LMNVAL(NHKTB,MHKTB,LVALUB,MVALUB,NVALUB)
           NCENTB = NCENT(ISHELB)
C
C NHKTAB: THE SUM OF ANGULAR MOMENTUMS OF SHELL A AND B ( OF COURSE + 2) 
C
           NHKTAB = NHKTA + NHKTB
           MULB   = ISTBAO(ISHELB)
           MULTB  = MULT(MULB)
           NUCB   = NUCO(ISHELB)
           NRCB   = NRCO(ISHELB)
           NUMCFB = NUMCF(ISHELB)
           JSTB   = JSTRT(ISHELB)
           CORBX0 = CENT(ISHELB,1)
           CORBY0 = CENT(ISHELB,2)
           CORBZ0 = CENT(ISHELB,3)
C
C THE SIZE OF THE ARRAY OF PRIMITIVES OF ISHELA TIMES PIMITIVES ISHELB
C
           KHKTAB = KHKTA*KHKTB
C
C MAB: THE SYMMETRY OPERATIONS UNDER WHICH AT LEAST ONE OF BOTH
C      SHELLS IS CHANGING
C
           MAB    = IBTOR(MULA,MULB)
C 
C KAB: THE SYMMETRY OPERATIONS UNDER WHICH BOTH SHELLS ARE CHANGING
C
           KAB    = IBTAND(MULA,MULB)
C
C THE MULTIPLICITY FACTOR WHICH CORRESPONDS TO KAB
C
           HKAB   = FMULT(KAB)
C
C COMPUTE SYMMETRY INTEGRAL POINTERS FOR CONTRIBUTIONS
C FROM THIS BLOCK.  NOTE THAT AT PRESENT THIS ASSUMES ALL
C COMPONENTS FROM A SHELL ARE INCLUDED
C
           DO 700 I = 1, 8
            DO 710 J = 1, 10
             INDFB(I,J) = -10 000 000
710         CONTINUE
700        CONTINUE
           DO 720 NB = 1, KHKTB
            DO 730 IREP = 0, MAXLOP
             IF (IBTAND(MULB,IBTXOR(IREP,ITYPE(NHKTB,NB))).EQ.0) THEN
              ISOFRB(IREP+1)    = ISOFRB(IREP+1) + NRCB
              INDFB (IREP+1,NB) = ISOFRB(IREP+1)
             ENDIF
730         CONTINUE
720        CONTINUE
C
C INITIALIZATION FOR NUCLEAR ATTRACTION INTEGRALS
C
C JMAX: THE MAXIMUM ANGULAR MOMENTUM NECEESARY TO CONSIDER, HOWEVER
C       ADD THE LEVEL OF DIFFERENTIATION
C
           JMAX = NHKTAB - 2
           JMAX=JMAX+MAXDIF
           ISTEPU = JMAX + 1
           ISTEPV = ISTEPU*ISTEPU
           NAHGTF = ISTEPU*ISTEPV
C
C NATOMC: NUMBER OF ATOMS CONSIDERED FOR NUCLEAR ATTRACTION INTEGRALS
C
           NATOMC = 0
C
C LOOP OVER ALL NUCLEI CONSIDERED FOR NUCLEAR ATTRACTION 
C INTEGRALS (ONLY THOSE WHICH ARE NON-SYMMETRY EQUIVALENT)
C
          DO 120 IATOMC = 1,NUCIND
C
C MULC: BITMAP POINTING TO THE OPERATIONS UNDER WHICH ATOM C
C       IS REDUNDANT
C
           MULC = ISTBNU(IATOMC)
C
C MABC: BITMAP POINTING TO THE OPERATIONS UNDER WHICH AT LEAST
C       ONE OF ISHELA, ISHELB, AND IATOM C IS CHANGING
C
           MABC = IBTOR(MULC,KAB)
C
C THE COORDINATES OF ATOM C
C
           CORCX0 = CORD(IATOMC,1)
           CORCY0 = CORD(IATOMC,2)
           CORCZ0 = CORD(IATOMC,3)
C
C FACTOR CONSISTING OF NEGATIVE CHARGE OF ATOM TIMES A MULTIPLICITY
C CORRESPONDING TO THE REDUNDANCIES OF A,B,C OVER THE MULTIPLICITY
C CORRESPONDING THE REDUNDANCIES OF A AND B UNDER ALL SYMMETRY
C OPERATIONS
C 
           FACTOR = - FMULT(IBTAND(MULC,KAB))*CHARGE(IATOMC)/HKAB
C
C LOOP OVER ALL SYMMETRY OPERATIONS 
C
           DO 130 ISYMOP = 0, MAXLOT
C
C IS ISYMOP IS NOT CREATING A NEW A,B,C COMBINATION SKIP
C
            IF (IBTAND(ISYMOP,MABC) .EQ. 0) THEN
C
C INCREMENT NATOMC
C
             NATOMC = NATOMC + 1
C
C JSYMC: SYMMETRY OPERATIONS WHICH CREATED ATOM NATOMC
C
             JSYMC(NATOMC)  = ISYMOP
C
C JCENTC: SET OF SYMMETRY EQUIVALENT ATOMS TO WHICH NATOMC BELONGS
C
             JCENTC(NATOMC) = IATOMC
C
C SIGNCX, ... DETERMINE WHETHER THE COORDINATES CHANGE SIGN UNDER
C             THE SYMMETRY OPERATION
C
             SIGNCX(NATOMC) = PT(IBTAND(ISYTYP(1),ISYMOP))
             SIGNCY(NATOMC) = PT(IBTAND(ISYTYP(2),ISYMOP))
             SIGNCZ(NATOMC) = PT(IBTAND(ISYTYP(3),ISYMOP))
C
C COORDINATES FOR NATOMC CREATED FROM THOSE FOR ATOM C
C
             CORCX(NATOMC)  = SIGNCX(NATOMC)*CORCX0
             CORCY(NATOMC)  = SIGNCY(NATOMC)*CORCY0
             CORCZ(NATOMC)  = SIGNCZ(NATOMC)*CORCZ0
C
C FACTOR FOR NATOMC
C
             FACINT(NATOMC) = FACTOR
C
C NUMBER OF ATOM NATOMC IN THE LIST OF ALL ATOMS
C
             NCENTC(NATOMC) = NUCNUM(IATOMC,ISYMOP+1)
C
C ICXVEC, ... 
             ICXVEC(NATOMC) = IPTCNT(3*IATOMC-2,0)
             ICYVEC(NATOMC) = IPTCNT(3*IATOMC-1,0)
             ICZVEC(NATOMC) = IPTCNT(3*IATOMC  ,0)
            END IF
130        CONTINUE
120       CONTINUE
C
C  LOOP OVER SYMMETRY OPERATIONS WITH RESPECT TO
C  THE SECOND SHELL
C
C SG 12/6/96
          IDENB0 = 0
C
          IDENB = IDENB0 - KHKTB*NRCB
C
          DO 200 ISYMOP = 0, MAXLOT
C
C CONSIDER THIS SYMMETRY OPERATION ONLY
C IF IT PROVIDES A NEW SHELL
C SKIP IF REDUNDANT
C
           IF(IBTAND(ISYMOP,MAB) .NE. 0) GO TO 200
C
            IDENB  = IDENB + KHKTB*NRCB
C
C LDIAG IS SET TO TRUE IF BOTH SHELLS ARE IDENTICAL ( ONLY
C TRUE IF ISYMOP IS 0 AND LAEQB IS TRUE
C
            LDIAG  = LAEQB
            IF(ISYMOP.NE.0) LDIAG=.FALSE.
C
            ICENTB = NUCNUM(NCENTB,ISYMOP+1)
            ONECEN = .FALSE.
            SIGNBX = PT(IBTAND(ISYTYP(1),ISYMOP))
            SIGNBY = PT(IBTAND(ISYTYP(2),ISYMOP))
            SIGNBZ = PT(IBTAND(ISYTYP(3),ISYMOP))
            CORBX1  = SIGNBX*CORBX0
            CORBY1  = SIGNBY*CORBY0
            CORBZ1  = SIGNBZ*CORBZ0
C
            IF (ONECEN) THEN
             NHKTAP = NHKTA
            ELSE
             NHKTAP = NHKTA + 2 + MAXDIF
            END IF
            ISTEPB = NHKTAP + NHKTB
            ISTEPA = NHKTB*ISTEPB
            NATOT  = 0
            NINT=KHKTAB*NRCA*NRCB
            IF(LDIAG) NINT=KHKTAB*(NRCA*(NRCA+1)/2)
            NINTS = NATOMC*NINT
            ID000X=KSTART-1
            ID000Y=ID000X+NINTS
            ID000Z=ID000Y+NINTS
            ITOP=ID000Z+NINTS
            NATOT=3*NINTS
            CALL ZERO(WORK1(ID000X+1),NATOT)
C
C ALLOCATE MEMORY FOR SCRATCH ARRAYS
C
            ISNUM=8
            JSNUM=7
            DO 298 INUM=1,ISNUM
             ISCR1(INUM)=ITOP+(INUM-1)*KHKTA*KHKTB
298         CONTINUE
            ITOP2=ITOP+ISNUM*KHKTA*KHKTB
            DO 299 INUM=1,JSNUM
             ISCR2(INUM)=ITOP2+(INUM-1)*KHKTA*KHKTB*NATOMC
299         CONTINUE
            NSCR=(ISNUM+JSNUM*NATOMC)*KHKTA*KHKTB
C
C LOOP OVER PRIMITIVE ORBITALS 
C
            DO 300 IPRIMA = 1,NUCA
             JPRIMA = JSTA + IPRIMA
             DO 301 IRCA = 1,NRCA
              CONTA(IRCA) = PRICCF(JPRIMA,IRCA)
301          CONTINUE
             EXPA = PRIEXP(JPRIMA)
             DO 300 IPRIMB = 1,NUCB
              JPRIMB = JSTB + IPRIMB
              DO 302 IRCB = 1,NRCB
               CONTB(IRCB) = PRICCF(JPRIMB,IRCB)
302           CONTINUE
C
C EXPB0 IS THE PRIMITIVE FOR SHELL B
C
              EXPB0 = PRIEXP(JPRIMB)
C
C MODIFY EXPB (MULTIPLICATION OF CHI(C) WITH CHI(B)
C
              EXPB=EXPB0+ASQ
C
C NEW CENTER FOR THIS COMBINED GAUSSIAN
C
              CORBX=(EXPB0*CORBX1+ASQ*CORDX)/EXPB 
              CORBY=(EXPB0*CORBY1+ASQ*CORDY)/EXPB 
              CORBZ=(EXPB0*CORBZ1+ASQ*CORDZ)/EXPB 
C
              DIFABX = CORAX - CORBX
              DIFABY = CORAY - CORBY
              DIFABZ = CORAZ - CORBZ
              DISTAB = DIFABX*DIFABX + DIFABY*DIFABY + DIFABZ*DIFABZ
C
              EXPP = EXPA + EXPB
              EXPPI = ONE/EXPP
C
C CALCULATE AND TEST SQUARE ROOT FACTOR
C
              EXPABQ = EXPA*EXPB*DISTAB*EXPPI
              IF (EXPABQ.GT.TOLOG) GO TO 300
              SAAB = EXP( - EXPABQ)
              ASAAB = ABS(SAAB)
              IF (ASAAB.LT.TOLS) GO TO 300
              SAAB13 = SIGN(ASAAB**THIRD,SAAB)
C
C CALCULATE COORDINATES OF PRODUCT GAUSSIAN P
C
              EXPAPI = EXPA*EXPPI
              EXPBPI = EXPB*EXPPI
              CORPX  = EXPAPI*CORAX + EXPBPI*CORBX
              CORPY  = EXPAPI*CORAY + EXPBPI*CORBY
              CORPZ  = EXPAPI*CORAZ + EXPBPI*CORBZ
C
C OVERLAP DISTRIBUTION COEFFICIENTS 
C
C EXPANSION COEFFICIENTS FOR UNDIFFERENTIATED ORBITALS
C
              DIFPAX = CORPX - CORAX
              DIFPAY = CORPY - CORAY
              DIFPAZ = CORPZ - CORAZ
              DIFPBX = CORPX - CORBX
              DIFPBY = CORPY - CORBY
              DIFPBZ = CORPZ - CORBZ
              CALL ODC(NHKTAP,NHKTB,ISTEPA,ISTEPB,SAAB13,EXPPI,ONE,
     &                 DIFPAX,DIFPBX,DIFPAY,DIFPBY,DIFPAZ,DIFPBZ,
     &                 ONE,ONE,ONE,ONE,ONE,ONE,IPRINT)
C
C EXPANSION COEFFICIENTS FOR DERIVATIVES WITH
C RESPECT TO COORDINATES OF NUCLEUS A
C
               IF (.NOT.ONECEN) THEN
                CALL DODC(NHKTA,NHKTB,ISTEPA,ISTEPB,EXPA,IPRINT)
               END IF
               CALL TODC(NHKTA,NHKTB,ISTEPA,ISTEPB,EXPA)
C
C  CALCULATION OF HERMITIAN INTEGRALS 
C
C  OVERLAP INTEGRAL
C
              SHGTF = SQRT(PI*EXPPI)
C
C  NUCLEAR ATTRACTION INTEGRALS
C
              IADR = 1
              DO 400 IATOMC = 1,NATOMC
               ICENTC = NCENTC(IATOMC)
               IF(.NOT.(ONECEN.AND.ICENTA.EQ.ICENTC)) THEN
                FACTOR = FACINT(IATOMC)
                DIFCPX = CORCX(IATOMC) - CORPX
                DIFCPY = CORCY(IATOMC) - CORPY
                DIFCPZ = CORCZ(IATOMC) - CORPZ
                CALL HERNAI(JMAX,EXPP,DIFCPX,DIFCPY,DIFCPZ,FACTOR,
     &                      IADR,ISTEPU,ISTEPV,NAHGTF,IPRINT)
               END IF
               IADR = IADR + NAHGTF
400           CONTINUE
C
C CALCULATION OF CARTESIAN INTEGRALS 
C
               CALL ZERO(WORK1(ITOP+1),NSCR)
               CALL EFINT(NHKTA,NHKTB,KHKTA,KHKTB,ICENTA,LDIAG,
     &                    ISTEPA,ISTEPB,ISTEPU,ISTEPV,
     &                    NAHGTF,NATOMC,CHARGE,WORK1)
  300        CONTINUE
C
C CALCULATE EXPECTATION VALUES 
C AND DENSITY CONTRIBUTIONS -  
C ELSE GATHER UNDIF. INTEGRALS 
C
C
c             CALL AVEDSO(KHKTA,KHKTB,IDENA,IDENB,ICENTA,ICENTB,
c     &                   NCENTA,NCENTB,SIGNBX,SIGNBY,SIGNBZ,
c     &                   ISYMOP,SECDER,LDIAG,WORK1,ENERKE,
c     &                   GRADKE,GRADFS,HESSKE,HESFS2,NCOORD)
C
200         CONTINUE
C
C END LOOP OVER SYMMETRY OPERATIONS 
C
9800       CONTINUE
           IDENB = IDENB+KHKTB*MULTB*NRCB
110        CONTINUE
           IDENA = IDENA + KHKTA*MULTA*NRCA
100       CONTINUE
9900     CONTINUE
10000   CONTINUE
C
C  END LOOP OVER SYMMETRY INDEPENDENT ORBITALS 
C
C  PRINT SECTION 
C
      RETURN
      END
