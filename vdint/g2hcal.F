      SUBROUTINE G2HCAL(WORK1,LWORK1)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER AND,OR,XOR
C
      PARAMETER (LUCMD = 5, LUPRI = 6)
#include "baslims.par"
      PARAMETER (AZERO = 0.00 D00, ONE = 1.00 D00)
      PARAMETER (MXQN=8, MXAQN=MXQN*(MXQN+1)/2, MXAQNS=MXAQN*MXAQN)
#include "lwork.par"
C
      LOGICAL PATH1, CROSS, DORDER(2), DHOVEC, DHTVEC, DMXVEC,
     &        PQSYM, DTEST, SEGCON, TPRI34, TCON34
      LOGICAL TKTIME
      LOGICAL DZER
      LOGICAL IFIRST,IALL,XCOMP,YCOMP,ZCOMP
C
      DIMENSION IXDER(6), IYDER(6), IZDER(6), JODD1(3),
     &          ITRI1(0:18), ITRI2(0:18),
     &          JODDIF(27), ITADD(27), IUADD(27), IVADD(27),
     &          FACTOR(27), IOFFHC(27), IOFFCC(27), NRCCPP(27),
     &          IDHO(2,2), IDHT(3,3,2), IDMX(3,3,2,2)
      DIMENSION WORK1(LWORK1)
C
      COMMON /CWORK2/ WK2LOW, WORK2(LWORK2), WK2HGH
      COMMON /CWORK3/ WK3LOW, WORK3(LWORK3), WK3HGH
      COMMON /CC2INF/ KHKT12, KHKT34, KH1234,
     &                NORB3, NORB4, NORB12, NORB34, NO1234,
     &                TPRI34, TCON34,
     &                IPQ0X, IPQ0Y, IPQ0Z, INCRMT, INCRMU, INCRMV,
     &                ISTRET, ISTREU, ISTREV, LVAL34, MVAL34, NVAL34,
     &                NCCPP, NUC3, NUC4, NUC34, NSET3, NSET4,
     &                IADDPV, ISTRCF, IOFFVC, IODALL(MXAQN**2), PQSYM,
     &                ICMP34, IPATH, PATH1, MAXDER, CROSS, DTEST,
     &                SEGCON, IPRINT
      COMMON /PRIVEC/ NPRM12(MXAOSQ), NPRM34(MXAOSQ),
     &                LSTP12(MXAOSQ), LSTP34(MXAOSQ),
     &                LSTO12(MXAOSQ), LSTO34(MXAOSQ),
     &                LASTP(MXAOSQ),  LASTO(MXAOSQ)
      COMMON /INTADR/ IWKAO, IWKSO, IWKHHS, IWK1HH, IWK1HC, IWKLST
      COMMON /CCFCOM/ CONT1 (MXCONT*MXAOVC), CONT2 (MXCONT*MXAOVC),
     &                CONT3 (MXCONT*MXAOVC), CONT4 (MXCONT*MXAOVC),
     &                CONTT1(MXCONT*MXAOVC), CONTT2(MXCONT*MXAOVC),
     &                CONTT3(MXCONT*MXAOVC), CONTT4(MXCONT*MXAOVC),
     &                NUC1X (MXAOVC),        NUC2X (MXAOVC),
     &                NUC3X (MXAOVC),        NUC4X (MXAOVC),
     &                NRC1X (MXAOVC),        NRC2X (MXAOVC),
     &                NRC3X (MXAOVC),        NRC4X (MXAOVC)
      COMMON /ODCADR/ IE1X00, IE1X10, IE1X01, IE1X20, IE1X11, IE1X02,
     &                IE1Y00, IE1Y10, IE1Y01, IE1Y20, IE1Y11, IE1Y02,
     &                IE1Z00, IE1Z10, IE1Z01, IE1Z20, IE1Z11, IE1Z02,
     &                IE2X00, IE2X10, IE2X01, IE2X20, IE2X11, IE2X02,
     &                IE2Y00, IE2Y10, IE2Y01, IE2Y20, IE2Y11, IE2Y02,
     &                IE2Z00, IE2Z10, IE2Z01, IE2Z20, IE2Z11, IE2Z02,
     &                IELAST, ILST12
      COMMON /DERZER/ FZERO, DZER, IZERO
      COMMON /DHCINF/ IDHC(10), NDHC(10)
      COMMON /DHODIR/ DHOVEC(18)
      COMMON /DHOADR/ IHOVEC(18)
      COMMON /DHOFAC/ FHOVEC(18)
      COMMON /DHTDIR/ DHTVEC(9)
      COMMON /DHTADR/ IHTVEC(9)
      COMMON /DHTFAC/ FHTVEC(9)
      COMMON /DMXDIR/ DMXVEC(36)
      COMMON /DMXADR/ IMXVEC(36)
      COMMON /DMXFAC/ FMXVEC(36)
      COMMON/INT2H/NCOOR,JODDIF,ITADD,IUADD,IVADD,IOFFCC,FACTOR,
     &             IEXADR, IEYADR, IEZADR, NWORK, IADDCC, NRCCPP,
     &             IOFFHC
      COMMON/INT2H1/IXADD(3),IYADD(3),IZADD(3)
      COMMON/XYZDIF/XDIFF1,YDIFF1,ZDIFF1,XDIFF2,YDIFF2,ZDIFF2
      COMMON/SCD/SIGNCD
C
      DATA ITRI1 /0,1,3,6,10,15,21,28,36,45,55,66,78,91,105,
     &            120,136,153,171/
     &     ITRI2 /0,1,4,10,20,35,56,84,120,165,220,286,364,455,
     &            560,680,816,969,1140/
      DATA IXDER /0,1,1,2,2,2/
     &     IYDER /0,1,0,2,1,0/
     &     IZDER /0,0,1,0,1,2/
      DATA IDHO /3,0,  12,6/
C
      IHCADR(I,J,K) = NCCPP*(ITRI2(I+J+K) + ITRI1(J+K) + K)
C
      DATA IDHT / 1, 2, 3, 4, 5, 6, 7, 8, 9,
     &            1, 4, 7, 2, 5, 8, 3, 6, 9/
C
      DATA IDMX /19, 22, 25, 20, 23, 26, 21, 24, 27,
     &           28, 31, 34, 29, 32, 35, 30, 33, 36,
     &            1,  2,  3,  4,  5,  6,  7,  8,  9,
     &           10, 11, 12, 13, 14, 15, 16, 17, 18/
C
      IBTAND(I,J) = AND(I,J)
      IBTOR(I,J)  = OR(I,J)
      IBTSHL(I,J) = ISHFT(I,J)
      IBTSHR(I,J) = ISHFT(I,-J)
      IBTXOR(I,J) = XOR(I,J)
C
      NHCCMP=0
      DO 200 ICMP12=1,KHKT12
       JODALL=IODALL(ICMP12)
       DO 210 ICOOR=1,3
        IF (JODALL.EQ.JODDIF(ICOOR)) NHCCMP=NHCCMP+1
  210  CONTINUE
  200 CONTINUE
      IF(NHCCMP.EQ.0)RETURN
      NWORKP=NHCCMP*NCCPP
C
C   PRIMITIVE INTEGRALS 
C
      CALL ZERO(WORK1(IWKLST+1),NWORKP)
      MAXT=LVAL34
      MAXU=MVAL34
      MAXV=NVAL34
      MINT=IBTAND(MAXT,INCRMT - 1)
      MINU=IBTAND(MAXU,INCRMU - 1)
      MINV=IBTAND(MAXV,INCRMV - 1)
C
      IWORK0=IWKLST
C
      DO 600 ICOOR=1,3
C
       IOFFEX=IXADD(ICOOR)+ISTRET
       IOFFEY=IYADD(ICOOR)+ISTREU
       IOFFEZ=IZADD(ICOOR)+ISTREV
C
C change maxv,maxu,maxt
C
       DO 400 IV=MINV,MAXV+IVADD(ICOOR),INCRMV
        JSTREV=IOFFEZ+IV*NUC34
        DO 410 IU=MINU,MAXU+IUADD(ICOOR),INCRMU
         JSTREU=IOFFEY+IU*NUC34
         DO 420 IT=MINT,MAXT+ITADD(ICOOR),INCRMT
          JSTRET=IOFFEX+IT*NUC34
Cparallelization note: no synchronization problems
Cparallelization note: no synchronization problems
          DO 500 I=1,NUC34
           ECOEFI=WORK2(JSTRET+I)
     &           *WORK2(JSTREU+I)
     &           *WORK2(JSTREV+I)
           IJ=I
           DO 510 J=1,NORB12
            WORK3(IJ)=ECOEFI
            IJ=IJ+NUC34
  510      CONTINUE
  500     CONTINUE
          IODDIF=JODDIF(ICOOR)
          INTHC0=IOFFHC(ICOOR)+IHCADR(IT,IU,IV)
          IADHC0=NRCCPP(ICOOR)
          IWORK=IWORK0
Cparallelization note: no synchronization problems
Cparallelization note: no synchronization problems
           DO 610 I = 1,KHKT12
            IF (IODALL(I).EQ.IODDIF) THEN
             INTHC=INTHC0+(I-1)*IADHC0
*VOCL LOOP,NOVREC
CDIR$ IVDEP
             DO 620 J=1,NCCPP
              WORK1(IWORK+J)= WORK1(IWORK+J)
     *                +WORK3(J)*WORK1(INTHC+J)
  620        CONTINUE
             IWORK=IWORK+NCCPP
            END IF
  610      CONTINUE
  420     CONTINUE
  410    CONTINUE
  400   CONTINUE
        IWORK0=IWORK
  600  CONTINUE
C
C Contracted Integrals 
C
      CALL CNTINN(WORK1(IWKLST+1),WORK1(IWKLST+NWORKP+1),
     &            ISTRCF,IOFFVC,WORK3(1),
     &            NSET4,NSET3,NUC4,NUC3,NORB4,NORB3,
     &            NHCCMP*NORB12,TPRI34,TCON34)
C
C MULTIPLY BY FACTOR AND DISTRIBUTE
C
      IF(PATH1) THEN
       XDIFF=XDIFF2
       YDIFF=YDIFF2
       ZDIFF=ZDIFF2
       INTCCX1=IOFFCC(1)+(ICMP34-1)*NO1234
       INTCCY1=IOFFCC(2)+(ICMP34-1)*NO1234
       INTCCZ1=IOFFCC(3)+(ICMP34-1)*NO1234
       INTCCX2=IOFFCC(4)+(ICMP34-1)*NO1234
       INTCCY2=IOFFCC(5)+(ICMP34-1)*NO1234
       INTCCZ2=IOFFCC(6)+(ICMP34-1)*NO1234
       IWORKX=IWKLST+NWORKP
       IWORKY=IWORKX+KHKT12*NO1234
       IWORKZ=IWORKY+KHKT12*NO1234
       DO 810 ICMP12=1,KHKT12
        DO 820 J=1,NO1234
         WORK1(INTCCX1+J)=WORK1(INTCCX1+J)
     &        + YDIFF*WORK1(IWORKZ+J)-ZDIFF*WORK1(IWORKY+J)
         WORK1(INTCCY1+J)=WORK1(INTCCY1+J)
     &        + ZDIFF*WORK1(IWORKX+J)-XDIFF*WORK1(IWORKZ+J)
         WORK1(INTCCZ1+J)=WORK1(INTCCZ1+J)
     &        + XDIFF*WORK1(IWORKY+J)-YDIFF*WORK1(IWORKX+J)
         WORK1(INTCCX2+J)=WORK1(INTCCX2+J)
     &        + SIGNCD*(YDIFF*WORK1(IWORKZ+J)-ZDIFF*WORK1(IWORKY+J))
         WORK1(INTCCY2+J)=WORK1(INTCCY2+J)
     &        + SIGNCD*(ZDIFF*WORK1(IWORKX+J)-XDIFF*WORK1(IWORKZ+J))
         WORK1(INTCCZ2+J)=WORK1(INTCCZ2+J)
     &        + SIGNCD*(XDIFF*WORK1(IWORKY+J)-YDIFF*WORK1(IWORKX+J))
820     CONTINUE
        IWORKX=IWORKX+NO1234
        IWORKY=IWORKY+NO1234
        IWORKZ=IWORKZ+NO1234
        INTCCX1=INTCCX1+NO1234*KHKT34
        INTCCY1=INTCCY1+NO1234*KHKT34
        INTCCZ1=INTCCZ1+NO1234*KHKT34
        INTCCX2=INTCCX2+NO1234*KHKT34
        INTCCY2=INTCCY2+NO1234*KHKT34
        INTCCZ2=INTCCZ2+NO1234*KHKT34
810    CONTINUE
800    CONTINUE 
      ELSE
       XDIFF=XDIFF1
       YDIFF=YDIFF1
       ZDIFF=ZDIFF1
       IADDOF=(ICMP34-1)*KHKT12*NO1234+1
       ISTRCCX1=IOFFCC(1)+IADDOF
       ISTRCCY1=IOFFCC(2)+IADDOF
       ISTRCCZ1=IOFFCC(3)+IADDOF
       ISTRCCX2=IOFFCC(4)+IADDOF
       ISTRCCY2=IOFFCC(5)+IADDOF
       ISTRCCZ2=IOFFCC(6)+IADDOF
       IWORKX=IWKLST+NWORKP
       IWORKY=IWORKX+KHKT12*NO1234
       IWORKZ=IWORKY+KHKT12*NO1234
       DO 815 ICMP12=1,KHKT12 
        INTCCX10=ISTRCCX1+(ICMP12-1)*NO1234
        INTCCY10=ISTRCCY1+(ICMP12-1)*NO1234
        INTCCZ10=ISTRCCZ1+(ICMP12-1)*NO1234
        INTCCX20=ISTRCCX2+(ICMP12-1)*NO1234
        INTCCY20=ISTRCCY2+(ICMP12-1)*NO1234
        INTCCZ20=ISTRCCZ2+(ICMP12-1)*NO1234
        DO 825 I=1,NORB12
         INTCCX1=INTCCX10
         INTCCY1=INTCCY10
         INTCCZ1=INTCCZ10
         INTCCX2=INTCCX20
         INTCCY2=INTCCY20
         INTCCZ2=INTCCZ20
         DO 835 J=1,NORB34
          WORK1(INTCCX1)=WORK1(INTCCX1)
     &        + YDIFF*WORK1(IWORKZ+J)-ZDIFF*WORK1(IWORKY+J)
          WORK1(INTCCY1)=WORK1(INTCCY1)
     &        + ZDIFF*WORK1(IWORKX+J)-XDIFF*WORK1(IWORKZ+J)
          WORK1(INTCCZ1)=WORK1(INTCCZ1)
     &        + XDIFF*WORK1(IWORKY+J)-YDIFF*WORK1(IWORKX+J)
          WORK1(INTCCX2)=WORK1(INTCCX2)
     &        + SIGNCD*(YDIFF*WORK1(IWORKZ+J)-ZDIFF*WORK1(IWORKY+J))
          WORK1(INTCCY2)=WORK1(INTCCY2)
     &        + SIGNCD*(ZDIFF*WORK1(IWORKX+J)-XDIFF*WORK1(IWORKZ+J))
          WORK1(INTCCZ2)=WORK1(INTCCZ2)
     &        + SIGNCD*(XDIFF*WORK1(IWORKY+J)-YDIFF*WORK1(IWORKX+J))
          INTCCX1=INTCCX1+NORB12
          INTCCY1=INTCCY1+NORB12
          INTCCZ1=INTCCZ1+NORB12
          INTCCX2=INTCCX2+NORB12
          INTCCY2=INTCCY2+NORB12
          INTCCZ2=INTCCZ2+NORB12
835      CONTINUE
         INTCCX10=INTCCX10+1
         INTCCY10=INTCCY10+1
         INTCCZ10=INTCCZ10+1
         INTCCX20=INTCCX20+1
         INTCCY20=INTCCY20+1
         INTCCZ20=INTCCZ20+1
         IWORKX=IWORKX+NORB34
         IWORKY=IWORKY+NORB34
         IWORKZ=IWORKZ+NORB34
825     CONTINUE
815    CONTINUE
      ENDIF
      RETURN
      END
