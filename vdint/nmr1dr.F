      SUBROUTINE NMR1DR(PROPTY,MAXDIF,FOCK,IDATOM,IDCOOR,
     &                  DIFINT,NODC,NODV,DIFDIP,LMAX,WORK1,
     &                  LWORK1,MSZ,CSH,CSHSCF,NCOORD)
C
C THIS PROGRAM CALCULATES ONE-ELECTRON INTEGRALS NEEDED
C FOR CALCULATION OF SECOND-ORDER MAGNETIC PROPERTIES.
C THE ALGORITHM IS BASED ON THE MCMURCHIE/DAVIDSON SCHEME
C (SEE J. COMP. PHYS. 26, 218 (1978) AND HAS BEEN MODIFIED
C TO INCLUDE INTEGRAL DERIVATIVES WITH RESPECT TO MAGNETIC
C FIELDS WITHIN THE GIAO APPROACH (J. GAUSS, UNPUBLISHED
C FORMULAS).
C
CEND    
C
C UNIVERSITY OF KARLSRUHE,   AUGUST 91   J. GAUSS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER AND,OR,XOR
      LOGICAL LAEQB,LDIAG,ONECEN,FOCK,DIFINT,NODC,NODV,
     &        DIFDIP,DIFQUA,PROPTY,FULMAT
      LOGICAL SCF,NONHF,ELECT,MAGNET,GEOM,MAGNET2,GIAO
      LOGICAL DCORD,DCORGD,NOORBT,DOPERT
      LOGICAL IDFGH
      LOGICAL YESNO
      LOGICAL SHARE
      LOGICAL XCOMP,YCOMP,ZCOMP,IFIRST,IALL
      LOGICAL JSO,JFC,JSD
      LOGICAL GEERTSEN
      LOGICAL CCSDEH
      CHARACTER NAMEX*6
      CHARACTER*80 FNAME
      INTEGER DIRPRD
      DOUBLE PRECISION MSZ,MSZSCF
C
#include "mxcent.par"
#include "baslims.par"
      PARAMETER (LUCMD = 5, LUPRI = 6)
      PARAMETER (AZERO = 0.00 D00, ONE = 1.00 D00,
     &           THREE = 3.00 D00, THIRD = ONE/THREE)
      PARAMETER (PI = 3.14159 26535 89793 D00)
      PARAMETER (MXQN=8, MXAQN=MXQN*(MXQN+1)/2,
     &           MXAQNS=MXAQN*MXAQN*MXCONT*MXCONT)
#include "lwork.par"
      PARAMETER (LWKRLM = LWORK3 - 8020)
C
      DIMENSION MSZ(3,3),MSZSCF(3,3),CSH(3,NCOORD),CSHSCF(3,NCOORD)
      DIMENSION KNDAO(8),IP(8)
      DIMENSION FACINT(MXCENT),
     &          CORCX(MXCENT), CORCY(MXCENT), CORCZ(MXCENT)
      DIMENSION WORK1(LWORK1)
C
      COMMON /CWORK3/ WK3LOW, SHGTF, AHGTF((MXCENT+1)*(2*MXQN+1)**3)
CSSSS                 RLMCOF(LWKRLM), WK3HGH
      COMMON /ADER/ ADER0 (MXAQNS)
      COMMON /POINTER/IS0000, IS000X, IS000Y, IS000Z,
     &                IS00XX, IS00XY, IS00XZ, IS00YY,
     &                IS00YZ, IS00ZZ, IT0000, IT000X,
     &                IT000Y, IT000Z, IT00XX, IT00XY,
     &                IT00XZ, IT00YY, IT00YZ, IT00ZZ,
     &                IL0000, IL000X, IL000Y, IL000Z,
     &                IL00XX, IL00XY, IL00XZ, IL00YX,
     &                IL00YY, IL00YZ, IL00ZX, IL00ZY,
     &                IL00ZZ,
     &                IA0000, IA0X00, IA0Y00, IA0Z00,
     &                IAXX00, IAXY00, IAXZ00, IAYY00,
     &                IAYZ00, IAZZ00, IA000X, IA000Y,
     &                IA000Z, IA00XX, IA00XY, IA00XZ,
     &                IA00YY, IA00YZ, IA00ZZ, IA0X0X,
     &                IA0X0Y, IA0X0Z, IA0Y0X, IA0Y0Y,
     &                IA0Y0Z, IA0Z0X, IA0Z0Y, IA0Z0Z
      COMMON /POINT2/ IQ00XX, IQ00XY, IQ00XZ, IQ00YY,
     &                IQ00YZ, IQ00ZZ
#include "odcs.com"
      COMMON /SCRPOIN/ISCR1(20),ISCR2(28)
      COMMON/DENPOIN/KDEN,KFOC
      COMMON/DSCFPOI/KDENSCF
      COMMON /LMNS/ LVALUA(MXAQN), MVALUA(MXAQN), NVALUA(MXAQN),
     &              LVALUB(MXAQN), MVALUB(MXAQN), NVALUB(MXAQN)
      COMMON/CCOM/THRS,NHTYP,IBX
      COMMON /NUCLEIi/ NOORBT(MXCENT),
     &                NUCIND, NUCDEP, NUCPRE(MXCENT), NUCNUM(MXCENT,8),
     &                NUCDEG(MXCENT), ISTBNU(MXCENT), NDCORD,
     &                NDCOOR(MXCOOR), NTRACO, NROTCO, ITRACO(3),
     &                IROTCO(3),
     &                NATOMS, NFLOAT,
     &                IPTGDV(3*MXCENT),
     &                NGDVEC(8), IGDVEC(8)
      COMMON /NUCLEI/ CHARGE(MXCENT), CORD(MXCENT,3),
     &                DCORD(MXCENT,3),DCORGD(MXCENT,3),
     &                DOPERT(0:3*MXCENT)
      COMMON /NUCLEC/ NAMEX(MXCOOR)
      COMMON /PRIMIT/ PRIEXP(MXPRIM), PRICCF(MXPRIM,MXAOVC),
     &                PRICRX(MXPRIM), PRICRY(MXPRIM), PRICRZ(MXPRIM)
      COMMON /SHELLSi/ KMAX,
     &                NHKT(MXSHEL),   KHKT(MXSHEL), MHKT(MXSHEL),
     &                ISTBAO(MXSHEL), NUCO(MXSHEL), JSTRT(MXSHEL),
     &                NSTRT(MXSHEL),  MST(MXSHEL),  NCENT(MXSHEL),
     &                NRCO(MXSHEL), NUMCF(MXSHEL),
     &                NBCH(MXSHEL),   KSTRT(MXSHEL)
      COMMON /SHELLS/ CENT(MXSHEL,3), SHARE(MXSHEL)
      COMMON /SYMMET/ FMULT(0:7), PT(0:7),
     &                MAXLOP, MAXLOT, MULT(0:7), ISYTYP(3),
     &                ITYPE(8,36), NPARSU(8), NPAR(8), NAOS(8),
     &                NPARNU(8,8), IPTSYM(MXCORB,0:7),
     &                IPTCNT(3*MXCENT,0:7), NCRREP(0:7),
     &                IPTCOR(MXCENT*3), NAXREP(0:7), IPTAX(3),
     &                IPTXYZ(3,0:7)
      COMMON/SYMIND/INDFA(8,10), INDFB(8,10), ISOFRA(8), ISOFRB(8)
      COMMON/HRUNIT/LUONEL, LUINTA, LUSUPM, LUDASP, LUSOL
      COMMON/CENTC/SIGNCX(MXCENT), SIGNCY(MXCENT), SIGNCZ(MXCENT),
     &             NCENTC(MXCENT), JSYMC(MXCENT),  JCENTC(MXCENT),
     &             ICXVEC(MXCENT), ICYVEC(MXCENT), ICZVEC(MXCENT)
C
      COMMON/METHOD/IUHF,SCF,NONHF
      COMMON/PROP/ELECT,MAGNET,GEOM,MAGNET2,GIAO
      COMMON/BASSYM/NBAS(8),NBASIS,NBASSQ,NBASTT
      COMMON/BASSPH/NBAS5(8),NBASIS5,NBASSQ5,NBASTT5
      COMMON/LSYM/NLENQ(8),NLENT(8)
      COMMON/LSYMSPH/NLENQ5(8),NLENT5(8)
      COMMON/GENCON/NRCA,NRCB,CONTA(MXCONT),CONTB(MXCONT)
      COMMON/PERT/NTPERT,NPERT(8),IPERT(8),IXPERT,IYPERT,IZPERT,
     &            IYZPERT,IXZPERT,IXYPERT
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
      COMMON/IPRI/IPRINT
      COMMON/DFGH/IDFGH
      COMMON/TREATP/IFIRST,IALL,XCOMP,YCOMP,ZCOMP,IBF,IBL
      COMMON/JNMR/JSO,JFC,JSD
      COMMON/DIAMAG/GEERTSEN
      COMMON/EH/CCSDEH
C
      DATA ONEM,TWO /-1.D0,2.D0/
      DATA CONVERT /26.62566914D+00/
C
      IBTAND(I,J)=AND(I,J)
      IBTOR(I,J)=OR(I,J)
      IBTXOR(I,J)=XOR(I,J)
C
C IF THE PERTURBATIONS ARE TREATED SEQUENTIALLY, CHECK IFIRST
C
      IF(.NOT.IFIRST) RETURN
C
      TOLS=THRS*THRS
      TOLOG=-LOG(TOLS)
C
      NNBASX=NBASIS*(NBASIS+1)/2
C
C ZERO MAGNETIC SUSZEPTIBILITY AND CHEMICAL SHIFT TENSOR
C
      CALL ZERO(MSZ,9)
      CALL ZERO(MSZSCF,9)
      CALL ZERO(CSH,3*NCOORD)
      CALL ZERO(CSHSCF,3*NCOORD)
C
C MEMORY FOR DENSITY MATRICES AND TRANSFORMATION STEP
C
      IF(.NOT.SCF) THEN
       KDENSCF=1
       KDEN=KDENSCF+NBASIS*(NBASIS+1)/2
      ELSE
       KDEN=1
      ENDIF
      KFOC=KDEN+NBASIS*(NBASIS+1)/2
      KSTART=KFOC+NBASIS*(NBASIS+1)/2
      KCMO=KSTART
      KFT=KCMO+NBASIS*NBASIS
      KDV=KFT+NBASIS*NBASIS
      IF(.NOT.SCF) THEN
       KDSOSCF=KDV+NBASIS*NBASIS
       KDSO=KDSOSCF+NBASIS*NBASIS
      ELSE
       KDSO=KDV+NBASIS*NBASIS
      ENDIF
      KFSO=KDSO+NBASIS*NBASIS
      KSCR=KFSO+NBASIS*NBASIS
C
C SET UP TOTAL DENSITY AND FOCK MATRICES IN AO BASIS
C
      IF(CCSDEH) THEN
       mxcor=(lwork1-kscr+1)*iintfp
       call dmpden(work1(kscr),mxcor,iuhf)
      ENDIF
C
      CALL DSOFSO(WORK1(KCMO),WORK1(KFT),WORK1(KDV),
     &            WORK1(KDSO),WORK1(KDSOSCF),WORK1(KFSO),
     &            WORK1(KSCR),.NOT.SCF,.FALSE.)
C
C CALCULATE TOTAL DENSITY MATRIX IN PRIMITIVE AO-BASIS
C
      CALL DSYM1(WORK1(KDEN),WORK1(KDENSCF),WORK1(KFOC),
     &           WORK1(KDSO),WORK1(KDSOSCF),WORK1(KFSO),
     &           NBASIS,.NOT.SCF)
C
C MEMORY FOR OVERLAP DERIVATIVE INTEGRALS
C
      KSDAOX=KSTART 
      KSDAOY=KSDAOX+NLENT(IYZPERT)
      KSDAOZ=KSDAOY+NLENT(IXZPERT)
C
C MEMORY FOR FOCK MATRIX DERIVATIVES
C
      KFDAOX=KSDAOZ+NLENT(IXYPERT)
      KFDAOY=KFDAOX+NLENT(IYZPERT)
      KFDAOZ=KFDAOY+NLENT(IXZPERT)
      KSTART=KFDAOZ+NLENT(IXYPERT)
C
      IF(GEERTSEN) THEN
       KPDAOX=KSTART
       KPDAOY=KPDAOX+NLENT(IYPERT)
       KPDAOZ=KPDAOY+NLENT(IZPERT)
       KLDAOX=KPDAOZ+NLENT(IZPERT)
       KLDAOY=KLDAOX+NLENT(IXPERT)
       KLDAOZ=KLDAOY+NLENT(IYPERT)
       KSTART=KLDAOZ+NLENT(IZPERT)
      ENDIF
C
C MEMORY FOR FIRST DERIVATIVES WITH RESPECT TO NUCLEAR MAGNETIC MOMENTS
C
      KNDAO(1)=KSTART
      DO 11 IRREP=1,MAXLOP
       KNDAO(IRREP+1)=KNDAO(IRREP)+NLENT(IRREP)*NPERT(IRREP)
11    CONTINUE
      KSTART=KNDAO(MAXLOP+1)+NLENT(MAXLOP+1)*NPERT(IRREP)

C
C ZERO OUT THE MEMORY FOR ALL DERIVATIVES
C
      CALL ZERO(WORK1(KSDAOX),KSTART-KSDAOX)
C
      CALL IZERO(ISOFRA, 8)
C
C  LOOP OVER FIRST SHELL : ISHELA
C
      IDENA = 0
C
      DO 100 ISHELA = 1,KMAX
C
C NHKTA: ANGULAR MOMENTUM OF ISHELA 1=S, 2=P, ...
C
       NHKTA = NHKT(ISHELA)
C
C KHKTA: NUMBER OF DIFFERENT FNCTIONS PER PRIMITIVE 1 FOR S, 3 FOR P, ...
C 
       KHKTA = KHKT(ISHELA)
C
C MHKTA:
C
       MHKTA = MHKT(ISHELA)
C
C ROUTINE LMNVAL DETERMINES THE VALUES: LVALUA,MVALUA, AND NVALUA
C WHICH GIVE THE EXPONENTS l,m,n FOR THE CARTESIAN GAUSSIANS
C
       CALL LMNVAL(NHKTA,MHKTA,LVALUA,MVALUA,NVALUA)
C
C NCENTA: NUMBER OF THE ATOM WHICH CORRESPINDS TO ISHELA
C         (WITHIN THE LIST OF NON-SYMMETRY EQUIVALENT ATOMS)
C
       NCENTA = NCENT(ISHELA)
C
C ICENTA: THE NUMBER OF THE ATOM WHICH CORRESPONDS TO ISHELA 
C         WITHIN THE LISTS OF ALL ATOMS CONSIDERING THE FIRST
C         MEMBER OF ALL SYMMETRY EQUIVALENT SHELLS ISHELA
C
       ICENTA = NUCNUM(NCENTA,1)
C
C  MULA: BITMAP SHOWING UNDER WHICH OPEREATIONS ISHELA IS
C  REDUNDANT:   1 --> FIRST OPERATION, 2 --> SECOND OPERATION,
C  3 --> FIRST AND SECOND OPERATIONS, 4 --> THIRD OPERATION,
C  5 --> FIRST AND THIRD OPERATIONS, 6 --> SECOND AND THIRD
C  OPERATIONS, 7 --> ALL OPERATIONS
C
       MULA   = ISTBAO(ISHELA)
C
C MULTA:  NUMBER OF SYMMETRY EQUIVALENT SHELLS WHICH BELONG TO ISHELA
C
       MULTA  = MULT(MULA)
C
C NUCA: NUMBER OF PRIMITIVES
C
       NUCA   = NUCO(ISHELA)
C
C NRCA: NUMBER OF CONTRACTIONS
C
       NRCA   = NRCO(ISHELA)
C
C NUMCFA: .... 
C
       NUMCFA = NUMCF(ISHELA)
C
C JSTA: OFFSET IN LIST OF PRIMITIVES FOR ISHELA
C
       JSTA   = JSTRT(ISHELA)
C
C CORAX, CORAY, CORAY: COORDINATES OF THE CENTER OF ISHELA
C
       CORAX  = CENT(ISHELA,1)
       CORAY  = CENT(ISHELA,2)
       CORAZ  = CENT(ISHELA,3)
C
       IDENB0 = 0
C
C        Compute symmetry integral pointers for contributions
C        from this block.  Note that at present this assumes all
C        components from a shell are included.
C
       DO 600 I = 1, 8
        ISOFRB(I) = 0
        DO 610 J = 1, 10
         INDFA(I,J) = -10 000 000
610     CONTINUE
600    CONTINUE
C
       DO 620 NA = 1, KHKTA
        DO 630 IREP = 0, MAXLOP
         IF (IBTAND(MULA,IBTXOR(IREP,ITYPE(NHKTA,NA))).EQ.0) THEN
          ISOFRA(IREP+1)    = ISOFRA(IREP+1) + NRCA
          INDFA (IREP+1,NA) = ISOFRA(IREP+1)
         END IF
630     CONTINUE
620    CONTINUE
C
C LOOP OVER SECOND SHELL : ISHELB 
C
C THE LOOP IS TRIANGULAR, I.E ISHELA GE ISHELB
C
       DO 110 ISHELB = 1,ISHELA
C
C IF SHELLS ARE EQUAL SET LAEQB TO TRUE 
C
        LAEQB = ISHELA .EQ. ISHELB
C
        NHKTB = NHKT(ISHELB)
        KHKTB = KHKT(ISHELB)
        MHKTB = MHKT(ISHELB)
        CALL LMNVAL(NHKTB,MHKTB,LVALUB,MVALUB,NVALUB)
        NCENTB = NCENT(ISHELB)
C
C NHKTAB: THE SUM OF ANGULAR MOMENTUMS OF SHELL A AND B ( OF COURSE + 2) 
C
        NHKTAB = NHKTA + NHKTB
        MULB   = ISTBAO(ISHELB)
        MULTB  = MULT(MULB)
        NUCB   = NUCO(ISHELB)
        NRCB   = NRCO(ISHELB)
        NUMCFB = NUMCF(ISHELB)
        JSTB   = JSTRT(ISHELB)
        CORBX0 = CENT(ISHELB,1)
        CORBY0 = CENT(ISHELB,2)
        CORBZ0 = CENT(ISHELB,3)
C
C THE SIZE OF THE ARRAY OF PRIMITIVES OF ISHELA TIMES PIMITIVES ISHELB
C
        KHKTAB = KHKTA*KHKTB
C
C MAB: THE SYMMETRY OPERATIONS UNDER WHICH AT LEAST ONE OF BOTH
C      SHELLS IS CHANGING
C
        MAB    = IBTOR(MULA,MULB)
C
C KAB: THE SYMMETRY OPERATIONS UNDER WHICH BOTH SHELLS ARE CHANGING
C
        KAB    = IBTAND(MULA,MULB)
C
C THE MULTIPLICITY FACTOR WHICH CORRESPONDS TO KAB
C
        HKAB   = FMULT(KAB)
C
C        Compute symmetry integral pointers for contributions
C        from this block.  Note that at present this assumes all
C        components from a shell are included
C
        DO 700 I = 1, 8
         DO 710 J = 1, 10
          INDFB(I,J) = -10 000 000
710      CONTINUE
700     CONTINUE
        DO 720 NB = 1, KHKTB
         DO 730 IREP = 0, MAXLOP
          IF (IBTAND(MULB,IBTXOR(IREP,ITYPE(NHKTB,NB))).EQ.0) THEN
           ISOFRB(IREP+1)    = ISOFRB(IREP+1) + NRCB
           INDFB (IREP+1,NB) = ISOFRB(IREP+1)
          END IF
730      CONTINUE
720     CONTINUE
C
C JMAX: THE MAXIMUM ANGULAR MOMENTUM NECCESARY TO CONSIDER, HOWEVER
C       ADD THE LEVEL OF DIFFERENTIATION
C
        JMAX=NHKTAB-2
        JMAX=JMAX+MAXDIF
        ISTEPU=JMAX+1
        ISTEPV=ISTEPU*ISTEPU
        NAHGTF=ISTEPU*ISTEPV
C
C NATOMC: NUMBER OF ATOMS CONSIDERED FOR NUCLEAR ATTRACTION INTEGRALS
C
        NATOMC=0
C
C LOOP OVER ALL NUCLEI CONSIDERED FOR NUCLEAR ATTRACTION 
C INTEGRALS (ONLY THOSE WHICH ARE NON-SYMMETRY EQUIVALENT)
C
        DO 120 IATOMC = 1,NUCIND
C
C MULC: BITMAP POINTING TO THE OPERATIONS UNDER WHCIH ATOM C
C       IS REDUNDANT
C
         MULC=ISTBNU(IATOMC)
C
C MABC: BITMAP POINTING TO THE OPERATIONS UNDER WHICH AT LEAST
C       ONE OF ISHELA, ISHELB, AND IATOM C IS CHANGING
C
         MABC=IBTOR(MULC,KAB)
C
C THE COORDINATES OF ATOM C
C
         CORCX0=CORD(IATOMC,1)
         CORCY0=CORD(IATOMC,2)
         CORCZ0=CORD(IATOMC,3)
C
C FACTOR CONSITING OF NEGATIVE CHARGE OF ATOM TIMES A MULTIPLICITY
C CORRESPONDING TO THE REDUNDANCIES OF A,B,C OVER THE MULTIPLICITY
C CORRESPONDINg THE REDUNDANCIES OF A AND B UNDER ALL SYMMETRY
C OPERATIONS
C 
         FACTOR=-FMULT(IBTAND(MULC,KAB))*CHARGE(IATOMC)/HKAB
C
C LOOP OVER ALL SYMMETRY OPERATIONS 
C
         DO 130 ISYMOP=0,MAXLOT
C
C IS ISYMOP IS NOT CREATING A NEW A,B,C COMBINATION SKIP
C
          IF(IBTAND(ISYMOP,MABC).EQ.0) THEN
C
C INCREMENT NATOMC
C
           NATOMC=NATOMC+1
C
C JSYMC: SYMMETRY OPERATIONS WHICH CREATED ATOM NATOMC
C
           JSYMC(NATOMC)=ISYMOP
C
C JCENTC: SET OF SYMMETRY EQUIVALENT ATOMS TO WHICH NATOMC BELONGS
C
           JCENTC(NATOMC)=IATOMC
C
C SIGNCX, ... DETERMINE WHETHER THE COORDINATES CHANGE SIGN UNDER
C             THE SYMMETRY OPERATION
C
           SIGNCX(NATOMC)=PT(IBTAND(ISYTYP(1),ISYMOP))
           SIGNCY(NATOMC)=PT(IBTAND(ISYTYP(2),ISYMOP))
           SIGNCZ(NATOMC)=PT(IBTAND(ISYTYP(3),ISYMOP))
C
C COORDINATES FOR NATOMC CREATED FROM THOSE FOR ATOM C
C
           CORCX(NATOMC)=SIGNCX(NATOMC)*CORCX0
           CORCY(NATOMC)=SIGNCY(NATOMC)*CORCY0
           CORCZ(NATOMC)=SIGNCZ(NATOMC)*CORCZ0
C
C FACTOR FOR NATOMC
C
           FACINT(NATOMC)=FACTOR
C
C NUMBER OF ATOM NATOMC IN THE LIST OF ALL ATOMS
C
           NCENTC(NATOMC)=NUCNUM(IATOMC,ISYMOP+1)
C
C ICXVEC, ... 
           ICXVEC(NATOMC)=IPTCNT(3*IATOMC-2,0)
           ICYVEC(NATOMC)=IPTCNT(3*IATOMC-1,0)
           ICZVEC(NATOMC)=IPTCNT(3*IATOMC  ,0)
          ENDIF
  130    CONTINUE
  120   CONTINUE
C
C  LOOP OVER SYMMETRY OPERATIONS WITH RESPECT TO
C  THE SECOND SHELL
C
        IDENB=IDENB0-KHKTB*NRCB
C
        DO 200 ISYMOP=0,MAXLOT
C
C CONSIDER THIS SYMMETRY OPERATION ONLY
C IF IT PROVIDES A NEW SHELL
C SKIP IF REDUNDANT
C
         IF(IBTAND(ISYMOP,MAB).NE.0) GO TO 200
C
         IDENB=IDENB+KHKTB*NRCB
C
C LDIAG IS SET TO TRUE IF BOTH SHELLS ARE IDENTICAL ( ONLY
C TRUE IF ISYMOP IS 0 AND LAEQB IS TRUE
C
         LDIAG=LAEQB
         IF(ISYMOP.NE.0)LDIAG=.FALSE.
C
         ICENTB=NUCNUM(NCENTB,ISYMOP+1)
         ONECEN=ICENTA.EQ.ICENTB
         SIGNBX=PT(IBTAND(ISYTYP(1),ISYMOP))
         SIGNBY=PT(IBTAND(ISYTYP(2),ISYMOP))
         SIGNBZ=PT(IBTAND(ISYTYP(3),ISYMOP))
         CORBX=SIGNBX*CORBX0
         CORBY=SIGNBY*CORBY0
         CORBZ=SIGNBZ*CORBZ0
         DIFABX=CORAX-CORBX
         DIFABY=CORAY-CORBY
         DIFABZ=CORAZ-CORBZ
         DISTAB=DIFABX*DIFABX+DIFABY*DIFABY+DIFABZ*DIFABZ
C
         NHKTAP=NHKTA+2+MAXDIF
         ISTEPB=NHKTAP+NHKTB
         ISTEPA=NHKTB*ISTEPB
         NATOT= 0
         NINT=KHKTAB*NRCA*NRCB
         IF(LDIAG)NINT=KHKTAB*(NRCA*(NRCA+1)/2)
         NINTS=NATOMC*NINT
C
C OVERLAP INTEGRALS 
C
         IS0000=KSTART-1
C
C DERIVATIVES OF OVERLAP INTEGRALS
C
         IS000X=IS0000+NINT
         IS000Y=IS000X+NINT
         IS000Z=IS000Y+NINT
C
C KE INTEGRALS
C
         IT0000=IS000Z+NINT 
C
C FIRST DERIVATIVES OF ONE-ELECTRON INTEGRALS
C WITH RESPECT TO MAGNETIC FIELD
C
         IL000X=IT0000+NINT
         IL000Y=IL000X+NINT
         IL000Z=IL000Y+NINT
         ITOP=IL000Z+NINT
         IF(.NOT.GIAO) THEN
          IL00XX=ITOP
          IL00XY=IL00XX+NINT
          IL00XZ=IL00XY+NINT
          IL00YY=IL00XZ+NINT
          IL00YZ=IL00YY+NINT
          IL00ZZ=IL00YZ+NINT
          ITOP=IL00ZZ+NINT
         ENDIF
C
C
C FIRST DERIVATIVES OF ONE-ELECTRON INTEGRALS
C WITH RESPECT TO NUCLEAR MAGNETIC MOMENTS
C
         IA000X=ITOP
         IA000Y=IA000X+NINTS
         IA000Z=IA000Y+NINTS
C
C SECOND DERIVATIVES OF ONE-ELECTRON INTEGRALS
C WITH RESPECT TO MAGNETIC FIELD AND NUCLEAR MOMENTS
C
         IA0X0X=IA000Z+NINTS
         IA0X0Y=IA0X0X+NINTS
         IA0X0Z=IA0X0Y+NINTS
         IA0Y0X=IA0X0Z+NINTS
         IA0Y0Y=IA0Y0X+NINTS
         IA0Y0Z=IA0Y0Y+NINTS
         IA0Z0X=IA0Y0Z+NINTS
         IA0Z0Y=IA0Z0X+NINTS
         IA0Z0Z=IA0Z0Y+NINTS
C
         ITOP=IA0Z0Z+NINTS
         NATOT=8*NINT+12*NINTS
         IF(.NOT.GIAO) NATOT=NATOT+6*NINT
         CALL ZERO(WORK1(IS0000+1),NATOT)
C
C ALLOCATE MEMORY FOR SCRATCH ARRAYS
C
         ISNUM=20
         JSNUM=28
         DO 298 INUM=1,ISNUM
          ISCR1(INUM)=ITOP+(INUM-1)*KHKTA*KHKTB
298      CONTINUE
         ITOP2=ITOP+ISNUM*KHKTA*KHKTB
         DO 299 INUM=1,JSNUM
          ISCR2(INUM)=ITOP2+(INUM-1)*KHKTA*KHKTB*NATOMC
299      CONTINUE
         NSCR=(ISNUM+JSNUM*NATOMC)*KHKTA*KHKTB
C
C LOOP OVER PRIMITIVE ORBITALS
C
         DO 300 IPRIMA = 1,NUCA
          JPRIMA = JSTA + IPRIMA
          DO 301 IRCA = 1,NRCA
           CONTA(IRCA) = PRICCF(JPRIMA,IRCA)
301       CONTINUE
          EXPA = PRIEXP(JPRIMA)
          DO 300 IPRIMB = 1,NUCB
           JPRIMB = JSTB + IPRIMB
           DO 302 IRCB = 1,NRCB
            CONTB(IRCB) = PRICCF(JPRIMB,IRCB)
302        CONTINUE
           EXPB = PRIEXP(JPRIMB)
           EXPP = EXPA + EXPB 
           EXPPI = ONE/EXPP
           TWOG=EXPPI/TWO
C
C              Calculate and test square root factor
C
           EXPABQ = EXPA*EXPB*DISTAB*EXPPI
           IF (EXPABQ.GT.TOLOG) GO TO 300
           SAAB = EXP( - EXPABQ)
           ASAAB = ABS(SAAB)
           IF (ASAAB.LT.TOLS) GO TO 300
           SAAB13 = SIGN(ASAAB**THIRD,SAAB)
C
C CALCULATE COORDINATES OF PRODUCT GAUSSIAN P
C
           EXPAPI = EXPA*EXPPI
           EXPBPI = EXPB*EXPPI
           CORPX  = EXPAPI*CORAX + EXPBPI*CORBX
           CORPY  = EXPAPI*CORAY + EXPBPI*CORBY
           CORPZ  = EXPAPI*CORAZ + EXPBPI*CORBZ
C
C OVERLAP DISTRIBUTION COEFFICIENTS:
C EXPANSION COEFFICIENTS FOR UNDIFFERENTIATED ORBITALS
C
           DIFPAX = CORPX - CORAX
           DIFPAY = CORPY - CORAY
           DIFPAZ = CORPZ - CORAZ
           DIFPBX = CORPX - CORBX
           DIFPBY = CORPY - CORBY
           DIFPBZ = CORPZ - CORBZ
           CALL ODC(NHKTAP,NHKTB,ISTEPA,ISTEPB,SAAB13,EXPPI,ONE,
     &              DIFPAX,DIFPBX,DIFPAY,DIFPBY,DIFPAZ,DIFPBZ,
     &              ONE,ONE,ONE,ONE,ONE,ONE,IPRINT)
C
C EXPANSION COEFFICIENTS FOR DERIVATIVES WITH RESPECT TO
C COORDINATES OF NUCLEUS A
C
           CALL DODC(NHKTA,NHKTB,ISTEPA,ISTEPB,EXPA,IPRINT)
           CALL TODC(NHKTA,NHKTB,ISTEPA,ISTEPB,EXPA)
C
C CALCULATION OF HERMITIAN INTEGRALS
C
           SHGTF = SQRT(PI*EXPPI)
C
           IADR = 1
           DO 400 IATOMC = 1,NATOMC
            ICENTC = NCENTC(IATOMC)
            FACTOR = FACINT(IATOMC)
            DIFCPX = CORCX(IATOMC) - CORPX
            DIFCPY = CORCY(IATOMC) - CORPY
            DIFCPZ = CORCZ(IATOMC) - CORPZ
            CALL HERNAI(JMAX,EXPP,DIFCPX,DIFCPY,DIFCPZ,FACTOR,
     &                  IADR,ISTEPU,ISTEPV,NAHGTF,IPRINT)
            IADR = IADR + NAHGTF
  400      CONTINUE
C
C  CALCULATION OF CARTESIAN INTEGRALS
C
           CALL ZERO(WORK1(ITOP+1),NSCR)
           IF(.NOT.GIAO) THEN
            IF(.NOT.GEERTSEN) THEN
            CALL GIINT3(NHKTA,NHKTB,KHKTA,KHKTB,ICENTA,LDIAG,
     &                  ISTEPA,ISTEPB,ISTEPU,ISTEPV,NAHGTF,
     &                  NATOMC,CORPX,CORPY,CORPZ,TWOG,EXPPI,
     &                  CHARGE,WORK1)
            ELSE
            CALL GIINT4(NHKTA,NHKTB,KHKTA,KHKTB,ICENTA,LDIAG,
     &                  ISTEPA,ISTEPB,ISTEPU,ISTEPV,NAHGTF,
     &                  NATOMC,CORPX,CORPY,CORPZ,TWOG,EXPPI,
     &                  CHARGE,WORK1)
            ENDIF
           ELSE
            IF (ONECEN) THEN
             CALL GIINT1(NHKTA,NHKTB,KHKTA,KHKTB,ICENTA,LDIAG,
     &                   ISTEPA,ISTEPB,ISTEPU,ISTEPV,NAHGTF,
     &                   NATOMC,CORPX,CORPY,CORPZ,TWOG,CHARGE,
     &                   WORK1)
            ELSE
             CALL GIINT2(NHKTA,NHKTB,KHKTA,KHKTB,
     &                   ISTEPA,ISTEPB,ISTEPU,ISTEPV,NAHGTF,
     &                   NATOMC,LDIAG,CORPX,CORPY,CORPZ,
     &                   CORAX,CORAY,CORAZ,
     &                   DIFABX,DIFABY,DIFABZ,
     &                   DIFPAX,DIFPAY,DIFPAZ,TWOG,CHARGE,
     &                   WORK1)
            ENDIF
           ENDIF
  300    CONTINUE
C
C CALCULATE EXPECTATION VALUES AND DENSITY CONTRIBUTIONS
C GATHER DIFFERENTIATED INTEGRALS IN CASE OF SECOND DERIVATIVE
C CALCULATION
C
C CALCULATE EXPECTATION VALUE OF DIAMAGNETIC SHIELDING
C TENSOR
C
         CALL DMGAVR(KHKTA,KHKTB,IDENA,IDENB,ISYMOP,
     &               NATOMC,LDIAG,WORK1,MSZ,CSH,
     &               CSHSCF,NCOORD)
         IF(.NOT.GIAO.AND.(.NOT.GEERTSEN)) THEN 
          CALL MSZAVR(KHKTA,KHKTB,IDENA,IDENB,ISYMOP,
     &                LDIAG,WORK1,MSZ,MSZSCF)
         ENDIF
C
C TRANSFORM INTEGRAL DERIVATIVES TO SO BASIS
C
         FULMAT = .TRUE.
C
C DERIVATIVES OF S WITH RESPECT TO Bx
C
         IF (.NOT.ONECEN) THEN
          IF (IYZPERT.EQ.1) THEN
           CALL SYM1S(WORK1(IS000X+1),WORK1(KSDAOX),ISYMOP,MULA,MULB,
     &                NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &                FULMAT,DUM,IDUM,1,IPRINT,ONEM)
          ELSE
           IRREPYZ=IYZPERT-1
           CALL SYM1N(WORK1(IS000X+1),WORK1(KSDAOX),
     &                IRREPYZ,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &                KHKTB,-HKAB,LDIAG,LAEQB,
     &                FULMAT,DUM,IDUM,1,IPRINT,ONEM)
          ENDIF
         ENDIF
C
C DERIVATIVES OF H WITH RESPECT TO Bx
C
         IF (IYZPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL000X+1),WORK1(KFDAOX),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPYZ=IYZPERT-1
          CALL SYM1N(WORK1(IL000X+1),WORK1(KFDAOX),
     &               IRREPYZ,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
C
C DERIVATIVES OF S WITH RESPECT TO By
C
         IF (.NOT.ONECEN) THEN
          IF (IXZPERT.EQ.1) THEN
           CALL SYM1S(WORK1(IS000Y+1),WORK1(KSDAOY),ISYMOP,MULA,MULB,
     &                NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &                FULMAT,DUM,IDUM,1,IPRINT,ONEM)
          ELSE
           IRREPXZ=IXZPERT-1
           CALL SYM1N(WORK1(IS000Y+1),WORK1(KSDAOY),
     &                IRREPXZ,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &                KHKTB,-HKAB,LDIAG,LAEQB,
     &                FULMAT,DUM,IDUM,1,IPRINT,ONEM)
          ENDIF
         ENDIF
C
C DERIVATIVES OF H WITH RESPECT TO By
C
         IF (IXZPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL000Y+1),WORK1(KFDAOY),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPXZ=IXZPERT-1
          CALL SYM1N(WORK1(IL000Y+1),WORK1(KFDAOY),
     &               IRREPXZ,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
C
C DERIVATIVES OF S WITH RESPECT TO Bz
C
         IF (.NOT.ONECEN) THEN
          IF(IXYPERT.EQ.1) THEN
           CALL SYM1S(WORK1(IS000Z+1),WORK1(KSDAOZ),ISYMOP,MULA,MULB,
     &                NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &                FULMAT,DUM,IDUM,1,IPRINT,ONEM)
          ELSE
           IRREPXY=IXYPERT-1
           CALL SYM1N(WORK1(IS000Z+1),WORK1(KSDAOZ),
     &                IRREPXY,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &                KHKTB,-HKAB,LDIAG,LAEQB,
     &                FULMAT,DUM,IDUM,1,IPRINT,ONEM)
          ENDIF
         ENDIF
C
C DERIVATIVES OF H WITH RESPECT TO Bz
C
         IF(IXYPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL000Z+1),WORK1(KFDAOZ),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPXY=IXYPERT-1
          CALL SYM1N(WORK1(IL000Z+1),WORK1(KFDAOZ),
     &               IRREPXY,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
C
         IF(GEERTSEN) THEN
C
C P INTEGRALS
C
         IF(IXPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL00XX+1),WORK1(KPDAOX),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPX=IXPERT-1
          CALL SYM1N(WORK1(IL00XX+1),WORK1(KPDAOX),
     &               IRREPX,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
         IF(IYPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL00XY+1),WORK1(KPDAOY),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPY=IYPERT-1
          CALL SYM1N(WORK1(IL00XY+1),WORK1(KPDAOY),
     &               IRREPY,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
         IF(IZPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL00XZ+1),WORK1(KPDAOZ),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPZ=IZPERT-1
          CALL SYM1N(WORK1(IL00XZ+1),WORK1(KPDAOZ),
     &               IRREPZ,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
C
C INTEGRALS (r-RG) x L(RG)
C
         IF(IXPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL00YY+1),WORK1(KLDAOX),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPX=IXPERT-1
          CALL SYM1N(WORK1(IL00YY+1),WORK1(KLDAOX),
     &               IRREPX,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
         IF(IYPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL00YZ+1),WORK1(KLDAOY),ISYMOP,MULA,MULB,
     &               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPY=IYPERT-1
          CALL SYM1N(WORK1(IL00YZ+1),WORK1(KLDAOY),
     &               IRREPY,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
         IF(IZPERT.EQ.1) THEN
          CALL SYM1S(WORK1(IL00ZZ+1),WORK1(KLDAOZ),ISYMOP,MULA,MULB,
     *               NHKTA,NHKTB,KHKTA,KHKTB,HKAB,LDIAG,LAEQB,
     *               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ELSE
          IRREPZ=IZPERT-1
          CALL SYM1N(WORK1(IL00ZZ+1),WORK1(KLDAOZ),
     &               IRREPZ,ISYMOP,MULA,MULB,NHKTA,NHKTB,KHKTA,
     &               KHKTB,-HKAB,LDIAG,LAEQB,
     &               FULMAT,DUM,IDUM,1,IPRINT,ONEM)
         ENDIF
C
         ENDIF
C
C DERIVATIVES OF ONE-ELECTRON INTEGRALS WITH RESPECT TO NUCLEAR MAGNETIC 
C MOMENTS
C
         DO 250 IATOMC = 1, NATOMC
          ISYMC  = JSYMC(IATOMC)
          ICENTC = JCENTC(IATOMC)
          CALL DASYM3(WORK1(IA000X+IATOMC),
     &                WORK1,KNDAO,NATOMC,ONECEN,
     &                NCENTA,NCENTB,ICENTC,ISYMOP,ISYMC,
     &                MULA,MULB,NHKTA,NHKTB,
     &                KHKTA,KHKTB,HKAB,LDIAG,LAEQB,THRS,
     &                IPRINT)
  250    CONTINUE
C
  200   CONTINUE
C
C END LOOP OVER SYMMETRY OPERATIONS 
C
        IDENB0 = IDENB0 + KHKTB*MULTB*NRCB
110    CONTINUE
       IDENA = IDENA + KHKTA*MULTA*NRCA
100   CONTINUE
C
C  END LOOP OVER SYMMETRY INDEPENDENT ORBITALS
C
      CALL PUTREC(20,'JOBARC','IPTCNT  ',MXCENT*24,
     &            IPTCNT(1,0))
      CALL PUTREC(20,'JOBARC','NUCIND  ',1,NUCIND)
C
C WRITE OVERLAP DERIVATIVE INTEGRALS TO GAMLAM
C
C CHECK IF GAMLAM FILE EXISTS
C
c      CALL GFNAME('GAMLAM  ',FNAME,ILENGTH)
c      INQUIRE(FILE=FNAME(1:ILENGTH),EXIST=YESNO)
c      IF(YESNO) THEN
       IENTER=0
       IOFF=0
c      ELSE
c       IENTER=1
c       IOFF=-1
c      ENDIF
      DO 1850 IRREP=1,MAXLOP+1
       NP=0
       IF(IYZPERT.EQ.IRREP) NP=NP+1
       IF(IXZPERT.EQ.IRREP) NP=NP+1
       IF(IXYPERT.EQ.IRREP) NP=NP+1
       IF(NP.NE.0) THEN
        CALL UPDMOI(NP,NLENT5(IRREP),IRREP,101,IENTER,IOFF)
        IENTER=0
        IOFF=0
       ENDIF
1850  CONTINUE
      CALL IZERO(IP,MAXLOP+1)
      IP(IYZPERT)=IP(IYZPERT)+1
C
      IF(IDFGH)THEN
       CALL EXPCAR(IYZPERT,1,WORK1(KSDAOX),WORK1(KSTART),1)
      ENDIF
C
      CALL PUTLST(WORK1(KSDAOX),IP(IYZPERT),1,1,IYZPERT,101)
C
      IP(IXZPERT)=IP(IXZPERT)+1
C
      IF(IDFGH) THEN
       CALL EXPCAR(IXZPERT,1,WORK1(KSDAOY),WORK1(KSTART),1)
      ENDIF
C
      CALL PUTLST(WORK1(KSDAOY),IP(IXZPERT),1,1,IXZPERT,101)
C
      IP(IXYPERT)=IP(IXYPERT)+1
C
      IF(IDFGH) THEN
       CALL EXPCAR(IXYPERT,1,WORK1(KSDAOZ),WORK1(KSTART),1)
      ENDIF
C
      CALL PUTLST(WORK1(KSDAOZ),IP(IXYPERT),1,1,IXYPERT,101)
C
C WRITE ONE-ELECTRON PART OF FOCK MATRIX DERIVATIVES TO GAMLAM
C WRITE DERIVATIVES WITH RESPECT TO NUCLEAR MAGNETIC MOMENTS
C TO GAMLAM
C
      DO 1900 IRREP=1,MAXLOP+1
       NP=NPERT(IRREP) 
       JP=1
       IF(IYZPERT.EQ.IRREP) NP=NP+1
       IF(IXZPERT.EQ.IRREP) NP=NP+1
       IF(IXYPERT.EQ.IRREP) NP=NP+1
       IF(GEERTSEN) THEN
        IF(IXPERT.EQ.IRREP) NP=NP+2
        IF(IYPERT.EQ.IRREP) NP=NP+2
        IF(IZPERT.EQ.IRREP) NP=NP+2
       ENDIF
C
       IF(NP.NE.0) THEN
       CALL UPDMOI(NP,NLENT5(IRREP),IRREP,102,IENTER,IOFF)
C
       IF(IYZPERT.EQ.IRREP) THEN
C
        IF(IDFGH) THEN
         CALL EXPCAR(IRREP,1,WORK1(KFDAOX),WORK1(KSTART),1)
        ENDIF
C
        CALL PUTLST(WORK1(KFDAOX),JP,1,1,IRREP,102)
        JP=JP+1
       ENDIF
       IF(IXZPERT.EQ.IRREP) THEN
C
        IF(IDFGH) THEN
         CALL EXPCAR(IRREP,1,WORK1(KFDAOY),WORK1(KSTART),1)
        ENDIF
C
        CALL PUTLST(WORK1(KFDAOY),JP,1,1,IRREP,102)
        JP=JP+1
       ENDIF
C
       IF(IXYPERT.EQ.IRREP) THEN
C
        IF(IDFGH) THEN
         CALL EXPCAR(IRREP,1,WORK1(KFDAOZ),WORK1(KSTART),1)
        ENDIF
C
        CALL PUTLST(WORK1(KFDAOZ),JP,1,1,IRREP,102)
        JP=JP+1
       ENDIF 
C
       IF(GEERTSEN) THEN
C
        IF(IXPERT.EQ.IRREP) THEN
         IF(IDFGH) THEN
          CALL EXPCAR(IRREP,1,WORK1(KPDAOX),WORK1(KSTART),1)
         ENDIF
C
         CALL PUTLST(WORK1(KPDAOX),JP,1,1,IRREP,102)
         JP=JP+1
        ENDIF        
C
        IF(IYPERT.EQ.IRREP) THEN
         IF(IDFGH) THEN
          CALL EXPCAR(IRREP,1,WORK1(KPDAOY),WORK1(KSTART),1)
         ENDIF
C
         CALL PUTLST(WORK1(KPDAOY),JP,1,1,IRREP,102)
         JP=JP+1
        ENDIF        
C
        IF(IZPERT.EQ.IRREP) THEN
         IF(IDFGH) THEN
          CALL EXPCAR(IRREP,1,WORK1(KPDAOZ),WORK1(KSTART),1)
         ENDIF
C
         CALL PUTLST(WORK1(KPDAOZ),JP,1,1,IRREP,102)
         JP=JP+1
        ENDIF        
C
        IF(IXPERT.EQ.IRREP) THEN
         IF(IDFGH) THEN
          CALL EXPCAR(IRREP,1,WORK1(KLDAOX),WORK1(KSTART),1)
         ENDIF
C
         CALL PUTLST(WORK1(KLDAOX),JP,1,1,IRREP,102)
         JP=JP+1
        ENDIF        
C
        IF(IYPERT.EQ.IRREP) THEN
         IF(IDFGH) THEN
          CALL EXPCAR(IRREP,1,WORK1(KLDAOY),WORK1(KSTART),1)
         ENDIF
C
         CALL PUTLST(WORK1(KLDAOY),JP,1,1,IRREP,102)
         JP=JP+1
        ENDIF        
C
        IF(IZPERT.EQ.IRREP) THEN
         IF(IDFGH) THEN
          CALL EXPCAR(IRREP,1,WORK1(KLDAOZ),WORK1(KSTART),1)
         ENDIF
C
         CALL PUTLST(WORK1(KLDAOZ),JP,1,1,IRREP,102)
         JP=JP+1
        ENDIF        
C
       ENDIF
C
       IF(NPERT(IRREP).NE.0) THEN
        IF(IDFGH) THEN
         CALL EXPCAR(IRREP,NPERT(IRREP),WORK1(KNDAO(IRREP)),
     &               WORK1(KSTART),1)
        ENDIF
        CALL PUTLST(WORK1(KNDAO(IRREP)),JP,NPERT(IRREP),1,IRREP,102)
       ENDIF
       ENDIF
1900  CONTINUE 
C
C   PRINT SECTION
C
      IF(.NOT.SCF) THEN
       CALL HEADER
     &  ('SCF contribution to diamagnetic part of shielding tensor',-1)
       CALL SSCAL(3*NCOORD,CONVERT,CSHSCF,1)
       CALL CSHPRI(CSHSCF,NCOORD,1,.FALSE.)
      ENDIF
C
      CALL HEADER('Diamagnetic part of shielding tensors',-1)
      CALL SSCAL(3*NCOORD,CONVERT,CSH,1)
      CALL CSHPRI(CSH,NCOORD,1,.TRUE.)
C
      IF(.NOT.GIAO.AND.(.NOT.GEERTSEN)) THEN
       IF(.NOT.SCF) THEN
        CALL HEADER('Diamagnetic part of SCF magnetizability tensor',-1)
        CALL MSZPRI(MSZSCF,1)
       ENDIF 
       CALL HEADER('Diamagnetic part of magnetizability tensor',-1)
       CALL MSZPRI(MSZ,0)
      ENDIF
C 
      RETURN
      END
