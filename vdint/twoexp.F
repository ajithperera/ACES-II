
C ROUTINE WHICH CONTROLS THE EVALUATION OF VARIOUS DERIVATIVES
C OF THE TWO-ELECTRON INTEGRALS
C
C  ADAPETD TO THE CRAPS ENVIRONMENT AND EXTENDED FOR UHF AND NON-HF
C  OCT/90/JG
C
C  EXTENDED FOR GIAO CALCULATIONS ON MAGNETIC PROPERTIES, SEP/91/JG  

       SUBROUTINE TWOEXP(WORK1,LWORK1,ENEREE,SCF_GRADEE,GRADEE,
     &                   SCF_HESSEE,HESSEE,MSZ,NCOORD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL SCF,NONHF
      LOGICAL ELECT,GEOM,MAGNET,MAGNET2,GIAO
      LOGICAL         SKIP,   RUNPTR, RUNSOR, RUNINT, DTEST, TKTIME,
     *                RETUR,  NODC,   NODV,   NOPV
      LOGICAL MOLGRD,MOLHES,DIPDER,POLAR,INPTES,VIB,RESTAR,
     &        DOWALK,GDALL,FOCK,H2MO
C
      PARAMETER (LUCMD = 5, LUPRI = 6)
      PARAMETER (LUPAO = 25)
#include "baslims.par"
#include "mxcent.par"
C
      DIMENSION WORK1(LWORK1),GRADEE(NCOORD),HESSEE(NCOORD,NCOORD),
     &          MSZ(3,3),SCF_GRADEE(NCOORD),SCF_HESSEE(NCOORD,NCOORD)
      COMMON /CBITWO/ SKIP,   RUNPTR, RUNSOR, RUNINT, DTEST, TKTIME,
     &                IPRALL, IPRPTR, IPRSOR,
     &                JPRINT, IPRNTA, IPRNTB, IPRNTC, IPRNTD, RETUR,
     &                NODC,   NODV,   NOPV,
     &                MAXDIF, MAXVEC
      COMMON/ABAINF/IPRDEF,MOLGRD,MOLHES,DIPDER,POLAR,INPTES,
     &              VIB,RESTAR,DOWALK,GDALL,FOCK,H2MO
      COMMON/SYMMET/FMULT(0:7),PT(0:7),MAXLOP,MAXLOT,
     &              MULT(0:7),ISYTYP(3),
     &              ITYPE(8,36),NPARSU(8),NPAR(8),NAOS(8),
     &              NPARNU(8,8),IPTSYM(MXCORB,0:7),
     &              IPTCNT(3*MXCENT,0:7),NCRREO(0:7),
     &              IPTCOR(MXCENT*3),NAXREP(0:7),IPTAX(3),
     &              IPTXYZ(3,0:7)
C
C ADDED COMMON BLOCKS IN THE CRAPS ENVIRONMENT
C
      COMMON/PROP/ELECT,MAGNET,GEOM,MAGNET2,GIAO
      COMMON/METHOD/IUHF,SCF,NONHF
      COMMON/BASSYM/NBAS(8),NBASIS,NBASSQ,NBASTT
      COMMON/IPRI/IPRINT
 
c YAU - not used in this file
c#include "icdacc.com"
 
C
      DATA TWO /2.D0/ 
C
C WE HAVE OUR OWN BACK TRANSFORMATION SO WE DON'T NEED PTRAN
C
      RUNPTR = .FALSE.
      NODV=.TRUE.
      NOPV=.TRUE.
C
      IF(SCF.OR.FOCK) THEN
C
C  SCF : NO SORT REQUIRED
C
       RUNSOR = .FALSE.
C
      ELSE
C
C  CORRELATED METHODS : SORT IS REQUIRED FOR GRADIENTS
C  BUT NOT FOR CHEMICAL SHIFTS
C
       IF(.NOT.MAGNET) THEN
        RUNSOR=.TRUE.
       ELSE
        RUNSOR=.FALSE.
       ENDIF
C
      ENDIF
C
C  SET UP COMMON /BLOCKS/ FOR PSORT AND TWOINT 
C
      CALL PAOVEC(MAXVEC,0,IPRALL)
C
C  SET UP ONE-ELECTRON DENSITY MATRICES 
C
      IF (RUNINT) THEN
C
C  CORE MEMORY ALLOCATION IN THE CRAPS ENVIRONMENT
C
       KHFA=1
       KEND=KHFA+NBASIS*NBASIS*(MAXLOP+1)
       IF(IUHF.NE.0) THEN
        KHFB=KEND
        KEND=KHFB+NBASIS*NBASIS*(MAXLOP+1)
       ENDIF
       IF(.NOT.SCF) THEN
        KRELA=KEND
        KEND=KRELA+NBASIS*NBASIS*(MAXLOP+1)
        IF(IUHF.NE.0) THEN
         KRELB=KEND
         KEND=KRELB+NBASIS*NBASIS*(MAXLOP+1)
         IF(NONHF) THEN
          KNHFA=KEND
          KNHFB=KNHFA+NBASIS*NBASIS*(MAXLOP+1)
          KEND=KNHFB+NBASIS*NBASIS*(MAXLOP+1)
         ENDIF
        ENDIF
       ENDIF
       IF(FOCK) THEN
        KHFFA=KEND
        KHFFB=KHFFA+NBASIS*(NBASIS+1)/2*IUHF*(MAXLOP+1)
        KEND=KHFFB+NBASTT*(NBASIS+1)/2*(MAXLOP+1)
        IF(.NOT.SCF) THEN
         KRELFA=KEND
         KRELFB=KRELFA+NBASIS*(NBASIS+1)/2*(MAXLOP+1)*IUHF
         KEND=KRELFB+NBASIS*(NBASIS+1)/2*(MAXLOP+1)
        ENDIF
       ENDIF
       KCMO=KEND
       KDV=KCMO+NBASIS*NBASIS
       KDNH=KDV+NBASIS*NBASIS
       KSCR=KDNH+NBASIS*NBASIS
       KHFSO=KSCR+2*NBASIS*NBASIS
       KRELSO=KHFSO+NBASTT*(IUHF+1)
       KNHFSO=KRELSO+NBASTT*(IUHF+1)
       KEND2=KNHFSO+NBASTT*(IUHF+1)
       IF(KEND2.GE.LWORK1) CALL ERREX
C
C CONSTRUCT HERE DENSITY MATRICES IN SO BASIS
C
       CALL ONEDSO(WORK1(KCMO),WORK1(KDV),WORK1(KDNH),WORK1(KSCR),
     &             WORK1(KHFSO),WORK1(KRELSO),WORK1(KNHFSO))
C
C CONSTRUCT HERE DENSITY MATRICES IN AO BASIS NEEDED FOR THE TWO-ELECTRON 
C CONTRIBUTION TO THE GRADIENT
C
       CALL DSYM2(WORK1(KHFSO),WORK1(KRELSO),WORK1(KNHFSO),NBASIS,
     &            IPRALL,WORK1(KHFA),WORK1(KHFB),WORK1(KRELA),
     &            WORK1(KRELB),WORK1(KNHFA),WORK1(KNHFB),MAXLOP)
C
C CONTRUCT HERE DENSITY MATRICES IN AO BASIS NEEDED FOR FOCK-MATRIX
C CONSTRUCTION
C
       IF(FOCK) THEN
C
C FIRST CALCULATE FOLDED DENSITY MATRIX
C
        CALL SSCAL((1+IUHF)*NBASTT,TWO,WORK1(KHFSO),1)
C
C THEN TRANSFORM
C
        CALL DSYM2A(WORK1(KHFSO),NBASIS,IPRALL,WORK1(KHFFA),
     &              WORK1(KHFFB),MAXLOP)
C
C FOR CORRELATED SECOND DERIVATIVES WE NEED ALSO THE FOLDED
C RELAXED DENSITY
C
        IF(.NOT.SCF) THEN
         CALL SSCAL((1+IUHF)*NBASTT,TWO,WORK1(KRELSO),1)
         CALL DSYM2A(WORK1(KRELSO),NBASIS,IPRALL,WORK1(KRELFA),
     &               WORK1(KRELFB),MAXLOP)
        ENDIF
       ENDIF
      ENDIF
C
C  SORT TWO-PARTICLE DENSITY MATRIX
C
      IF (RUNSOR) THEN
       CALL PSORG(WORK1(KEND),LWORK1+1-KEND)
      END IF
C
C  CALCULATE EXPECTAION VALUE, FOCK MATRICES, ETC.
C
      IF (RUNINT) THEN
       IF(.NOT.MAGNET) THEN
         CALL TWOINT(2,MAXDIF,FOCK,0,NODV,NOPV,TKTIME,
     &               IPRINT,IPRNTA,IPRNTB,IPRNTC,IPRNTD,RETUR,
     &               WORK1(KEND),LWORK1+1-KEND,ENEREE,SCF_GRADEE,
     &               GRADEE,SCF_HESSEE,HESSEE,NCOORD,WORK1(KHFA),
     &               WORK1(KHFB),
     &               WORK1(KRELA),WORK1(KRELB),WORK1(KNHFA),
     &               WORK1(KNHFB),WORK1(KHFFA),WORK1(KHFFB),
     &               WORK1(KRELFA),WORK1(KRELFB),NBASIS,MAXLOP)
       ELSE
        CALL NMR2DR(FOCK,0,NODV,NOPV,
     &              IPRINT,IPRNTA,IPRNTB,IPRNTC,IPRNTD,RETUR,
     &              WORK1(KEND),LWORK1+1-KEND,MSZ,3,
     &              WORK1(KHFA),WORK1(KHFB),WORK1(KRELA),
     &              WORK1(KRELB),WORK1(KNHFA),WORK1(KNHFB),
     &              WORK1(KHFFA),WORK1(KHFFB),
     &              WORK1(KRELFA),WORK1(KRELFB),NBASIS,MAXLOP)
       ENDIF
#ifndef _SAVE_GAMMA 
CSSS       IF (RUNSOR) CLOSE(LUPAO,STATUS='DELETE')
#endif 
      END IF
      RETURN
      END
