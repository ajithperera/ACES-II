      SUBROUTINE DPATH
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL DALL1, DALL2, CROSS1, CROSS2
      DIMENSION NR(0:10)
      LOGICAL         AEQB,   CEQD,   DIAGAB, DIAGCD, DIACAC,
     *                ONECEN, PQSYM,  DTEST,
     *                TPRIAB, TPRICD, TCONAB, TCONCD
      COMMON /INTINF/ THRESH,
     *                NHKTA,  NHKTB,  NHKTC,  NHKTD,
     *                MAXAB,  MAXCD,  JMAX0,
     *                KHKTA,  KHKTB,  KHKTC,  KHKTD,
     *                KHKTAB, KHKTCD, KHABCD,
     *                MHKTA,  MHKTB,  MHKTC,  MHKTD,
     *                MULA,   MULB,   MULC,   MULD,
     *                NORBA,  NORBB,  NORBC,  NORBD, NORBAB, NORBCD,
     *                NUCA,   NUCB,   NUCC,   NUCD,  NUCAB,  NUCCD,
     *                NSETA,  NSETB,  NSETC,  NSETD,
     *                ISTEPA, ISTEPB, ISTEPC, ISTEPD,
     *                NSTRA,  NSTRB,  NSTRC,  NSTRD,
     *                AEQB,   CEQD,
     *                DIAGAB, IAB0X,  IAB0Y,  IAB0Z,
     *                DIAGCD, ICD0X,  ICD0Y,  ICD0Z,
     *                DIACAC, ONECEN, PQSYM,  IPQ0X, IPQ0Y, IPQ0Z,
     *                TPRIAB, TPRICD, TCONAB, TCONCD,
     *                MAXDER, DTEST
      DATA NR /1, 4, 10, 20, 35, 56, 84, 120, 165, 220, 286/
      LC101(LOOP,IDER) = LOOP*(NUCAB*(11 + 4*NUCCD)
     *                 + NR(MAXCD + IDER)*(10 + 12*NUCAB*NUCCD))
      LC102(LOOP,IDER) = LOOP*(NUCCD*(11 + 4*NUCAB)
     *                 + NR(MAXAB + IDER)*(10 + 12*NUCAB*NUCCD))
      LC1E1(NTYPE,LOOP,IDER) = NTYPE*(LOOP*(NUCAB*(11 + 4*NUCCD)
     *                       + NR(MAXCD + IDER)*(10 + 12*NUCAB*NUCCD)))
      LC1E2(NTYPE,LOOP,IDER) = NTYPE*(LOOP*(NUCCD*(11 + 4*NUCAB)
     *                       + NR(MAXAB + IDER)*(10 + 12*NUCAB*NUCCD)))
      LC2H1(NTYPE,LOOP) = LOOP*(NUCCD*(12 + NORBAB*4)
     *                  + NTYPE*(20 + KHKTAB*(4 + 12*NORBAB*NUCCD)))
     *                  + NTYPE*KHKTAB*KHKTCD*NORBAB*NUCCD*6
      LC2H2(NTYPE,LOOP) = LOOP*(NUCAB*(12 + NORBCD*4)
     *                  + NTYPE*(20 + KHKTCD*(4 + 12*NORBCD*NUCAB)))
     *                  + NTYPE*KHKTCD*KHKTAB*NORBCD*NUCAB*6
      LC2E1(NTYPE,LOOP) = NTYPE*LOOP*(12*NUCCD + 5*NORBAB*NUCCD
     *                  + KHKTAB*(5 + 12*NORBAB*NUCCD))
     *                  + NTYPE*KHKTAB*KHKTCD*NORBAB*NUCCD*5
      LC2E2(NTYPE,LOOP) = NTYPE*LOOP*(12*NUCAB + 5*NORBCD*NUCAB
     *                  + KHKTCD*(5 + 12*NORBCD*NUCAB))
     *                  + NTYPE*KHKTCD*KHKTAB*NORBCD*NUCAB*5
C
C     ***** 211 *****
C
      ENTRY DP211(DALL2,DALL1)
      CALL DLOOP(NHKTA,NHKTB,KHKTA,KHKTB,DIAGAB,IAB0X,IAB0Y,IAB0Z,
     *           .TRUE.,.FALSE.,.FALSE.,LOOP01,LOOP11,LOOP21)
      CALL DLOOP(NHKTC,NHKTD,KHKTC,KHKTD,DIAGCD,ICD0X,ICD0Y,ICD0Z,
     *           .TRUE.,.FALSE.,.FALSE.,LOOP02,LOOP12,LOOP22)
      IF (MAXDER .EQ. 1) THEN
         LALL1 = LC102(LOOP02,1) + LC2H2(3,LOOP01)
         LALL2 = LC101(LOOP01,1) + LC2H1(3,LOOP02)
      ELSE
         LALL1 = LC102(LOOP02,2) + LC2H2(9,LOOP01)
         LALL2 = LC101(LOOP01,2) + LC2H1(9,LOOP02)
      END IF
      DALL1 = LALL2 .GE. LALL1
      DALL2 = .NOT.DALL1
      RETURN
C
C     ***** CROSS DERIVATIVES *****
C
      ENTRY DCROSS(CROSS1,CROSS2)
      CALL DLOOP(NHKTA,NHKTB,KHKTA,KHKTB,DIAGAB,IAB0X,IAB0Y,IAB0Z,
     *           .FALSE.,.TRUE.,.FALSE.,LOOP01,LOOP11,LOOP21)
      CALL DLOOP(NHKTC,NHKTD,KHKTC,KHKTD,DIAGCD,ICD0X,ICD0Y,ICD0Z,
     *           .FALSE.,.TRUE.,.FALSE.,LOOP02,LOOP12,LOOP22)
      LCROS1 = LC1E1(3,LOOP11,1) + LC2E1(9,LOOP12)
      LCROS2 = LC1E2(3,LOOP12,1) + LC2E2(9,LOOP11)
      CROSS1 = LCROS2 .GE. LCROS1
      CROSS2 = .NOT.CROSS1
      RETURN
C
C     ***** FOUR CENTER INTEGRALS *****
C
      ENTRY DP422(DALL2,DALL1)
      IF (MAXDER .EQ. 1) THEN
         CALL DLOOP(NHKTA,NHKTB,KHKTA,KHKTB,DIAGAB,IAB0X,IAB0Y,IAB0Z,
     *              .FALSE.,.TRUE.,.FALSE.,LOOP01,LOOP11,LOOP21)
         CALL DLOOP(NHKTC,NHKTD,KHKTC,KHKTD,DIAGCD,ICD0X,ICD0Y,ICD0Z,
     *              .FALSE.,.TRUE.,.FALSE.,LOOP02,LOOP12,LOOP22)
         LALL1 = LC2E2(6,LOOP11) + LC2E1(3,LOOP12)
         LALL2 = LC2E1(6,LOOP12) + LC2E2(3,LOOP11)
      ELSE
         CALL DLOOP(NHKTA,NHKTB,KHKTA,KHKTB,DIAGAB,IAB0X,IAB0Y,IAB0Z,
     *              .FALSE.,.TRUE.,.TRUE.,LOOP01,LOOP11,LOOP21)
         CALL DLOOP(NHKTC,NHKTD,KHKTC,KHKTD,DIAGCD,ICD0X,ICD0Y,ICD0Z,
     *              .FALSE.,.TRUE.,.TRUE.,LOOP02,LOOP12,LOOP22)
         LALL1 = LC2E1(6,LOOP22) + LC2E2(21,LOOP21)
     *         + LC1E2(3,LOOP12,1) + LC2E2(18,LOOP11)
         LALL2 = LC2E1(21,LOOP22) + LC2E2(6,LOOP21)
     *         + LC1E1(3,LOOP11,1) + LC2E1(18,LOOP12)
      END IF
      DALL1 = LALL2 .GE. LALL1
      DALL2 = .NOT.DALL1
      RETURN
      END
