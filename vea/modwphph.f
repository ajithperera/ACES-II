      SUBROUTINE MODWPHPH(ICORE,MAXCOR,IUHF, FACTOR, LISTFIJ, LISTFAB)
C
C THIS ROUTINE MODIFIES THE PHPH PART OF W INTEGRALS
C WITH ONE-BODY TERMS TO DO EA-EOM CALCULATIONS (FACTOR = 1.0),
C OR TRANSFORMS THEM BACK TO ORIGINAL FORM (FACTOR IS -1.0)
C
C
C     H(ak,ci) =  W(ak, ci) + factor[ (1/2)  F(ki) d(ac) - F(ac) d(ik)]
C
C WHERE F AND W ARE THE ONE AND TWO PARTICLE PARTS OF EXP(-T) H EXP(T).
C
C THIS ROUTINE IS ALSO USED TO CALCULATE SINGLET TRIPLET SPLITTINGS
C IN CORE EXCITATION PROBLEMS. THE MATRIX F(KI) RESIDES ON LISTFIJ,
C THE MATRIX F(AB) RESIDES ON LISTFAB. THESE ARE INPUT.
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ZILCH,ONEM,HALF,HALFM,TWO,
     $   FACTOR
      DIMENSION ICORE(MAXCOR),IOFFO(2),IOFFV(2), LISTW0(2,2)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREP0(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/INFO/NOCCO(2),NVRTO(2)
C 
      DATA ONE,ONEM /1.0D0,-1.0D0/
      DATA ZILCH,HALF,HALFM,TWO /0.0D0,0.5D0,-0.5D0,2.0D0/
C
C
C     58 CONTAINS:  W(Ak, Ci),  Ck ; Ai  (q-annihilation before q-creation)
C     FOR RHF CASE
C
C ALLOCATE MEMORY FOR ONE-PARTICLE TERMS AND READ THEM IN
C
      LISTW0(1,1) = 54
      LISTW0(2,1) = 58
      LISTW0(1,2) = 59
      LISTW0(2,2) = 55
C
C THE ARGUMENTS OF LISTW0 WILL BE IPOPSPIN AND IVRTSPIN RESPECTIVELY
C LISTW0 CONTAINS THE LISTS FOR THE VARIOUS SPINCASES. 
C ALL INTEGRALS ARE ORDERED AS CK, AI, IRRESPECTIVE OF SPIN.
C THE F(A,C) TERMS HAVE TO BE TRANSPOSED BEFORE THEY ARE ADDED TO W(CA,KI)
C
      I000=1
      I010=I000+NFMI(1)*IINTFP
      IF(IUHF.NE.0)THEN
       I020=I010+NFMI(2)*IINTFP
      ELSE
       I020=I010
      ENDIF
      I030=I020+NFEA(1)*IINTFP
      IF(IUHF.NE.0)THEN
       I040=I030+NFEA(2)*IINTFP
      ELSE
       I040=I030
      ENDIF
      CALL GETLST(ICORE(I000),1,1,1,1,LISTFIJ)
CSSS      call checksum("HBAR_IJ",icore(i000),nfmi(1))
      CALL SSCAL(NFMI(1), - HALF*FACTOR, ICORE(I000),1)
      CALL GETLST(ICORE(I020),1,1,1,1,LISTFAB)
CSSS      call checksum("HBAR_EA",icore(i020),nfea(1))
      CALL SSCAL(NFEA(1), - FACTOR, ICORE(I020), 1)
C
C TRANSPOSE F(A,C) -> F(C,A)
C
      I050 = I040 + NFEA(1) * IINTFP
      I060 = I050 + NFEA(1) * IINTFP
      I070 = I060 + NFEA(1) * IINTFP
      CALL SYMTR3(1, VRT(1,1), VRT(1,1),NFEA(1), 1, ICORE(I020),
     $   ICORE(I040),ICORE(I050),ICORE(I060))
      IF (IUHF.NE.0) THEN
         CALL GETLST(ICORE(I010),1,1,1,2,LISTFIJ)
         CALL SSCAL(NFMI(2),- HALF*FACTOR, ICORE(I010),1)         
         CALL GETLST(ICORE(I030),1,1,1,2,LISTFAB)
         CALL SSCAL(NFEA(2), - FACTOR, ICORE(I030), 1)         
C
C TRANSPOSE F(A,C) -> F(C,A)
C
         I050 = I040 + NFEA(2) * IINTFP
         I060 = I050 + NFEA(2) * IINTFP
         I070 = I060 + NFEA(2) * IINTFP
         CALL SYMTR3(1, VRT(1,2), VRT(1,2),NFEA(2), 1, ICORE(I030),
     $      ICORE(I040),ICORE(I050),ICORE(I060))
      ENDIF
C
C ADDONEH INCLUDES A MINUS SIGN.
C
      IOFFO(1)=I000
      IOFFO(2)=I010
      IOFFV(1)=I020
      IOFFV(2)=I030
C
C READ IN ALL OF THE TWO-PARTICLE CONTRIBUTIONS, RESORT THEM AND
C HOLD IN CORE
C
      DO 100 IPOPSPIN=1,1+IUHF
         DO 200 IVRTSPIN = 1, 1+IUHF
            LISTW = LISTW0(IPOPSPIN+1-IUHF, IVRTSPIN)
            ISIZE=ISYMSZ(ISYTYP(1,LISTW),ISYTYP(2,LISTW))
            I050=I040+ISIZE*IINTFP
            CALL GETALL(ICORE(I040),ISIZE,1,LISTW)
C
       I060 =I050 + ISIZE*IINTFP
       CALL SSTGEN(ICORE(I040),ICORE(I050),ISIZE,
     &             VRT(1,IVRTSPIN),POP(1,IPOPSPIN),VRT(1,IVRTSPIN),
     &             POP(1,IPOPSPIN),ICORE(I060),1,'1324')
C
C NOW ADD IN THE ONE-PARTICLE PART.  HERE WE ARE WORKING WITH THE
C ORDERING H(CA,iK) RATHER THAN H(Ai,Ck), SINCE THIS PERMITS US TO 
C USE ONLY THE FIRST IRREP
C
       DISSZ1=IRPDPD(1,18+IVRTSPIN)
       NUMDS1=IRPDPD(1,20+IPOPSPIN)
       CALL ADDONEH(ICORE(I050),ICORE(I040),ISIZE,
     $    ICORE(IOFFV(IVRTSPIN)),
     &    ICORE(IOFFO(IPOPSPIN)),DISSZ1,NUMDS1,IPOPSPIN, IVRTSPIN)
C
C NOW RESORT BACK TO AI,bj AND DUMP TO DISK ON APPROPRIATE LIST
C
       CALL SSTGEN(ICORE(I050),ICORE(I040),ISIZE,
     &             VRT(1,IVRTSPIN),VRT(1,IVRTSPIN),POP(1,IPOPSPIN),
     &             POP(1,IPOPSPIN),ICORE(I060),1,'1324')
C
       CALL PUTALL(ICORE(I040),ISIZE,1,LISTW)
C
 200  CONTINUE
 100  CONTINUE
C
      RETURN
      END
