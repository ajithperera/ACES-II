      SUBROUTINE NEWVRT(FOCK, ONEH, SHALF, NELEC, FOCKNEW, EVEC, EVAL,
     &   SCR1,SCR2,SCR3,SCR4,SCR5,POP, VRT,
     &   NBAS, LDIM1, LDIM2, LDIM3,NIRREP,ISPIN,NEWHOLE, NEWPART)
C
C  NEW VIRTUAL ORBITALS ARE OBTAINED IN A V(N-1) POTENTIAL.
C  SEVERAL OPTIONS MIGHT BE PUT IN. AT THIS POINT WE DEFINE
C
C    FOCKNEW = HCORE + (N-1)/N *G = 1/N * ( HCORE + (N-1) FOCK)
C
C   THIS CORRESPONDS TO SCALING THE DENSITY BY A FACTOR (N-1)/N AND HENCE
C   REMOVING ONE ELECTRON FROM THE DENSITY IN AN AVERAGE WAY
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C      IMPLICIT NONE
C
      CHARACTER*8 WLABEL(2,2)
      INTEGER POP(8), VRT(8)
      LOGICAL NEWHOLE, NEWPART, PRINT
C
      DIMENSION ONEH(LDIM1),SHALF(LDIM1)
      DIMENSION FOCK(LDIM1),FOCKNEW(LDIM1)
      DIMENSION EVEC(LDIM2),EVAL(NBAS)
      DIMENSION SCR1(LDIM2),SCR2(LDIM2),SCR3(LDIM2),
     &   SCR4(LDIM2), SCR5(LDIM2)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
C
      NNP1O2(I)=(I*(I+1))/2

      DATA ONE /1.0/
      DATA ZILCH /0.0/
      DATA WLABEL /'WMATRXOA','WMATRXVA','WMATRXOB','WMATRXVB'/
C
      PRINT = .TRUE.
      IF (PRINT) THEN
        WRITE(6,*) '  INFORMATION FROM NEWVRT ', NELEC
        CALL OUTPUT(EVAL,1,1,1,NBAS,1,NBAS,1)
      ENDIF
C
C   FORM FOCKNEW
C
      FACTOR = FLOAT(NELEC -1)
      CALL VADD(FOCKNEW, ONEH, FOCK, LDIM1, FACTOR)
      FACTOR = 1.0D0 / NELEC
      CALL SSCAL(LDIM1, FACTOR, FOCKNEW, 1)
C
C  NOW DIAGONLIZE HH AND/OR PP PARTS OF FOCKNEW TO GET NEW ORBITALS.
C  SLIGHTLY MODIFIED CODE FROM SMICAN
C
C TRANSFORM AO BASIS FOCKNEW MATRIX TO THE MO BASIS
C
CMN      LENGTH=0
CMN      DO 222 I=1,NIRREP
CMN       LENGTH=LENGTH+NNP1O2(POP(I)+VRT(I))
CMN 222   CONTINUE
CMN      CALL PUTREC(20,'JOBARC','FOCK    ',LENGTH*IINTFP,FOCK)
C
      CALL FAO2MO(FOCKNEW,EVEC,SCR2,SCR3,POP,VRT,NIRREP)
C
CMN DELETE ?
CMN        CALL ZERO(SCR,NBAS*NBAS)
CMN        CALL MKFULL(SCR,EVEC,OSCR2,LDIM1,LDIM3,NBAS,0)
CMN        CALL PUTREC(20,'JOBARC','ROHFEVC'//SP(ISPIN),NBAS*NBAS*IINTFP,
CMN     &              SCR)
CMN        CALL ZERO(SCR,NBAS*NBAS)
CMN        CALL SCOPY(NBAS,FOCK,NBAS+1,SCR,1)
CMN        CALL PUTREC(20,'JOBARC','ROHFEVL'//SP(ISPIN),NBAS*IINTFP,SCR)
CMN TILL HERE
C
      Write(6,*) NEWHOLE, NEWPART
      IPOS=1
      IOFFF=1
      IOFFE=1
      IOFFEVL=1
C
C LOOP OVER IRREPS
C
      IOFFWO=1
      IOFFWV=1
      DO 10 IRREP=1,NIRREP
       NOCC=POP(IRREP)
       NVRT=VRT(IRREP)
       NSIZ=NOCC+NVRT
       CALL EXPND2(FOCKNEW(IOFFF),SCR1,NSIZ)
       IF (PRINT) THEN
         WRITE(6,*) ' IRREP, NSIZ FOCKNEW', IRREP, NSIZ
         CALL OUTPUT(SCR1, 1, NSIZ, 1, NSIZ, NSIZ, NSIZ, 2)
       ENDIF
CMN
       IF (NEWHOLE) THEN
C
C DIAGONALIZE OCCUPIED-OCCUPIED BLOCK OF FOCK MATRIX
C
       CALL BLKCPY2(SCR1,NSIZ,NSIZ,SCR2,NOCC,NOCC,1,1)
       CALL EIG(SCR2,SCR3,NOCC,NOCC,0)
       CALL SCOPY(NOCC*NOCC,SCR3,1,SCR4(IOFFWO),1)
       IOFFWO=IOFFWO+NOCC*NOCC
       CALL SCOPY(NOCC,SCR2,NOCC+1,EVAL(IOFFEVL),1)
       IOFFEVL=IOFFEVL+NOCC
C
C NOW USE EIGENVECTORS TO ROTATE MOLECULAR ORBITALS
C
       CALL XGEMM('N','N',NSIZ,NOCC,NOCC,ONE,EVEC(IOFFE),NSIZ,
     &            SCR3,NOCC,ZILCH,SCR2,NSIZ)
       CALL SCOPY(NSIZ*NOCC,SCR2,1,EVEC(IOFFE),1)
C
       ENDIF
C
       IOFFE=IOFFE+NSIZ*NOCC
C
       IF (NEWPART) THEN
C
C NOW DIAGONALIZE VIRTUAL-VIRTUAL BLOCK OF FOCK MATRIX
C
       CALL BLKCPY2(SCR1,NSIZ,NSIZ,SCR2,NVRT,NVRT,NOCC+1,NOCC+1)
       CALL EIG(SCR2,SCR3,NVRT,NVRT,0)
       CALL SCOPY(NVRT*NVRT,SCR3,1,SCR5(IOFFWV),1)
       IOFFWV=IOFFWV+NVRT*NVRT
       CALL SCOPY(NVRT,SCR2,NVRT+1,EVAL(IOFFEVL),1)
       IOFFEVL=IOFFEVL+NVRT
       CALL XGEMM('N','N',NSIZ,NVRT,NVRT,ONE,EVEC(IOFFE),NSIZ,
     &            SCR3,NVRT,ZILCH,SCR2,NSIZ)
       CALL SCOPY(NSIZ*NVRT,SCR2,1,EVEC(IOFFE),1)
C
       ENDIF
C
       IOFFE=IOFFE+NSIZ*NVRT
C
       IOFFF=IOFFF+NNP1O2(NSIZ)
       IPOS=IPOS+NVRT+NOCC
10    CONTINUE
C
      IF (PRINT) THEN
        WRITE(6,*) ' EIGENVALUES NEWFOCK'
        CALL OUTPUT(EVAL,1,1,1,NBAS,1,NBAS,1)
      ENDIF
C
C  Now dump the canonical to semi-canonical transformation matrices.
C
        CALL PUTREC(20,'JOBARC',WLABEL(1,ISPIN),(IOFFWO-1)*IINTFP,SCR4)
        CALL PUTREC(20,'JOBARC',WLABEL(2,ISPIN),(IOFFWV-1)*IINTFP,SCR5)
C
C  Determine eigenvalues as diagonal elements of the original Fock-matrix
C  in the new basis
C
CSSS        CALL SCOPY(LDIM1, FOCK, 1, FOCKNEW, 1)
        CALL FAO2MO(FOCK,EVEC,SCR2,SCR3,POP,VRT,NIRREP)
        IOFFF = 1
        IOFFE = 1
        DO IRREP = 1, NIRREP
          NOCC=POP(IRREP)
          NVRT=VRT(IRREP)
          NSIZ=NOCC+NVRT    
          CALL EXPND2(FOCK(IOFFF),SCR1,NSIZ)
          IF (PRINT) THEN
            CALL OUTPUT(SCR1,1,NSIZ,1,NSIZ,NSIZ,NSIZ,2)
          ENDIF
          CALL SCOPY(NSIZ, SCR1, NSIZ+1, EVAL(IOFFE),1)
          IOFFF=IOFFF+NNP1O2(NSIZ)
          IOFFE = IOFFE + NSIZ
        ENDDO
        
C
      IF (PRINT) THEN
        WRITE(6,*) '  FINAL EIGENVALUES IN  NEWVRT '
        CALL OUTPUT(EVAL,1,1,1,NBAS,1,NBAS,1)
      ENDIF
C
        RETURN
        END
