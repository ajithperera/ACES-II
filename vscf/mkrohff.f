      SUBROUTINE MKROHFF(FA,FB,F,EX,CMO,SCR1,SCR2,NBAS,NOCC,
     &                   NTOTAL,NTOTAL2)
C
C THIS ROUTINE FORMS THE ROOTHAAN-TYPE FOCK MATRIX
C REQUIRED FOR ROHF HIGH SPIN OPEN SHELL CALCULATIONS
C
C INPUT
C 
C        FA ..... ALPHA FOCK MATRIX OF UHF-TYPE
C        FB ..... BETA FOCK MATRIX OF UHF TYPE
C        NBAS ... NUMBER OF BASIS FUNCTIONS PER IRREP
C        NOCC ... NUMBER OF OCCUPIED ORBITALS PER IRREP AND SPIN
C        NTOTAL . TOTAL SIZE OF SYMMETRY BLOCKED TRIANGULAR MATRICES
C        NTOTAL2  TOTAL SIZE OF SYMMETRY BLOCKED RECTANGULAR MATRICES
C
C OUTPUT
C
C         FA .... ROOTHAAN TYPE FOCK MATRIX
C
C SCRATCH
C
C         EX .... EXCHANGE CONTRIBUTION OF OPEN SHELL ORBITALS
C         F ..... AVERAGE FOCK MATRIX (1/2 FA + 1/2 FB)
C         CMO ... CMO VECTORS
C         SCR1,SCR2  ... SCRATCH VECTORS 
C
CEND
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DIRPRD
      DIMENSION FA(NTOTAL),FB(NTOTAL),F(NTOTAL),EX(NTOTAL),
     &          CMO(NTOTAL2),SCR1(1),SCR2(1),NBAS(8),NOCC(8,2)
      COMMON/MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPA(255,2),DIRPRD(8,8)
C
      DATA AZERO,HALF,ONE,ONEM /0.0D0,0.5D0,1.D0,-1.D0/
C
      INDX(I,J)=I*(I-1)/2+J
C FORM F AND K(OPEN)
C
      CALL VADD(F,FA,FB,NTOTAL,ONE)
      CALL SSCAL(NTOTAL,HALF,F,1)
C
CSSS      Write(6,*) "FA elements"
CSSS      write(6, "(6F10.5)") (FA(I), I=1, NTOTAL)
CSSS      Write(6,*) "FB elements"
CSSS      write(6, "(6F10.5)") (FB(I), I=1, NTOTAL)

      CALL VADD(EX,FB,FA,NTOTAL,ONEM)
C
C TRANSFORM F AND K(OPEN) TO MO BASIS
C
C GET THE MO VECTORS
C
       NBAST=0
       DO 2 IRREP=1,NIRREP
        NBAST=NBAST+NBAS(IRREP)
2      CONTINUE
      CALL GETREC(20,'JOBARC','MOVECTOR',NTOTAL2*IINTFP,CMO)
C 
C TRANSFORM
C
      IOFF1=1
      IOFF2=1
      DO 100 IRREP=1,NIRREP
       IF(NBAS(IRREP).EQ.0) GO TO 100
       CALL EXPND2(F(IOFF2),SCR1,NBAS(IRREP))
       CALL XGEMM('N','N',NBAS(IRREP),NBAS(IRREP),NBAS(IRREP),ONE,
     &            SCR1,NBAS(IRREP),CMO(IOFF1),NBAS(IRREP),AZERO,
     &            SCR2,NBAS(IRREP))
       CALL XGEMM('T','N',NBAS(IRREP),NBAS(IRREP),NBAS(IRREP),ONE,
     &            CMO(IOFF1),NBAS(IRREP),SCR2,NBAS(IRREP),AZERO,
     &            SCR1,NBAS(IRREP))
       CALL SQUEEZ(SCR1,NBAS(IRREP),0)
c YAU : old
c      CALL ICOPY(NBAS(IRREP)*(NBAS(IRREP)+1)/2*IINTFP,SCR1,1,F(IOFF2),1)
c YAU : new
       CALL DCOPY(NBAS(IRREP)*(NBAS(IRREP)+1)/2,SCR1,1,F(IOFF2),1)
c YAU : end
C
       CALL EXPND2(EX(IOFF2),SCR1,NBAS(IRREP))
       CALL XGEMM('N','N',NBAS(IRREP),NBAS(IRREP),NBAS(IRREP),ONE,
     &            SCR1,NBAS(IRREP),CMO(IOFF1),NBAS(IRREP),AZERO,
     &            SCR2,NBAS(IRREP))
       CALL XGEMM('T','N',NBAS(IRREP),NBAS(IRREP),NBAS(IRREP),ONE,
     &            CMO(IOFF1),NBAS(IRREP),SCR2,NBAS(IRREP),AZERO,
     &            SCR1,NBAS(IRREP))
       CALL SQUEEZ(SCR1,NBAS(IRREP),0)
c YAU : old
c      CALL ICOPY(NBAS(IRREP)*(NBAS(IRREP)+1)/2*IINTFP,SCR1,1,EX(IOFF2),1)
c YAU : new
       CALL DCOPY(NBAS(IRREP)*(NBAS(IRREP)+1)/2,SCR1,1,EX(IOFF2),1)
c YAU : end
       IOFF1=IOFF1+NBAS(IRREP)*NBAS(IRREP)
       IOFF2=IOFF2+NBAS(IRREP)*(NBAS(IRREP)+1)/2
100   CONTINUE
C
C FORM THE FR MATRIX
C
      IOFF=0
      DO 200 IRREP=1,NIRREP
       NCORE=MIN(NOCC(IRREP,1),NOCC(IRREP,2))
       NOPEN=NOCC(IRREP,1)-NOCC(IRREP,2)
       NVIRT=NBAS(IRREP)-NCORE-NOPEN
C
C DOCC-DOCC BLOCK
C
       DO 140 I=1,NCORE
       DO 140 J=1,I
        IND=IOFF+INDX(I,J)
C This is incorrect; does not match with -1/2FA +3/2FB, Ajith Perera
C 04/2010
CSSS        FA(IND)=F(IND)-EX(IND)
        FA(IND)=F(IND)+EX(IND)
140    CONTINUE
C
C SOCC-SOCC BLOCK
C
       DO 150 I=1,NOPEN
       DO 150 J=1,I
        IND=IOFF+INDX(I+NCORE,J+NCORE) 
        FA(IND)=F(IND) 
150    CONTINUE
C
C VIRT-VIRT BLOCK
C
       DO 160 I=1,NVIRT
       DO 160 J=1,I
        IND=IOFF+INDX(I+NCORE+NOPEN,J+NCORE+NOPEN)
C This is incorrect; does not match with 3/2FA - 1/2FB, Ajith Perera,
C 04/2010
CSSS        FA(IND)=F(IND)+EX(IND)
        FA(IND)=F(IND)-EX(IND)
160    CONTINUE
C
C DOOC-SOCC BLOCK
C
       DO 170 I=1,NOPEN
       DO 170 J=1,NCORE
        IND=IOFF+INDX(I+NCORE,J)
        FA(IND)=F(IND)+HALF*EX(IND)
170    CONTINUE
C
C VIRT-DOCC BLOCK
C
       DO 180 I=1,NVIRT
       DO 180 J=1,NCORE
        IND=IOFF+INDX(I+NCORE+NOPEN,J)
        FA(IND)=F(IND)
180    CONTINUE
C
C VIRT-SOCC BLOCK
C
       DO 190 I=1,NVIRT
       DO 190 J=1,NOPEN
        IND=IOFF+INDX(I+NCORE+NOPEN,J+NCORE)
        FA(IND)=F(IND)-HALF*EX(IND)
190    CONTINUE
C
C UPDATE OFFSET
C
       IOFF=IOFF+NBAS(IRREP)*(NBAS(IRREP)+1)/2
200   CONTINUE
C
C ALL DONE
C
      RETURN
      END
