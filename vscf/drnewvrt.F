      SUBROUTINE DRNEWVRT(ONEH,SHALF,DENS,FOCK,EVAL,EVEC,ISCR,
     &                  SCR3,FOCKNEW,LDIM1,LDIM2,LDIM3,NBAS,
     &   IUHF)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION ONEH(LDIM1),SHALF(LDIM1)
      DIMENSION DENS((IUHF+1)*LDIM1),FOCK((IUHF+1)*LDIM1)
      DIMENSION EVEC((IUHF+1)*LDIM2),EVAL((IUHF+1)*NBAS)
      DIMENSION ISCR(NBAS),SCR3(5*LDIM2),FOCKNEW((IUHF+1)*LDIM1)
      DIMENSION NOCC(16)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /POPUL/ NOCC
#include "symm2.com"
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /FLAGS2/ IFLAGS2(500)
C
C DETERMINE NELEC
C
      NELEC = 0
      DO I = 1, 16
        NELEC = NELEC + NOCC(I)
      ENDDO
C
      IOFF1=1
      IOFF2=1
      IOFF3=1
      DO 100 ISPIN=1,(IUHF+1)
        CALL IZERO(ISCR,MAX(2*NIRREP,NBAS))
        DO 110 J=1,NIRREP
          ISCR(J)=NOCC((ISPIN-1)*8+J)
          ISCR(NIRREP+J)=NBFIRR(J)-ISCR(J)
  110   CONTINUE
C
C IF V(N-1) ORBITALS ARE TO BE USED, THEN MAKE THAT
C  TRANSFORMATION NOW
C
        IF(IFLAGS2(121).EQ.1)THEN
         IF(ISPIN.EQ.1) THEN
          WRITE(LUOUT,5000)
 5000     FORMAT(T3,'@NEWVRT-I, Rotating orbitals to V(N-1) ',
     &              'basis.',/,
     &           T14,'*** Eigenvalues correspond to new basis. ***',/)
         ENDIF
         I000=1
         I010=I000+LDIM2
         I020=I010+LDIM2
         I030=I020+LDIM2
         I040=I030+LDIM2
         CALL NEWVRT(FOCK(IOFF1), ONEH, SHALF, NELEC,
     &      FOCKNEW(IOFF1),EVEC(IOFF2),EVAL(IOFF3),
     &               SCR3(I000),SCR3(I010),SCR3(I020),
     &      SCR3(I030),SCR3(I040),
     &               ISCR,ISCR(NIRREP+1),NBAS,LDIM1,LDIM2,
     &               LDIM3,NIRREP,ISPIN,.FALSE., .TRUE.)
C
        ENDIF
C
        IOFF1=IOFF1+LDIM1
        IOFF2=IOFF2+LDIM2
        IOFF3=IOFF3+NBAS 
  100 CONTINUE
C
      RETURN
      END
