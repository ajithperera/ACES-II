
      SUBROUTINE LINEQSC(N,B,XGUESS,CVECS,NBAS,IAABEG,FOCK,IUHF,
     &                   LDIM1,LDIM2,LDIM3,NDET,RESIDUE,D1,D2,
     &                   SCR1,XNEW,SCRA,SCRB,SCRTMP,RAA,G1AA,G2AA)
C
C
C     WRITTEN BY DeCARLOS TAYLOR JULY 2005
C
C
C     THIS SUBROUTINE WILL SOLVE THE SET
C     OF LINEAR EQUATIONS (A+B)C=-F FOR THE
C     SET OF COEFFICIENTS C NEEDED TO
C     DO QUADRATICALLY CONVERGENT SCF USING
C     THE CONJUGATE GRADIENT METHOD
C
C     THE A AND B MATRICES ARE NOT CONSTRUCTED
C     EXPLICITLY BUT INSTEAD CONTRACTED WITH THE
C     TRIAL VECTORS ON THE FLY IN SUBROUTINE BUILDA.
C     THEREFORE MANY PASSES THROUGH THE INTEGRAL FILES ARE NECESSARY
C
C
C     THE INTERMEDIATES RAA,G1AA,G2AA IN BUILDA ARE THOSE GIVEN
C     IN BACKSKAY'S PAPER WHICH I GENERALIZED TO UHF
C     NOTE THAT RAA AND G2AA MATRICES ARE NOT(!) SYMMETRIC!
C

      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
#include "flags.com"
#include "machsp.com"
#include "symm2.com"

      PARAMETER(SMALL=1D-15,ITMAX=300,ZILCH=0.0D0,ONE=1.0D0)
      DIMENSION B(N)
      DIMENSION RESIDUE(N),XGUESS(N)
      DIMENSION CVECS(NBAS,NBAS)
      DIMENSION FOCK((IUHF+1)*LDIM1)
      DIMENSION IAABEG(16),NDET(16)
      DIMENSION INDR(NBAS,NBAS)
      DIMENSION D1(N),D2(N),SCR1(N),XNEW(N)
      DIMENSION SCRA(LDIM2),SCRB(LDIM2),SCRTMP(LDIM2),
     $RAA(LDIM3*(IUHF+1)),G1AA(LDIM3*(IUHF+1)),G2AA(LDIM3*(IUHF+1))

C COMPUTE SOME INTEGRAL OFFSETS FOR THE R/G INTERMEDIATES
C I WILL BUILD ON THE FLY. THIS IS NECESSARY SINCE THE
C R/G MATRICES ARE NOT SYMMETRIC
C MOVE THIS INTO CALLING ROUTINE IN VSCF SO IT IS ONLY COMPUTED ONCE
      ICOUNT=1
      DO I=1,NIRREP
         ISTART=IREPS(I)
         IEND=IREPS(I)+NBFIRR(I)-1
         DO J=ISTART,IEND
         DO K=ISTART,IEND
            INDR(K,J)=ICOUNT
            ICOUNT=ICOUNT+1
         END DO
         END DO
      END DO

      CALL BUILDA(CVECS,NBAS,XGUESS,RESIDUE,N,IAABEG,FOCK,
     &            LDIM1,IUHF,LDIM3,INDR,NDET,LDIM2,D2,RAA,G1AA,G2AA,
     &            SCRA,SCRB,SCRTMP)
      CALL DAXPY(N,-1.0d0,B,1,RESIDUE,1)
      RNORM=DDOT(N,RESIDUE,1,RESIDUE,1)
c      PRINT*,'Conjugate gradient...'
c      PRINT*,'INITIAL ERROR',DSQRT(RNORM)
      IF(DSQRT(RNORM).LT.1d-8)RETURN
      DELTA=1.0D-3
      IF(DSQRT(RNORM).LT.DELTA)DELTA=DSQRT(RNORM)/100.0D0

      CALL DCOPY(N,RESIDUE,1,D1,1)
      CALL DSCAL(N,-1.0d0,D1,1)

      CALL BUILDA(CVECS,NBAS,D1,SCR1,N,IAABEG,FOCK,
     &            LDIM1,IUHF,LDIM3,INDR,NDET,LDIM2,D2,RAA,G1AA,G2AA,
     &            SCRA,SCRB,SCRTMP)
      TOP=DDOT(N,RESIDUE,1,D1,1)
      BOTTOM=DDOT(N,D1,1,SCR1,1)
      ALPHA=-TOP/BOTTOM
C      CALL DCOPY(N,D1,1,D2,1)
C      CALL DSCAL(N,ALPHA,D2,1)
C      CALL DAXPY(N,1.0d0,D2,1,XGUESS,1)
      CALL DAXPY(N,ALPHA,D1,1,XGUESS,1)

      ITER=0
 30   ITER=ITER+1
      CALL DCOPY(N,RESIDUE,1,D2,1)
C      CALL DSCAL(N,ALPHA,SCR1,1)
      CALL DAXPY(N,ALPHA,SCR1,1,RESIDUE,1)
      RNORM=DDOT(N,RESIDUE,1,RESIDUE,1)
c      PRINT*,ITER,DSQRT(RNORM)
      IF(DSQRT(RNORM).LT.DELTA .OR. ITER.GT.40)THEN
c        PRINT*,'Linear equations converged to ',DSQRT(RNORM),
c     $         ' in ',ITER,' cycles'
        DO I=1,N
          IF(DABS(XGUESS(I)).LT.SMALL)XGUESS(I)=ZILCH
        END DO
        CALL DCOPY(N,XGUESS,1,B,1)
        GOTO 31
      END IF
C      TOP=DDOT(N,RESIDUE,1,SCR1,1)
C      BOTTOM=DDOT(N,D1,1,SCR1,1)
C      BETA=TOP/BOTTOM
      CALL DCOPY(N,RESIDUE,1,XNEW,1)
      CALL DAXPY(N,-1.0D0,D2,1,XNEW,1)
      TOP=DDOT(N,RESIDUE,1,XNEW,1)
      BOTTOM=DDOT(N,D2,1,D2,1)
      BETA=TOP/BOTTOM
      CALL DSCAL(N,BETA,D1,1)
      CALL DAXPY(N,-1.0d0,RESIDUE,1,D1,1)
      CALL BUILDA(CVECS,NBAS,D1,SCR1,N,IAABEG,FOCK,
     &            LDIM1,IUHF,LDIM3,INDR,NDET,LDIM2,D2,RAA,G1AA,G2AA,
     &            SCRA,SCRB,SCRTMP)
      TOP=DDOT(N,RESIDUE,1,D1,1)
      BOTTOM=DDOT(N,D1,1,SCR1,1)
      ALPHA=-TOP/BOTTOM
C      CALL DCOPY(N,D1,1,D2,1)
C      CALL DSCAL(N,ALPHA,D2,1)
      CALL DAXPY(N,ALPHA,D1,1,XGUESS,1)
      GOTO 30
 31   CONTINUE

      RETURN
      END

