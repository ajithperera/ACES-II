C   *********** WARNING ********* Highly experimental.
C
C THIS ROUTINE DETERMINES THE IRREDUCIBLE REPRESENTATION TO WHICH
C  MOLECULAR ORBITALS BELONG, USING A MODEST GENERALIZATION OF THE
C  ALGORITHM USED IN JODA FOR DETERMINING SYMMETRIES OF NORMAL MODES.
C
      SUBROUTINE MIRRORB(EVEC,EVAL,SCR,IANGMOM,ICENTER,NBAS,IRRSYM,
     &                   SYOPS,SCR1,IBFATM,ILCATM,Z,NATOMS,iblk,NBASX,
     &                   MOSYMOK,IUHF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (MXATMS=55)
      CHARACTER*4 IRREP,PTGRP
      CHARACTER*8 SITGRP(MXATMS),IRRSYM(NBAS)
      character*(8*mxatms) szSitGrpTmp

      logical MOSYMOK

      DIMENSION EVEC(NBASX,NBAS),SCR(1),IANGMOM(NBASX)
      DIMENSION ICENTER(NBASX),SCR1(1),Z(1)
      DIMENSION IBFATM(NATOMS),ILCATM(NATOMS),IPTR(MXATMS*120)
      DIMENSION EVAL(NBAS),SYOPS(1080),ORIENT(9)
      DIMENSION JFLAGS(16)
C      
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FLAGS/  IFLAGS(100)
      DATA IONE /1/
      DATA I16 /16/
      DEGTOL=0.00001
C
C PICK UP THE FOLLOWING INFORMATION FROM THE JOBARC FILE:
C
C      1. SCF EIGENVECTORS IN FULL FILLED-OUT AO BASIS.
C      2. ANGULAR MOMENTUM OF EACH BASIS FUNCTION.
C      3. ATOMIC CENTER WHERE EACH BASIS FUNCTION IS LOCATED.
C      4. NUMBER OF ORBITS IN FULL MOLECULAR POINT GROUP.
C      5. ORBIT POPULATION VECTOR IN FULL MOLECULAR POINT GROUP.
C      6. CENSUS VECTOR (TELLS WHICH ATOMS BELONG TO EACH ORBIT).
C      7. PERMUTATION VECTOR FOR ALL SYMMETRY OPERATIONS.
C
c  Let's put in the stuff to do the computational point group as well
c
      CALL GETREC(20,'JOBARC','JODAFLAG',I16,JFLAGS)
      IGEN=JFLAGS(14)
      NBAS2=NBAS*NBASX 
      if(iblk.eq.1) then
        CALL GETREC(-1,'JOBARC','EVECAO_A',IINTFP*NBAS2,EVEC)
      else
        CALL GETREC(-1,'JOBARC','EVECAO_B',IINTFP*NBAS2,EVEC)
      endif
      CALL GETREC(-1,'JOBARC','EVALORDR',IINTFP*NBAS,EVAL)
      CALL GETREC(-1,'JOBARC','ANMOMBF0',NBASX,IANGMOM)
      CALL GETREC(-1,'JOBARC','CNTERBF0',NBASX,ICENTER)
       CALL GETCREC(-1,'JOBARC','COMPPTGP',4,PTGRP)
       CALL GETCREC(-1,'JOBARC','COMPSTGP',8*NATOMS,szSitGrpTmp)
       CALL GETREC(-1,'JOBARC','COMPORDR',IONE,IORDGRP)
       CALL GETREC(-1,'JOBARC','COMPPERM',IORDGRP*NATOMS,IPTR)
       CALL GETREC(-1,'JOBARC','COMPSYOP',IINTFP*9*IORDGRP,SYOPS)
      CALL GETREC(-1,'JOBARC','ORIENTMT',IINTFP*9,ORIENT)
c   o 'compress' szSitGrpTmp into the 2-D SITGRP array
      iNdx = 1
      do i = 1, NATOMS
         SITGRP(i)(1:8) = szSitGrpTmp(iNdx:iNdx+7)
         iNdx = iNdx + 8
      end do
C
C IF THIS IS A LINEAR MOLECULE, THE FULL POINT GROUP ON DISK
C  IS ACTUALLY A SUBGROUP OF THE REAL ONE.  RESET THE VALUE HERE.
C
      IF(PTGRP(1:3).EQ.'C8v'.OR.PTGRP(1:3).EQ.'D8h')THEN
       CALL GETREC(20,'JOBARC','LINEAR  ',IONE,LINEAR)
       IF (LINEAR.EQ.1) PTGRP(2:2)='X'
      ENDIF
C
C TRANSFORM ALL SYMMETRY OPERATIONS TO THE COMPUTATIONAL ORIENTATION
C
      DO I=1,NBAS
       IRRSYM(I)='XXXX    '
      END DO
C
C NOW WE HAVE EVERYTHING WE NEED TO DETERMINE ALL OF THE IRREPS.
C  LOOP OVER MOLECULAR ORBITALS AND COPY ALL BASIS FUNCTIONS OF
C  A PARTICULAR ANGULAR MOMENTUM TYPE INTO A SCRATCH VECTOR
C
C
      DO IMO=1,NBAS
C
C CHECK FOR DEGENERACIES SKIP LOOP IF THE IRREP HAS ALREADY BEEN 
C  SET.  (THIS MEANS THAT IT IS NECESSARILY DEGENERATE WITH THE
C  PREVIOUS IRREP).
C
       IF(IRRSYM(IMO)(1:4).EQ.'XXXX')THEN
       NDEG=0
       ITOP=MIN(NBAS,IMO+5)
       DO I=IMO+1,MIN(IMO+5,NBAS+1)
c YAU: WHAT IS THIS NONSENSE? EVAL is only declared with NBAS doubles
c      and yet we are reading EVAL(NBAS+1) when IMO > NBAS-5.
        Z1=ABS(EVAL(I)-EVAL(IMO))
        NDEG=NDEG+1
        IF(Z1.GT.DEGTOL)GOTO 999
       END DO
       NDEG=MAX(NDEG,1)
C       
999    CONTINUE
       ndeg=1
       IRREP='XXXX'
       ITOTLN=0
       LENMAX=-1
       IOFFD0=0
       DO IDEG=1,NDEG
        LANG=-1
        DO IANG=0,5
        IF (LANG.EQ.-1) THEN
         DO I=1,NATOMS
          ILCATM(I)=-1
          IBFATM(I)=-1
         END DO
         IOFF=1
         DO IBF=1,NBASX
          IF(IANGMOM(IBF).EQ.IANG)THEN
           SCR(IOFF+IOFFD0)=EVEC(IBF,IMO+IDEG-1)
           IBFATM(ICENTER(IBF))=IBFATM(ICENTER(IBF))+1
           IF(ILCATM(ICENTER(IBF)).EQ.-1)THEN
            ILCATM(ICENTER(IBF))=IOFF
            IBFATM(ICENTER(IBF))=1
           ENDIF
           IOFF=IOFF+1
          ENDIF
         END DO
         LEN=IOFF-1
C
C CHECK TO MAKE SURE THAT THE EIGENVECTOR ONLY HAS NONZERO
C   ENTRIES FOR AN ATOM WHOSE SITE GROUP IS THE SAME AS THE POINT
C   GROUP OF THE MOLECULE.  IF THIS IS TRUE, THEN IT IS NECESSARY
C   TO USE THE P FUNCTION REPRESENTATION.
C
         IOK=1
         IF(IANG.EQ.0)THEN
          IOK=0
          CALL CHKVEC(SCR(IOFFD0+1),LEN,NATOMS,PTGRP,SITGRP,
     &                IBFATM,IOK)
         ENDIF
C
C CHECK ALSO TO MAKE SURE THAT THIS EIGENVECTOR HAS A NONZERO LENGTH
C
         X=SNRM2(LEN,SCR(IOFFD0+1),1)
         IF(DABS(X).LT.1.D-06)IOK=0
         IF(IOK.EQ.0)LEN=0
         IF(LEN.NE.0)THEN
          LANG=IANG
          LENMAX=MAX(LEN,LENMAX)
          ITOTLN=ITOTLN+IOFF-1
         ENDIF
c       END IF (LANG.EQ.-1)
        END IF
        END DO
        IOFFD0=IOFFD0+LEN
       END DO
       IF((JFLAGS(16).EQ.1.AND.LANG.GE.2).OR.LANG.GE.5) THEN
         IRREP='----'
       ELSE
         CALL IRREPGET(PTGRP,IORDGRP,Z,SCR,ITOTLN,LEN,LENMAX,NDEG,IPTR,
     &                 IBFATM,ILCATM,SYOPS,SCR1,NATOMS,IRREP,
     &                 NBAS,NBASX,LANG)
       ENDIF
       IRRSYM(IMO)(1:4)=IRREP
       IF(NDEG.GT.1)THEN
        DO I=1,NDEG-1
         IRRSYM(IMO+I)(1:4)=IRREP
        END DO
       ENDIF
c      END IF (IRRSYM(IMO)(1:4).EQ.'XXXX')
       END IF
      END DO
      if(iblk.eq.1) then
          CALL PUTCREC(20,'JOBARC','EVCSYMAC',8*NBAS,IRRSYM)
      else
          CALL PUTCREC(20,'JOBARC','EVCSYMBC',8*NBAS,IRRSYM)
      endif

      IF(IFLAGS(1) .GE. 10)THEN
       write(6,*) ' @irrorb-i, irrsym arrays '
       write(6,*) ' alpha '
       CALL GETREC(-1,'JOBARC','EVCSYMAC',IINTFP*NBAS,IRRSYM)
       do 1200 i=1,nbas
       write(6,*) irrsym(i)
 1200  continue
c
       write(6,*) ' beta '
       if(iuhf.GT.0.and.iblk.eq.2)THEN
        CALL GETREC(-1,'JOBARC','EVCSYMBC',IINTFP*NBAS,IRRSYM)
        do 1300 i=1,nbas
        write(6,*) irrsym(i)
 1300   continue
       endif
      ENDIF
C
C     Check if MOs transform as irreducible representations of the
C     computational point group.
C
      MOSYMOK = .TRUE.
      DO 1500 ISPIN=1,IUHF+1
C
      IF(ISPIN.EQ.1)THEN
       CALL GETREC(20,'JOBARC','EVCSYMAC',IINTFP*NBAS,IRRSYM)
      ELSE
C There is nothing to write for IUHF when IBLK=1
       IF (IBLK.EQ.1) RETURN
       CALL GETREC(20,'JOBARC','EVCSYMBC',IINTFP*NBAS,IRRSYM)
      ENDIF
C
      DO 1490 IMO=1,NBAS
C
      IF(IRRSYM(IMO) .EQ. '    ')THEN
       WRITE(6,2000) ISPIN,IMO
       MOSYMOK = .FALSE.
      ENDIF
C
 1490 CONTINUE
 1500 CONTINUE
      RETURN
 2000  FORMAT(' @IRRORB-I, Spin ',I3,' Orbital ',I5,
     &        ' is not symmetry-adapted. ')
      END
