
C     THIS SUBROUTINE WILL DO A QCSCF UPDATE OF ORBITALS
C     WRITTEN BY CARLOS TAYLOR JUNE 2005

      SUBROUTINE QCSCF(NBAS,NDIM,NDET,FOCK,LDIM1,LDIM2,LDIM3,
     $                 IUHF,EVEC,FVEC,XTRIAL,CVECS,SOVER,
     $                 SCR1,SCRA,SCRB,SCRTMP,RESIDUE,D1,D2,D3,D4,
     $                 RAA,G1AA,G2AA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION NOCC(16)
      COMMON /POPUL/ NOCC
#include "machsp.com"
#include "flags.com"
#include "symm2.com"

      PARAMETER(IPRINT=0,ONE=1.0D0,ZERO=0.0D0)
      PARAMETER(SMALL=1D-9)
      INTEGER NDET(16)
      DIMENSION FVEC(NDIM),XTRIAL(NDIM)
      DIMENSION IAABEG(16)
      DIMENSION FOCK((IUHF+1)*LDIM1),EVEC((IUHF+1)*LDIM3)
      DIMENSION CVECS(NBAS,NBAS),SOVER(NBAS,NBAS)
      DIMENSION SCR1(LDIM2),SCRA(LDIM2),SCRB(LDIM2),SCRTMP(LDIM2)
      DIMENSION RESIDUE(NDIM),D1(NDIM),D2(NDIM),D3(NDIM),D4(NDIM),
     $RAA(LDIM3*(IUHF+1)),G1AA(LDIM3*(IUHF+1)),G2AA(LDIM3*(IUHF+1))
      CHARACTER*8 SCFREC(2)
      DATA SCFREC /'SCFEVCA0','SCFEVCB0'/

c     PRINT*,'@QCSCF'
      DO I=1,NDIM
         FVEC(I)=0.0D0
         XTRIAL(I)=0.0D0
      END DO

      DO I=1,(IUHF+1)*LDIM3
         EVEC(I)=ZERO
      END DO

C COMPUTE TOTAL # OF ALPHA->ALPHA
C AND BETA->BETA ROTATION COEFFICIENTS
C ALSO, DETERMINE OFFSET OF FIRST ALPHA->ALPHA
C AND FIRST BETA->BETA ROTATION COEFFICIENT
C BY IRREP AND SPIN

      NROTA=0
      NROTB=0
      DO I=1,NIRREP
         NROTA=NROTA+NDET(I)
         NROTB=NROTB+NDET(I+8)
      END DO
C      PRINT*,'NROTA NROTB',NROTA,NROTB

      IAABEG(1)=1
      DO I=1,15
         IAABEG(I+1)=IAABEG(I)+NDET(I)
      END DO
c      print*,'iaabeg by irrep debug'
c      DO I=1,NIRREP
c         PRINT*,IAABEG(I),IAABEG(I+8)
c      END DO

C TRANSFORM FOCK MATRIX TO MO BASIS AND BUILD -F VECTOR
C FOR EQUATION (A+B)X=-F.
C ALSO CONSTRUCT INITIAL GUESS FOR X (XTRIAL)
C WHICH IS X(IA)=-F(I,A)/[FOCK(A,A)-FOCK(I,I)]

      DO ISPIN=1,1+IUHF
         CALL GETREC(1,'JOBARC',SCFREC(ISPIN),NBAS*NBAS*IINTFP,CVECS)
         DO  I=1,NIRREP
         IF(NBFIRR(I).NE.0)THEN
           CALL EXPND2(FOCK(((ISPIN-1)*LDIM1)+ITRIOF(I)),
     $                 SCR1,NBFIRR(I))
           CALL GETBLK(CVECS,SCRA,NBFIRR(I),NBAS,IREPS(I))
           CALL TRANSP(SCRA,SCRB,NBFIRR(I),NBFIRR(I))
           CALL MXM(SCRB,NBFIRR(I),SCR1,NBFIRR(I),SCRTMP,NBFIRR(I))
           CALL MXM(SCRTMP,NBFIRR(I),SCRA,NBFIRR(I),SCRB,NBFIRR(I))
           CALL SQUEZ2(SCRB,FOCK(((ISPIN-1)*LDIM1)+ITRIOF(I)),NBFIRR(I))
         END IF
         END DO
      END DO

      DO ISPIN=1,2
         DO I=1,NIRREP
         IF( NDET( I+ (ISPIN-1)*8 ) .NE .0 )THEN
           IROW=IAABEG(I + (ISPIN-1)*8 )
           NOCCA=NOCC(I + (ISPIN-1)*8 )
           CALL EXPND2(FOCK(((ISPIN-1)*LDIM1*IUHF)+ITRIOF(I)),
     $                 SCR1,NBFIRR(I))
           CALL QCDUMPF(FVEC(IROW),XTRIAL(IROW),SCR1,NBFIRR(I),
     $                  NOCCA,NDET(I+ (ISPIN-1)*8))
         END IF
         END DO
      END DO

C      RMAXA=0.0D0
C      RMAXB=0.0D0
C      DO I=1,NROTA
C      IF(DABS(FVEC(I)).GT.RMAXA)RMAXA=DABS(FVEC(I))
C      END DO
C      DO I=NROTA+1,NDIM
C      IF(DABS(FVEC(I)).GT.RMAXB)RMAXB=DABS(FVEC(I))
C      END DO
C      PRINT*,'LARGEST ALPHA F(I,A) MATRIX ELEMENT',RMAXA
C      PRINT*,'LARGEST BETA  F(I,A) MATRIX ELEMENT',RMAXB

C      PRINT*,'TRIAL VEC NOT NORMALIZED'
c      DO I=1,NDIM
c      PRINT*,I,XTRIAL(I)
c      END DO

C    SOLVE THE EQUATIONS
      DO I=1,NDIM
         IF(DABS(XTRIAL(I)).LT.SMALL)XTRIAL(I)=ZERO
c         IF(DABS(FVEC(I)).LT.SMALL)FVEC(I)=ZERO
      END DO

C USE ITERATIVE SUBSPACE EXPANSION
c       CALL LINEQS(NDIM,FVEC,XTRIAL,CVECS,NBAS
c     $,IAABEG,FOCK,IUHF,LDIM1,LDIM3,NDET)
C USE CONJUGATE GRADIENT
      CALL LINEQSC(NDIM,FVEC,XTRIAL,CVECS,NBAS,IAABEG,FOCK,IUHF,
     &             LDIM1,LDIM2,LDIM3,NDET,RESIDUE,D1,D2,D3,D4,
     &             SCRA,SCRB,SCRTMP,RAA,G1AA,G2AA)

C FVEC HOLDS THE ORBITAL ROTATION COEFFICIENTS
      RNORM=DDOT(NDIM,FVEC,1,FVEC,1)
      RNORM=ONE/DSQRT(ONE+RNORM)
      DO I=1,NDIM
         FVEC(I)=FVEC(I)*RNORM
      END DO

      RMAX=1D-20
      DO I=1,NDIM
         RMAX=MAX(RMAX,ABS(FVEC(I)))
      END DO
c      PRINT*,'LARGEST OCCUPIED-VIRTUAL MIXING COEFFICIENT',RMAX

C THIS LOOP IS A BEAST! HERE WE WILL ROTATE TO THE NEW ORBITAL SET,
C SCHMIDT ORTHOGONALIZE NEW OCCUPIED SPACE AND ALSO SCHMIDT ORTHOGONALIZE
C OLD VIRTUALS TO NEW OCCUPIEDS FOR USE IN NEXT QCSCF ITERATION.
C NOTE THAT THESE VIRTUALS ARE NOT THE CANONICAL VIRTUAL SET
C THEREFORE AFTER QCSCF CONVERGES THE FOCK MATRIX WILL HAVE TO
C BE CONSTRUCTED AND DIAGONALIZED FOR CORRELATION CALCULATIONS

C  PICK UP OVERLAP MATRIX
      CALL GETREC(20,'JOBARC','AOOVRLAP',NBAS*NBAS*IINTFP,SOVER)
      DO ISPIN=1,1+IUHF
         CALL GETREC(1,'JOBARC',SCFREC(ISPIN),NBAS*NBAS*IINTFP,CVECS)
         DO I=1,NIRREP
         IF( NDET( I + (ISPIN-1)*8)  .NE.  0)THEN
           CALL GETBLK(CVECS,SCRA,NBFIRR(I),NBAS,IREPS(I))
           NOCCA=NOCC(I + (ISPIN-1)*8 )
           NVIRTA=NBFIRR(I)-NOCCA
           NROWA=NOCCA*NBFIRR(I)+1
           NROWB=IAABEG(I + (ISPIN-1)*8 )
           CALL MXM(SCRA(NROWA),NBFIRR(I),FVEC(NROWB),
     $              NVIRTA,SCR1,NOCCA)
           KDIM=NROWA-1
           CALL DAXPY(KDIM,ONE,SCR1,1,SCRA,1)
C NEW OCCUPIED ORBITALS ARE IN NOW SCRA

C SCHMIDT ORTHOGONALIZE NEW OCCUPIED SPIN ORBITALS

           CALL GETBLK(SOVER,SCRTMP,NBFIRR(I),NBAS,IREPS(I))
           DO K=2,NOCCA
              INDEXK=NBFIRR(I)*(K-1)+1
              DO L=1,K-1
                 INDEXL=NBFIRR(I)*(L-1)+1
                 CALL DSYMV('U',NBFIRR(I),ONE,SCRTMP,NBFIRR(I),
     $                      SCRA(INDEXL),1,ZERO,SCRB,1)
                 TOP=DDOT(NBFIRR(I),SCRA(INDEXK),1,SCRB,1)
                 BOTTOM=DDOT(NBFIRR(I),SCRA(INDEXL),1,SCRB,1)
                 TOP=-TOP/BOTTOM
                 CALL DAXPY(NBFIRR(I),TOP,SCRA(INDEXL),1,SCRA(INDEXK),1)
              END DO
           END DO

C ORTHOGONALIZE OLD VIRTUAL SET TO NEW OCCUPIED SET
           DO K=NOCCA+1,NBFIRR(I)
              INDEXK=NBFIRR(I)*(K-1)+1
              DO L=1,K-1
                 INDEXL=NBFIRR(I)*(L-1)+1
                 CALL DSYMV('U',NBFIRR(I),ONE,SCRTMP,NBFIRR(I),
     $                      SCRA(INDEXL),1,ZERO,SCRB,1)
                 TOP=DDOT(NBFIRR(I),SCRA(INDEXK),1,SCRB,1)
                 BOTTOM=DDOT(NBFIRR(I),SCRA(INDEXL),1,SCRB,1)
                 TOP=-TOP/BOTTOM
                 CALL DAXPY(NBFIRR(I),TOP,SCRA(INDEXL),1,SCRA(INDEXK),1)
              END DO
           END DO

C NORMALIZE NEW SET AND WE ARE DONE!!!!!
C SCRTMP STILL HOLDS OVERLAP MATRIX
           CALL TRANSP(SCRA,SCRB,NBFIRR(I),NBFIRR(I))
           CALL MXM(SCRB,NBFIRR(I),SCRTMP,NBFIRR(I),SCR1,NBFIRR(I))
           CALL MXM(SCR1,NBFIRR(I),SCRA,NBFIRR(I),SCRTMP,NBFIRR(I))
           DO K=1,NBFIRR(I)
C COMPUTE OFFSET FOR DIAGONAL ELEMENT AND SCALE EACH ORBITAL
              JDIAG=NBFIRR(I)*(K-1)
              IDIAG=JDIAG+K
              RNORM=SCRTMP(IDIAG)
              RNORM=ONE/DSQRT(RNORM)
              CALL DSCAL(NBFIRR(I),RNORM,SCRA(JDIAG+1),1)
           END DO

c           PRINT*,'NORMALIZED FULL SPACE'
c           CALL MATPRT(SCRA,NBFIRR(I),NBFIRR(I),NBFIRR(I),NBFIRR(I))
c           CALL PUTBLK(CVECS,SCRA,NBFIRR(I),NBAS,IREPS(I))
c           open(unit=1,file='orbs')
c           write(1,*)scra
c           close(1)
           CALL DCOPY(ISQRLN(I),SCRA,1,
     &                EVEC(((ISPIN-1)*LDIM3)+ISQROF(I)),1)

         END IF
         END DO
      END DO

C THIS IS A FIX TO HANDLE IRREPS WHICH HAVE NO SYMMETRY/SPIN ALLOWED ROTATIONS.
C THE COEFFICIENTS SHOULD REMAIN WHAT THEY WERE FROM THE PREVIOUS
C ITERATION BUT THEY ARE BEING OVERWRITTEN IN SOME OTHER SUBROUTINE
C WHICH USES THE SAME SPACE AS EVEC SO COPY THE OLD MO COEFFICIENT
C TO THE NEW EVEC
      DO ISPIN=1,1+IUHF
         CALL GETREC(1,'JOBARC',SCFREC(ISPIN),NBAS*NBAS*IINTFP,CVECS)
         DO I=1,NIRREP
c         IF(NOCC(I + (ISPIN-1)*8 ).EQ.1  .and. NBFIRR(I).EQ.1)THEN
         IF( NDET( I + (ISPIN-1)*8) .EQ. 0 )THEN
           CALL GETBLK(CVECS,SCRA,NBFIRR(I),NBAS,IREPS(I))
           CALL DCOPY(ISQRLN(I),SCRA,1,
     &                EVEC(((ISPIN-1)*LDIM3)+ISQROF(I)),1)
         END IF
         END DO
      END DO

c      PRINT*,'ROTATED ORBITALS AT END OF CIS3'
c      DO ISPIN=1,1+IUHF
c      DO I=1,NIRREP
c      IF(NBFIRR(I).NE.0)THEN
c         CALL OUTPUT(EVEC(((ISPIN-1)*LDIM3)+ISQROF(I)),NBFIRR(I),
c     $               1,NBFIRR(I),NBFIRR(I),NBFIRR(I),1)
c      end if
c      END DO
c      END DO

 20   FORMAT(F10.5,F10.5)

      RETURN
      END

