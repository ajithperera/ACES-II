
      SUBROUTINE PROJECT(NATOMS,NBASIS,IORDGRP,ICENTER,IANGMOM,
     &                   ILCATM,NBFATM,NUMANG,IPTR,SYOP,SCR,
     &                   PRJDEN,ORGDEN,IUHF,ICORR,NBASX)
C
C FOR SPHERICAL HARMONICS:
C
C NBASX = NUMBER OF BASIS FUNCTIONS
C NBASIS= NUMBER OF BASIS FUNCTIONS IN FULL (6d,10f,etc) FORMAT 
C
C OTHERWISE, THEY ARE EQUAL
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(TOL=1.D-6)
      CHARACTER*5 SPCASE(2),USPCASE(2)
      CHARACTER*8 VECLAB(4),OCCLAB(4),JNKLAB
      CHARACTER*1 SP(2)
      LOGICAL SYMFAIL(2)
      DIMENSION ICENTER(NBASIS),IANGMOM(NBASIS)
      DIMENSION ILCATM(NATOMS),NBFATM(NATOMS),NUMANG(NATOMS,5)
      DIMENSION SYOP(9*IORDGRP),IPTR(NATOMS,IORDGRP)
      DIMENSION SCR(1)
      DIMENSION PRJDEN(NBASIS*NBASIS),ORGDEN(NBASIS*NBASIS)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /FILES/ LUOUT,MOINTS
      COMMON /FLAGS/ IFLAGS(100)
      COMMON /KILLS/ KILLFLG(3)
C
      DATA IONE /1/
      DATA ONE /1.0/
      DATA ONEM/-1.0/
      DATA ZILCH /0.0/
      DATA ZMINV /1.D-7/
      DATA VECLAB /'SCFEVCA0','SCFEVCB0','AONTORBA','AONTORBB'/
      DATA JNKLAB /'GARBAGE '/
      DATA OCCLAB /'OMEGA_A ','OMEGA_B ','OCCNUM_A','OCCNUM_B'/
      DATA SPCASE /'alpha','beta '/
      DATA USPCASE/'Alpha','Beta '/
      DATA  SP    /'A','B'/
C
      IPRINT=0
      SYMFAIL(1)=.FALSE.
      SYMFAIL(2)=.FALSE.
C
C  Window-dressing WRITE statement (puts out a blank line)
C
      WRITE(LUOUT,5110)
C
C READ EIGENVECTORS INTO CORE AND FORM DENSITY IN FULL AO BASIS
C
      I000=1
      I010=I000+NBASIS*NBASIS
      I020=I010+NBASIS*NBASIS
      CALL ZERO(ORGDEN,NBASIS*NBASIS)
      DO 5 ISPIN=1,1+IUHF
       IOFF=ISPIN+2*ICORR
       I030=I020+NBASIS*NBASIS
       I040=I030+NBASIS*NBASIS
       I050=I040+NATOMS
       I060=I050+NATOMS
       I070=I060+NATOMS
       I080=I070+NATOMS
       I090=I080+NBASIS*NBASIS
       I100=I090+NBASIS*NBASIS
       I110=I100+NBASIS*NBASIS
       I120=I110+NBASIS*NBASIS
       CALL T2FULAO(SCR(I000),SCR(I010),SCR(I020),NBASX,NBASX,
     &              NBASIS,VECLAB(ISPIN),'TESTVECT',
     &              '        ','        ',0,0)
       CALL GETREC(20,'JOBARC','TESTVECT',NBASX*NBASIS*IINTFP,SCR)
       CALL SCOPY (NBASX*NBASIS,SCR,1,SCR(I080),1)
       CALL GETREC(20,'JOBARC',OCCLAB(IOFF),NBASX*IINTFP,SCR(I010))
       CALL ZERO(SCR(I090),NBASIS*NBASIS)
       CALL SCOPY (NBASX,SCR(I010),1,SCR(I090),NBASX+1)
       IOFF=1
       CALL XGEMM('N','T',NBASX,NBASIS,NBASX,ONE,SCR(I090),NBASX,
     &            SCR,NBASIS,ZILCH,SCR(I010),NBASX)
       CALL XGEMM('N','N',NBASIS,NBASIS,NBASX,ONE,SCR,NBASIS,
     &            SCR(I010),NBASX,ZILCH,ORGDEN,NBASIS)
C
       CALL SCOPY(NBASIS*NBASIS,orgden,1,SCR(I010),1)
C
C NOW LOOP OVER ALL GROUP OPERATIONS AND TRANSFORM ONE COLUMN OF THE
C  DENSITY AT A TIME
C
       CALL ZERO(PRJDEN,NBASIS*NBASIS)
       DO 20 IOP=1,IORDGRP
        CALL SCOPY(NBASIS*NBASIS,ORGDEN,1,SCR,1)
        IOFF1=I000
        IOFF2=I010
        DO 21 I=1,NBASIS
         CALL PROJ(NATOMS,IOP,IPTR,NBFATM,ILCATM,SCR(IOFF1),
     &             SCR(IOFF2),SCR(I020),NBASIS,SYOP,NUMANG)
         IOFF1=IOFF1+NBASIS
         IOFF2=IOFF2+NBASIS
21      CONTINUE 
        CALL MTRAN2(SCR(I010),NBASIS)
        IOFF1=I010
        IOFF2=I000
        DO 22 I=1,NBASIS
         CALL PROJ(NATOMS,IOP,IPTR,NBFATM,ILCATM,SCR(IOFF1),
     &             SCR(IOFF2),SCR(I020),NBASIS,SYOP,NUMANG)
         IOFF1=IOFF1+NBASIS
         IOFF2=IOFF2+NBASIS
22      CONTINUE 
        CALL MTRAN2(SCR(I010),NBASIS)
        CALL SAXPY(NBASIS*NBASIS,ONE,SCR,1,PRJDEN,1)
20     CONTINUE
       FACT=1.0/DFLOAT(IORDGRP)
       CALL SSCAL(NBASIS*NBASIS,FACT,PRJDEN,1)
C
C TRANSFORM THE PROJECTED DENSITY BACK TO THE ORIGINAL ORTHOGONAL
C  BASIS AND TAKE TRACE.  TO DO THIS, WE NEED THE INVERSE OF THE 
C  EIGENVECTOR MATRIX.  THE QUANTITY SC IS FORMED BELOW.
C
C
C     FORM [C+S ]+ = SC
C
       CALL GETREC(20,'JOBARC',VECLAB(ISPIN),NBASX*NBASX*IINTFP,
     &             SCR(I080))
       CALL GETREC(20,'JOBARC','AOOVRLAP',NBASX*NBASX*IINTFP,
     &             SCR(I110))
       CALL XGEMM('N','N',NBASX,NBASX,NBASX,ONE,SCR(I110),NBASX,
     &            SCR(I080),NBASX,ZILCH,SCR(I100),NBASX)
C     
C     Since we need to multiply wil the eigenvectors in the full AO
C     basis, TC, we really need [C+ST^-1]+ = (T^-1)+SC
C
       Call GetRec(20, 'JOBARC', 'ZMAT2CMP', NBASX*NBASIS*IINTFP,
     $      SCR(I110))
       CALL XGEMM('T','N',NBASIS,NBASX,NBASX,ONE,SCR(I110),NBASX,
     &            SCR(I100),NBASX,ZILCH,SCR(I080),NBASIS)
C
C NOW TRANSFORM THE DENSITY
C
       CALL XGEMM('N','N',NBASIS,NBASX,NBASIS,ONE,PRJDEN,NBASIS,
     &            SCR(I080),NBASIS,ZILCH,SCR,NBASIS)
       CALL XGEMM('T','N',NBASX,NBASX,NBASIS,ONE,SCR(I080),NBASIS,
     &            SCR,NBASIS,ZILCH,PRJDEN,NBASX)
c replacement for minv call is above
c       CALL MINV (SCR(I080),NBASIS,NBASIS,SCR,DET,ZMINV,0,1)
c       CALL XGEMM('N','T',NBASIS,NBASX,NBASIS,ONE,PRJDEN,NBASIS,
c     &            SCR(I080),NBASX,ZILCH,SCR,NBASIS)
c       CALL XGEMM('N','N',NBASX,NBASX,NBASIS,ONE,SCR(I080),NBASX,
c     &            SCR,NBASIS,ZILCH,PRJDEN,NBASX)
C
C TRANSFORM DENSITY BACK TO MO BASIS
C
c tricky stuff above
       TRACE=SSUM(NBASIS,PRJDEN,NBASX+1)
       FACT=SDOT(NBASIS,SCR(I090),NBASX+1,SCR(I090),NBASX+1)
C       WRITE(LUOUT,5000)SPCASE(ISPIN),TRACE
C 5000  FORMAT(T15,'Total number of ',A5,' electrons = ',F13.9)
       IF(IPRINT.GT.10) THEN
         IOFF=1
         DO 33 IBAS=1,NBASX
          WRITE(LUOUT,'((2F20.10))')PRJDEN(IOFF),SCR(I090+IOFF-1)
          IOFF=IOFF+NBASX+1
33       CONTINUE
       ENDIF
       IF(FACT.NE.0)THEN
        Z=SDOT(NBASX*NBASX,PRJDEN,1,SCR(I090),1)/FACT
       ELSE
        Z=0.0
       ENDIF
       WRITE(LUOUT,300)SPCASE(ISPIN),Z
300    FORMAT(T7,'Trace of projected ',A5,' density matrix = ',
     &             F13.9,/)
       IF(ABS(Z-ONE).GT.TOL) THEN
C
C IF DENSITY IS NOT SYMMETRIC, TRANSFORM THE PROJECTED DENSITY
C  TO THE COMPUTATIONAL SO BASIS AND DUMP IT TO JOBARC 
C
        SYMFAIL(ISPIN)=.TRUE.
        CALL GETREC(20,'JOBARC','SCFEVC'//SP(ISPIN)//'0',
     &              NBASX*NBASX*IINTFP,SCR(I090))
        CALL XGEMM('N','N',NBASX,NBASX,NBASX,ONE,SCR(I090),
     &             NBASX,PRJDEN,NBASX,ZILCH,SCR(I080),NBASX)
        CALL XGEMM('N','T',NBASX,NBASX,NBASX,ONE,SCR(I080),
     &             NBASX,SCR(I090),NBASX,ZILCH,PRJDEN,NBASX)
        CALL PUTREC(20,'JOBARC','PRJDENS'//SP(ISPIN),
     &              NBASX*NBASX*IINTFP,PRJDEN)
       ENDIF
       
5     CONTINUE
C
      CALL GETREC(20,'JOBARC','LINEAR  ',IONE,ILIN)
      DO 70 ISPIN=1,IUHF+1
        IF(SYMFAIL(ISPIN)) THEN
          WRITE(LUOUT,5100)USPCASE(ISPIN)
 5100     FORMAT(T7,'WARNING!!!  ',A5,' part of wavefunction is not ',
     &              'symmetric!')
          IF(IFLAGS(69).EQ.0.AND.ILIN.EQ.0)KILLFLG(3)=1
        ELSE
          WRITE(LUOUT,5101)USPCASE(ISPIN)
 5101     FORMAT(T7,A5,' part of wavefunction is symmetric.')
        ENDIF
   70 CONTINUE
      WRITE(LUOUT,5110)
C
      IF(ILIN.EQ.1.AND.(SYMFAIL(1).OR.SYMFAIL(2))) THEN
        WRITE(LUOUT,5120)
        WRITE(LUOUT,5110)
      ENDIF
C
 5110 FORMAT(/)
 5120 FORMAT(T7,'Since molecule is linear, calculation will proceed.')
C
      RETURN
      END
